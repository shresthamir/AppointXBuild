{"version":3,"sources":["webpack:///./src/app/common/services/validation.services.ts","webpack:///./src/app/pages/ChangePassword/ChangePassword.component.html","webpack:///./src/app/pages/ChangePassword/ChangePassword.component.scss","webpack:///./src/app/pages/ChangePassword/ChangePassword.component.ts","webpack:///./src/app/pages/ChangePassword/ChangePassword.module.ts","webpack:///./src/app/pages/ChangePassword/ChangePassword.routing.ts"],"names":[],"mappings":"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","file":"ChangePassword-ChangePassword-module.6d05bad98e1f15b0d038.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidationService {\r\n  private passwordPattern = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\r\n\r\n  patternValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (!control.value) return null;\r\n      return this.passwordPattern.test(control.value)\r\n        ? null\r\n        : { invalidPassword: true };\r\n    };\r\n  }\r\n}","module.exports = \"<body class=\\\"w-100 my-50\\\" style=\\\"background-color: #808080;\\\">\\r\\n  <div class=\\\"container-fluid min-vh-100 d-flex align-items-center justify-content-center\\\" style=\\\"background: #e5e5e5;\\\">\\r\\n    <div class=\\\"card shadow border-0 p-4\\\" style=\\\"max-width: 400px; width: 100%; background-color: #FFFFFF;\\\">\\r\\n      <form [formGroup]=\\\"changePasswordForm\\\" (ngSubmit)=\\\"onSubmit($event)\\\">\\r\\n        <h2 class=\\\"card-title text-center my-4 text-primary\\\">Change Password</h2>\\r\\n        <div class=\\\"form-group mb-3 position-relative\\\">\\r\\n          <label for=\\\"oldPassword\\\" class=\\\"form-label\\\">Old Password:</label>\\r\\n          <input [type]=\\\"showOldPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"oldPassword\\\"\\r\\n            placeholder=\\\"Old password\\\" formControlName=\\\"oldPassword\\\">\\r\\n          <i class=\\\"fa\\\" [ngClass]=\\\"showOldPassword ? 'fa-eye-slash' : 'fa-eye'\\\" (click)=\\\"toggleOldPassword()\\\"\\r\\n            style=\\\"position:absolute; top:38px; right:10px; cursor:pointer;\\\"></i>\\r\\n          <small class=\\\"form-text text-danger text-left msgtext\\\"\\r\\n            *ngIf=\\\"changePasswordForm.controls.oldPassword.invalid && changePasswordForm.controls.oldPassword.touched && changePasswordForm.controls.oldPassword.errors?.required\\\">\\r\\n            Old password is required\\r\\n          </small>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group mb-3 position-relative\\\">\\r\\n          <label for=\\\"newPassword\\\" class=\\\"form-label\\\">New Password:</label>\\r\\n          <input [type]=\\\"showNewPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\"\\r\\n            placeholder=\\\"New password\\\" formControlName=\\\"newPassword\\\">\\r\\n          <i class=\\\"fa\\\" [ngClass]=\\\"showNewPassword ? 'fa-eye-slash' : 'fa-eye'\\\" (click)=\\\"toggleNewPassword()\\\"\\r\\n            style=\\\"position:absolute; top:38px; right:10px; cursor:pointer;\\\"></i>\\r\\n          <div class=\\\"inputFieldWrapper\\\">\\r\\n            <small class=\\\"form-text text-danger text-left msgtext\\\"\\r\\n              *ngIf=\\\"changePasswordForm.controls.newPassword.invalid && changePasswordForm.controls.newPassword.touched\\\">\\r\\n              {{getPasswordError()}}\\r\\n            </small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group mb-4 position-relative\\\">\\r\\n          <label for=\\\"newPasswordConfirm\\\" class=\\\"form-label\\\">Confirm Password:</label>\\r\\n          <input [type]=\\\"showConfirmPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" id=\\\"newPasswordConfirm\\\"\\r\\n            placeholder=\\\"Confirm new password\\\" formControlName=\\\"newPasswordConfirm\\\">\\r\\n          <i class=\\\"fa\\\" [ngClass]=\\\"showConfirmPassword ? 'fa-eye-slash' : 'fa-eye'\\\" (click)=\\\"toggleConfirmPassword()\\\"\\r\\n            style=\\\"position:absolute; top:38px; right:10px; cursor:pointer;\\\"></i>\\r\\n          <div class=\\\"inputFieldWrapper\\\">\\r\\n            <small class=\\\"form-text text-danger text-left msgtext\\\"\\r\\n              *ngIf=\\\"changePasswordForm.controls.newPasswordConfirm.invalid && changePasswordForm.controls.newPasswordConfirm.touched\\\">\\r\\n              {{getConfirmPasswordError()}}\\r\\n            </small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-flex justify-content-between mb-3 \\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">SUBMIT</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ba-modal #childModal title=\\\"Information\\\" size=\\\"sm\\\">\\r\\n    {{DialogMessage}}\\r\\n  </ba-modal>\\r\\n\\r\\n  <div class=\\\"overlay\\\" *ngIf=\\\"popup\\\">\\r\\n    <div class=\\\"popup\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-sm-12 text-center\\\">\\r\\n          <label>{{message}}</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-sm-12 text-center\\\">\\r\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"popup=false\\\">Ok</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</body>\"","module.exports = \".input-group .btn-outline-secondary{border-left:0;border-color:#ced4da}.input-group .btn-outline-secondary:hover{background-color:#f8f9fa}.input-group .form-control{border-right:0}.inputFieldWrapper{margin-top:0.25rem}.msgtext{font-size:0.875rem}input::-ms-reveal,input::-ms-clear{display:none}\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { AuthService } from '../../common/services/permission/authService.service';\r\nimport { ValidationService } from '../../common/services/validation.services';\r\nimport { BaModalComponent } from '../../theme/components/baModal/baModal.component';\r\n\r\ninterface Message {\r\n  text: string;\r\n  type: 'success' | 'error' | 'warning';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-change-password-modal',\r\n  templateUrl: './ChangePassword.component.html',\r\n  styleUrls: ['./ChangePassword.component.scss']\r\n})\r\nexport class ChangePassword implements OnInit {\r\n  changePasswordForm: FormGroup;\r\n  DialogMessage: string = null;\r\n  @ViewChild('childModal') childModal: BaModalComponent;\r\n  showOldPassword: boolean = false;\r\n  showNewPassword: boolean = false;\r\n  showConfirmPassword: boolean = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private validationService: ValidationService\r\n  ) {\r\n    this.changePasswordForm = this.fb.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: ['', [\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(32),\r\n        this.validationService.patternValidator()\r\n      ]],\r\n      newPasswordConfirm: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.changePasswordForm.statusChanges.subscribe(status => {\r\n      console.log('Form status:', status);\r\n      console.log('Form errors:', this.changePasswordForm.errors);\r\n      console.log('newPassword errors:', this.f['newPassword'].errors);\r\n      console.log('newPasswordConfirm errors:', this.f['newPasswordConfirm'].errors);\r\n    });\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.changePasswordForm.controls;\r\n  }\r\n\r\n  toggleOldPassword(): void {\r\n    this.showOldPassword = !this.showOldPassword;\r\n  }\r\n\r\n  toggleNewPassword(): void {\r\n    this.showNewPassword = !this.showNewPassword;\r\n  }\r\n\r\n  toggleConfirmPassword(): void {\r\n    this.showConfirmPassword = !this.showConfirmPassword;\r\n  }\r\n\r\n  showMessage(message: string, closeAfter = 3000): void {\r\n    this.DialogMessage = message;\r\n    if (!this.childModal.isShown) {\r\n      this.childModal.show();\r\n    }\r\n    if (closeAfter >= 0) {\r\n      setTimeout(() => {\r\n        this.childModal.hide();\r\n        this.DialogMessage = null;\r\n      }, closeAfter);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.changePasswordForm.invalid) {\r\n      this.showMessage('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    const oldPassword = this.f['oldPassword'].value;\r\n    const newPassword = this.f['newPassword'].value;\r\n    const newPasswordConfirm = this.f['newPasswordConfirm'].value;\r\n\r\n    if (newPassword !== newPasswordConfirm) {\r\n      this.f['newPasswordConfirm'].setErrors({ passwordMismatch: true });\r\n      this.showMessage('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    if (oldPassword === newPassword) {\r\n      this.f['newPassword'].setErrors({ samePassword: true });\r\n      this.showMessage('New password cannot be the same as the old password.');\r\n      return;\r\n    }\r\n\r\n    this.DialogMessage = null;\r\n    this.authService.changePassword(oldPassword, newPassword)\r\n      .subscribe({\r\n        next: (data) => {\r\n          console.log('API response:', data);\r\n          if (data.status === 'ok') {\r\n            this.showMessage('Password changed successfully!');\r\n            setTimeout(() => {\r\n              this.router.navigate(['/login']);\r\n            }, 4000);\r\n          } else {\r\n            this.showMessage('Failed to change password. Invalid response from server.');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this.showMessage('Failed to change password. Please try again.');\r\n          console.error('Password change error:', error);\r\n        }\r\n      });\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  get passwordControl(): AbstractControl {\r\n    return this.f['newPassword'];\r\n  }\r\n\r\n  get confirmPasswordControl(): AbstractControl {\r\n    return this.f['newPasswordConfirm'];\r\n  }\r\n\r\n  getPasswordError(): string {\r\n    const control = this.passwordControl;\r\n    if (control.hasError('required')) return 'Please enter a valid password';\r\n    if (control.hasError('minlength')) return 'Minimum password length is 8 characters';\r\n    if (control.hasError('maxlength')) return 'Maximum password length is 32 characters';\r\n    if (control.hasError('invalidPassword')) {\r\n      return 'Password must contain at least 8 characters, including lowercase, uppercase, and numeric characters';\r\n    }\r\n    if (control.hasError('samePassword')) {\r\n      return 'New password must not match the old password';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getConfirmPasswordError(): string {\r\n    const control = this.confirmPasswordControl;\r\n    if (control.hasError('required')) return 'Please confirm the password';\r\n    if (control.hasError('passwordMismatch')) return 'Passwords do not match';\r\n    return '';\r\n  }\r\n\r\n  hideChildModal(): void {\r\n    this.childModal.hide();\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { ChangePassword } from './ChangePassword.component';\r\nimport { routing } from './ChangePassword.routing';\r\nimport { ModalModule } from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ModalModule.forRoot(),\r\n    routing,\r\n    NgaModule\r\n  ],\r\n  declarations: [\r\n    ChangePassword\r\n  ],\r\n  exports: [ChangePassword]\r\n})\r\nexport class ChangePasswordModule { }","import { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { ChangePassword } from './ChangePassword.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ChangePassword\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ChangePassword\r\n  }\r\n];\r\n\r\nexport const routing: ModuleWithProviders<RouterModule> = RouterModule.forChild(routes);"],"sourceRoot":""}