{"version":3,"sources":["webpack:///./node_modules/ng2-ckeditor/lib/ckeditor.component.js","webpack:///./node_modules/ng2-ckeditor/lib/ckeditor.module.js","webpack:///./node_modules/ng2-ckeditor/lib/index.js","webpack:///./src/app/pages/schedule/schedule.scss?7379","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./src/app/pages/schedule/components/AppointmentRequest/RequestList.component.html","webpack:///./src/app/pages/schedule/components/AppointmentRequest/RequestList.component.ts","webpack:///./src/app/pages/schedule/components/AppointmentRequest/requestDetail.component.html","webpack:///./src/app/pages/schedule/components/AppointmentRequest/requestDetail.component.ts","webpack:///./src/app/pages/schedule/components/CheckIn/checkIn.component.html","webpack:///./src/app/pages/schedule/components/CheckIn/checkIn.component.ts","webpack:///./src/app/pages/schedule/components/CheckIn/kot-print.component.ts","webpack:///./src/app/pages/schedule/components/CheckOut/CheckInList.component.html","webpack:///./src/app/pages/schedule/components/CheckOut/CheckInList.component.ts","webpack:///./src/app/pages/schedule/components/CheckOut/CheckOut.component.html","webpack:///./src/app/pages/schedule/components/CheckOut/CheckOut.component.ts","webpack:///./src/app/pages/schedule/components/CustomerSelect/CustomerSelect.html","webpack:///./src/app/pages/schedule/components/CustomerSelect/customerSelect.component.ts","webpack:///./src/app/pages/schedule/components/CustomerSelect/customerSelect.pipe.ts","webpack:///./src/app/pages/schedule/components/CustomerSelect/mobileSelect.pipe.ts","webpack:///./src/app/pages/schedule/components/FollowUp/followup.component.html","webpack:///./src/app/pages/schedule/components/FollowUp/followup.component.ts","webpack:///./src/app/pages/schedule/components/ScheduleInput/TimelineContextMenu/timelineContextMenu.component.css","webpack:///./src/app/pages/schedule/components/ScheduleInput/TimelineContextMenu/timelineContextMenu.component.html","webpack:///./src/app/pages/schedule/components/ScheduleInput/TimelineContextMenu/timelineContextMenu.component.ts","webpack:///./src/app/pages/schedule/components/ScheduleInput/masterSchedule.component.ts","webpack:///./src/app/pages/schedule/components/ScheduleInput/masterSchedule.html","webpack:///./src/app/pages/schedule/components/ScheduleInput/schedule.html","webpack:///./src/app/pages/schedule/components/ScheduleInput/scheduleInput.component.ts","webpack:///./src/app/pages/schedule/components/ScheduleSearch/customer-all-schedule.component.ts","webpack:///./src/app/pages/schedule/components/ScheduleSearch/customer-all-schedule.html","webpack:///./src/app/pages/schedule/components/TreatmentEntry/Treatment.component.ts","webpack:///./src/app/pages/schedule/components/TreatmentEntry/Treatment.html","webpack:///./src/app/pages/schedule/components/TreatmentEntry/TreatmentDetails.component.html","webpack:///./src/app/pages/schedule/components/TreatmentEntry/TreatmentDetails.component.ts","webpack:///./src/app/pages/schedule/components/TreatmentEntry/TreatmentList.component.html","webpack:///./src/app/pages/schedule/components/TreatmentEntry/TreatmentList.component.ts","webpack:///./src/app/pages/schedule/schedule.component.ts","webpack:///./src/app/pages/schedule/schedule.module.ts","webpack:///./src/app/pages/schedule/schedule.routing.ts","webpack:///./src/app/pages/schedule/scheduleInput.service.ts","webpack:///./src/assets/js/dayjs.min.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,kEAAkE,oBAAoB;AACtF,mEAAmE,qBAAqB;AACxF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wEAAwE,0BAA0B,EAAE;AACpG;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,SAAS,uBAAuB;AAChC;AACA;AACA,oBAAoB,qBAAqB;AACzC,sBAAsB,qBAAqB;AAC3C,oBAAoB,sBAAsB;AAC1C,mBAAmB,sBAAsB;AACzC,kBAAkB,sBAAsB;AACxC,mBAAmB,sBAAsB;AACzC,kBAAkB,0CAA0C;AAC5D,mBAAmB,qBAAqB;AACxC;AACA;AACA,CAAC;AACD;AACA,8C;;;;;;;;;;;;ACvJa;AACb,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,2BAA2B,mBAAO,CAAC,mFAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;;;;;AC5Ba;AACb,wBAAwB,mBAAO,CAAC,6EAAmB;AACnD;AACA,2BAA2B,mBAAO,CAAC,mFAAsB;AACzD;AACA,iC;;;;;;;;;;;ACLA;;AAEA;AACA,cAAc,mBAAO,CAAC,sNAA2L;AACjN,4CAA4C,QAAS;AACrD;AACA,aAAa,mBAAO,CAAC,oGAAqD,aAAa;AACvF;AACA;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;ACTf,SAAS,mBAAO,CAAC,uCAAM;AACvB,SAAS,mBAAO,CAAC,uCAAM;;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA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","file":"schedule-schedule-module.c020bc491455169997c4.js","sourcesContent":["\"use strict\";\n// Imports\nvar core_1 = require('@angular/core');\nvar forms_1 = require('@angular/forms');\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\nvar CKEditorComponent = (function () {\n    /**\n     * Constructor\n     */\n    function CKEditorComponent(zone) {\n        this.change = new core_1.EventEmitter();\n        this.ready = new core_1.EventEmitter();\n        this.blur = new core_1.EventEmitter();\n        this.focus = new core_1.EventEmitter();\n        this._value = '';\n        this.zone = zone;\n    }\n    Object.defineProperty(CKEditorComponent.prototype, \"value\", {\n        get: function () { return this._value; },\n        set: function (v) {\n            if (v !== this._value) {\n                this._value = v;\n                this.onChange(v);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * On component destroy\n     */\n    CKEditorComponent.prototype.ngOnDestroy = function () {\n        var _this = this;\n        if (this.instance) {\n            setTimeout(function () {\n                _this.instance.removeAllListeners();\n                _this.instance.destroy();\n                _this.instance = null;\n            });\n        }\n    };\n    /**\n     * On component view init\n     */\n    CKEditorComponent.prototype.ngAfterViewInit = function () {\n        // Configuration\n        this.ckeditorInit(this.config || {});\n    };\n    /**\n     * Value update process\n     */\n    CKEditorComponent.prototype.updateValue = function (value) {\n        var _this = this;\n        this.zone.run(function () {\n            _this.value = value;\n            _this.onChange(value);\n            _this.onTouched();\n            _this.change.emit(value);\n        });\n    };\n    /**\n     * CKEditor init\n     */\n    CKEditorComponent.prototype.ckeditorInit = function (config) {\n        var _this = this;\n        if (!CKEDITOR) {\n            console.error('Please include CKEditor in your page');\n            return;\n        }\n        // CKEditor replace textarea\n        this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n        // Set initial value\n        this.instance.setData(this.value);\n        // listen for instanceReady event\n        this.instance.on('instanceReady', function (evt) {\n            // send the evt to the EventEmitter\n            _this.ready.emit(evt);\n        });\n        // CKEditor change event\n        this.instance.on('change', function () {\n            _this.onTouched();\n            var value = _this.instance.getData();\n            // Debounce update\n            if (_this.debounce) {\n                if (_this.debounceTimeout)\n                    clearTimeout(_this.debounceTimeout);\n                _this.debounceTimeout = setTimeout(function () {\n                    _this.updateValue(value);\n                    _this.debounceTimeout = null;\n                }, parseInt(_this.debounce));\n            }\n            else {\n                _this.updateValue(value);\n            }\n        });\n        // CKEditor blur event\n        this.instance.on('blur', function (evt) {\n            _this.blur.emit(evt);\n        });\n        // CKEditor focus event\n        this.instance.on('focus', function (evt) {\n            _this.focus.emit(evt);\n        });\n    };\n    /**\n     * Implements ControlValueAccessor\n     */\n    CKEditorComponent.prototype.writeValue = function (value) {\n        this._value = value;\n        if (this.instance)\n            this.instance.setData(value);\n    };\n    CKEditorComponent.prototype.onChange = function (_) { };\n    CKEditorComponent.prototype.onTouched = function () { };\n    CKEditorComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    CKEditorComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    CKEditorComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'ckeditor',\n                    providers: [\n                        {\n                            provide: forms_1.NG_VALUE_ACCESSOR,\n                            useExisting: core_1.forwardRef(function () { return CKEditorComponent; }),\n                            multi: true\n                        }\n                    ],\n                    template: \"<textarea #host></textarea>\",\n                },] },\n    ];\n    /** @nocollapse */\n    CKEditorComponent.ctorParameters = [\n        { type: core_1.NgZone, },\n    ];\n    CKEditorComponent.propDecorators = {\n        'config': [{ type: core_1.Input },],\n        'debounce': [{ type: core_1.Input },],\n        'change': [{ type: core_1.Output },],\n        'ready': [{ type: core_1.Output },],\n        'blur': [{ type: core_1.Output },],\n        'focus': [{ type: core_1.Output },],\n        'host': [{ type: core_1.ViewChild, args: ['host',] },],\n        'value': [{ type: core_1.Input },],\n    };\n    return CKEditorComponent;\n}());\nexports.CKEditorComponent = CKEditorComponent;\n//# sourceMappingURL=ckeditor.component.js.map","\"use strict\";\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar ckeditor_component_1 = require('./ckeditor.component');\n/**\n * CKEditorModule\n */\nvar CKEditorModule = (function () {\n    function CKEditorModule() {\n    }\n    CKEditorModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [\n                        common_1.CommonModule\n                    ],\n                    declarations: [\n                        ckeditor_component_1.CKEditorComponent,\n                    ],\n                    exports: [\n                        ckeditor_component_1.CKEditorComponent,\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    CKEditorModule.ctorParameters = [];\n    return CKEditorModule;\n}());\nexports.CKEditorModule = CKEditorModule;\n//# sourceMappingURL=ckeditor.module.js.map","\"use strict\";\nvar ckeditor_module_1 = require('./ckeditor.module');\nexports.CKEditorModule = ckeditor_module_1.CKEditorModule;\nvar ckeditor_component_1 = require('./ckeditor.component');\nexports.CKEditorComponent = ckeditor_component_1.CKEditorComponent;\n//# sourceMappingURL=index.js.map","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/postcss-loader/lib/index.js??embedded!../../../../node_modules/sass-loader/dist/cjs.js??ref--10-2!./schedule.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/postcss-loader/lib/index.js??embedded!../../../../node_modules/sass-loader/dist/cjs.js??ref--10-2!./schedule.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/postcss-loader/lib/index.js??embedded!../../../../node_modules/sass-loader/dist/cjs.js??ref--10-2!./schedule.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","module.exports = \"<div class=\\\"widgets\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-10 col-md-4\\\" >\\r\\n        <select class=\\\"form-control\\\" id=\\\"outlet\\\" (change)=\\\"branchChanged()\\\" [(ngModel)] = \\\"selectedBranch\\\">\\r\\n            <option *ngFor = \\\"let branch of userBranches\\\" value=\\\"{{branch.branchId}}\\\">{{branch.branchName}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div>\\r\\n    <ba-card title=\\\"Requests List\\\"  baCardClass=\\\"with-scroll\\\">\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\"></ng2-smart-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-md\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>          \\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"modal-title glyphicon glyphicon-warning-sign\\\" style=\\\"display:inline-block\\\"></div>\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Once you delete the Treatment you can't recover it back. Are U sure you want to delete this Treatment?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n      </div>!\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ngx-bootstrap'\r\nimport { LocalDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport 'style-loader!../../../masters/components/smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Branch, Treatment } from \"../../../../common/interfaces\"\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { title } from 'process';\r\nimport { GlobalState } from '../../../../global.state';\r\nimport { LabelPipe } from '../../../../theme/pipes/label.pipe';\r\n\r\n@Component({\r\n  selector: 'appointment-request-list',\r\n  templateUrl: './RequestList.component.html',\r\n  providers: [],\r\n})\r\nexport class AppointmentRequestList {\r\n  query: string = '';\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n  DialogMessage: string = \"You are not authorized\";\r\n  userBranches : Branch[] = [];\r\n  selectedBranch : string;\r\n  settings = {\r\n    mode: 'external',\r\n    delete: null,\r\n    view: null,\r\n    columns: {\r\n      customerName: {\r\n        title: this.state.getGlobalSetting(\"label-dictionary\").filter(item => item.key === 'customer')[0].value,\r\n        type: 'string',\r\n      },\r\n      customerMobile :{\r\n        title: \"Mobile No\",\r\n        type: 'string'\r\n      },\r\n      appointmentDate :{\r\n        title: \"Appointment On\",\r\n        type: 'string'\r\n      },\r\n      serviceCount :{\r\n        title: \"No. of Service\",\r\n        type: 'string'\r\n      },\r\n      updatedAt :{\r\n        title: \"Requested On\",\r\n        type: 'string'\r\n      }\r\n    }\r\n  };\r\n  private subcriptions: Array<Subscription> = [];\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: MasterRepo, \r\n    private _authService: AuthService, \r\n    private router: Router,\r\n    private state: GlobalState,\r\n    private labelPipe:LabelPipe) {    \r\n    this.userBranches = this._authService.getUserProfile().branches;\r\n    this.selectedBranch = this._authService.getUserProfile().defaultBranch;\r\n    this.branchChanged();\r\n  }\r\n\r\n  onEditClick(event): void {\r\n    this.router.navigate([\"/pages/schedule/request-detail\", { cartId: event.data.cartId, mode: \"edit\", returnUrl: this.router.url }]);\r\n  }\r\n\r\n  branchChanged(){\r\n    let Clist: Array<any> = [];\r\n    this.service\r\n    .GetAppointmetRequests(encodeURIComponent(this.selectedBranch))\r\n    .subscribe(\r\n      (data:any) => {\r\n        Clist.push(...data);\r\n      },\r\n      (Error) => console.log(Error),\r\n      () => {\r\n        //console.log(Clist, \"CLIST NG2\")\r\n        this.source.load(Clist);\r\n        console.log(this.source);\r\n      }\r\n    );\r\n  }\r\n\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <ba-card>\\r\\n      <div style=\\\"height: 100%;\\\">\\r\\n        <fieldset style=\\\" border: none;padding: 0; margin: 0;\\\" [disabled]=\\\"disableScheduleInput\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"miti\\\">Miti</label>\\r\\n\\r\\n                <input type=\\\"text\\\" class=\\\"form-control disabledFont\\\" id=\\\"miti\\\" \\r\\n                  disabled [(ngModel)]=\\\"appRequest.miti\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"date\\\">Date</label>\\r\\n                <span class=\\\"input-like\\\">{{appRequest.appointmentDate | date:'dd MMM yyyy'}}</span>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-sm-12  col-md-6 col-lg-4 col-xxl-3\\\">\\r\\n                <label for=\\\"outlet\\\">Outlet</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control  disabledFont\\\" id=\\\"date\\\" \\r\\n                  disabled [(ngModel)]=\\\"appRequest.outlet.branchName\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"form-group\\\">\\r\\n            <table id=\\\"tblPatientInfo\\\">\\r\\n                <tr>\\r\\n                    <td>{{'customer' | labelPipe}} Name</td>\\r\\n                    <td>: {{appRequest.Customer.NAME}}</td>\\r\\n                    <td>Mobile No</td>\\r\\n                    <td>: {{appRequest.Customer.MOBILE}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>Address</td>\\r\\n                    <td>: {{appRequest.Customer.ADDRESS}}</td>\\r\\n                    <td>{{'customer' | labelPipe}} Id</td>\\r\\n                    <td>: {{appRequest.Customer.PATIENT_ID}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>Age</td>\\r\\n                    <td>: {{appRequest.Customer.Age}}</td>\\r\\n                    <td>Gender</td>\\r\\n                    <td>: {{appRequest.Customer.GENDER}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>Membership</td>\\r\\n                    <td>: {{appRequest.Customer.Membership}}</td>\\r\\n                    <td>Email</td>\\r\\n                    <td style=\\\"width: 35%;\\\">: {{appRequest.Customer.EMAIL}}</td>\\r\\n                </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n        </fieldset>\\r\\n      </div>          \\r\\n    </ba-card>\\r\\n      <ba-card title=\\\"Appointments\\\">\\r\\n        <div class=\\\"table-responsive mb-3\\\" style=\\\"height: 500px;\\\">\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 50px;\\\">S.No.</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 40%;\\\">Service</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 80px;\\\">PAX</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\">Appointment Time</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\">Therapist</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 20%;\\\">Room</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <ng-container *ngIf=\\\"appRequest.items && appRequest.items.length > 0\\\">\\r\\n                <tr\\r\\n                  *ngFor=\\\"let app of appRequest.items;let i=index;\\\">\\r\\n                  <td scope=\\\"row\\\">{{i+1}}</td>  \\r\\n                  <td class=\\\"text-capitalize\\\">{{app.serviceName}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">{{app.quantity}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <!-- Display selected time if not editing -->\\r\\n                      <span *ngIf=\\\"!app.editTime\\\" style=\\\"width: 90%; display: inline-block !important;\\\">{{ app.displayTime }}</span>\\r\\n                    \\r\\n                      <!-- Time selection UI -->\\r\\n                      <div *ngIf=\\\"app.editTime\\\" style=\\\"width: 90%; display: inline-block !important;\\\">\\r\\n                        <!-- Dropdown for pre-calculated available time blocks -->\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"app.selectedTimeBlock\\\" (change)=\\\"onTimeBlockChange(app)\\\">\\r\\n                          <option *ngFor=\\\"let block of app.freeBlocks\\\" [ngValue]=\\\"block\\\">\\r\\n                            {{ block.Start }} - {{ block.End }}\\r\\n                          </option>\\r\\n                          <option value=\\\"custom\\\">Other...</option>\\r\\n                        </select>\\r\\n                    \\r\\n                        <!-- Manual time input, only shown if 'Other...' is selected -->\\r\\n                        <input *ngIf=\\\"app.selectedTimeBlock === 'custom'\\\" type=\\\"time\\\" class=\\\"form-control mt-1\\\"\\r\\n                               [(ngModel)]=\\\"app.appointmentTime\\\" />\\r\\n                      </div>\\r\\n                    \\r\\n                      <!-- Edit icon -->\\r\\n                      <i class=\\\"fa fa-pencil\\\" *ngIf=\\\"!app.editTime\\\" (click)=\\\"editTime(app)\\\"></i>\\r\\n                    \\r\\n                      <!-- Confirm icon -->\\r\\n                      <i class=\\\"fa fa-check\\\" *ngIf=\\\"app.editTime\\\" (click)=\\\"confirmTime(app)\\\"></i>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                  <td class=\\\"text-capitalize\\\">\\r\\n                    <angular2-multiselect [data]=\\\"app.employeeList\\\" [settings]=\\\"app.empSetting\\\" [(ngModel)]=\\\"app.employee\\\">\\r\\n                    </angular2-multiselect>\\r\\n                  </td>\\r\\n                  <td class=\\\"text-capitalize\\\">                    \\r\\n                    <angular2-multiselect [data]=\\\"app.roomList\\\" [settings]=\\\"app.roomSetting\\\" [(ngModel)]=\\\"app.room\\\">\\r\\n                    </angular2-multiselect>\\r\\n                  </td>                  \\r\\n                </tr>\\r\\n              </ng-container>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </ba-card>   \\r\\n          \\r\\n            \\r\\n          \\r\\n        \\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveClickEvent()\\\">Submit</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteConformation()\\\"\\r\\n        *ngIf=\\\"mode=='edit'&& disableScheduleInput==false && scheduleInput.billableSchedule!=1\\\">Delete</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Back</button>\\r\\n    </div>\\r\\n    \\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport { Employee, ScheduleInterface, Service, Room, Customer, HolidayModel, Branch } from '../../../../common/interfaces';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { TimePickerComponent } from \"angular2-timepicker/timepicker-component\";\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { settings } from 'cluster';\r\nimport { DefaultEditComponent } from '../../../../ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode';\r\nimport { DisableDateService } from '../../../../common/services/disable-date-picker/disable-date-picker.service';\r\n\r\nimport { DatePipe } from '@angular/common';\r\nimport internal, { strictEqual } from 'assert';\r\nimport { app } from 'electron';\r\nimport { gunzip } from 'zlib';\r\nimport { FreeTimeBlock } from '../../../../common/interfaces/freeTimeblock.interface';\r\nimport { TimeFormatService } from '../../../../common/services/time-format.service';\r\nimport { AppItem, AppRequest } from '../../../../common/interfaces/appoint-request.interface';\r\nimport { Outlet } from '../../../../common/interfaces/outlet.interface';\r\n@Component({\r\n  selector: \"requestDetail\",\r\n  styleUrls: [\"../../schedule.scss\"],\r\n  templateUrl: \"./requestDetail.component.html\",\r\n  providers: [DatePipe],\r\n})\r\nexport class AppointmentRequest implements AfterViewInit {\r\n  @ViewChild(\"childModal\") childModal: ModalDirective;\r\n  appRequest: AppRequest = <AppRequest>{};\r\n  DialogMessage: string = \"Saving data please wait ...\";\r\n  mode: string = \"\";\r\n  modeTitle: string = \"\";\r\n  private returnUrl: string;\r\n  user: any = {};\r\n  serviceList:Service[] = [];\r\n  roomList: Room[] = [];\r\n  employeeList: Employee[] = [];\r\n\r\n  formatDates: any[] = [];\r\n  userBranches: Branch[] = [];\r\n\r\n  \r\n\r\n  constructor(\r\n    private router: Router,\r\n    private masterService: MasterRepo,\r\n    private scheduleService: ScheduleInputService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private _authService: AuthService,\r\n    private datePipe:DatePipe,\r\n    private timeFormatService: TimeFormatService,\r\n  ) {\r\n    let today = new Date().toDateString();\r\n\r\n    this.appRequest.outlet = <Outlet>{};\r\n    this.appRequest.Customer = <Customer>{};\r\n   \r\n    const setting = this._authService.getSetting();\r\n    if (!!this.activatedRoute.snapshot.params[\"returnUrl\"]) {\r\n      this.returnUrl = this.activatedRoute.snapshot.params[\"returnUrl\"];\r\n    } else this.returnUrl = \"/pages/schedule/mastersche\";\r\n    if (!!this.activatedRoute.snapshot.params[\"mode\"]) {\r\n      this.mode = this.activatedRoute.snapshot.params[\"mode\"];\r\n    }\r\n  }\r\n\r\n  private get branchId():string | null {\r\n    try {\r\n      return this.appRequest.outlet.branchId ;  \r\n    }catch (e) {\r\n      console.error(e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getServices(branchId: string) {\r\n    this.masterService.getServices(branchId).subscribe(services => {\r\n      this.serviceList = services;\r\n      this.appRequest.items.forEach(element => {\r\n        element.service = this.serviceList.filter(x=>x.SERVICEID == element.serviceId)[0] || <Service>{};\r\n        element.empSetting = {\r\n            enableCheckAll: true,\r\n            text: 'Select Employees',\r\n            enableSearchFilter: true,\r\n            labelKey:\"NAME\",\r\n            primaryKey:\"EMPLOYEEID\",\r\n            limitSelection: element.quantity * element.service.noOfEmployees\r\n          };\r\n      });\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.roomList = [];\r\n    this.employeeList = [];\r\n    let cartId = this.activatedRoute.snapshot.params['cartId'];\r\n    this.getRequestDetail(cartId);\r\n\r\n    let user = this._authService.getUserProfile();\r\n    this.userBranches = user.branches;\r\n  }\r\n\r\n  getRequestDetail(cartId : string){\r\n    this.masterService.GetAppointmetDetail(encodeURIComponent(cartId)).subscribe((data:any) => {\r\n        this.appRequest = data;                   \r\n        const formattedDate = this.datePipe.transform(data.appointmentDate, \"yyyy-MM-dd\");\r\n        console.log(formattedDate);\r\n        this.appRequest.miti =  this.masterService.toBSDate(formattedDate);\r\n        this.appRequest.items.forEach(element => {           \r\n          element.roomSetting = {\r\n            enableCheckAll: true,\r\n            text: 'Select Rooms',\r\n            enableSearchFilter: true,\r\n            labelKey:\"DESCRIPTION\",\r\n            primaryKey:\"ROOMNO\",\r\n            limitSelection: element.quantity\r\n          };\r\n          this.getEmployees(this.branchId, this.appRequest.appointmentDate, element);\r\n          this.getRooms(this.branchId, this.appRequest.appointmentDate, element);\r\n        });  \r\n        this.getServices(this.branchId);    \r\n      },\r\n      async (error:Response) => { \r\n        this.showMessage((await error.json()).result, 3000); \r\n        this.router.navigate([this.returnUrl]);       \r\n      }\r\n    );        \r\n  }\r\n\r\n\r\n  getEmployees(branchId: string, appDate:Date, service:any) {\r\n    service.employeeList = [];\r\n    this.masterService\r\n      .getAvailableEmployees(branchId, service.serviceId, appDate, service.appointmentTime)\r\n      .subscribe((response: any) => {\r\n        service.employeeList.push(...response);\r\n      });\r\n  }\r\n\r\n  getRooms(branchId: string, appDate:Date, service:any) {\r\n    service.roomList = [];\r\n    this.masterService\r\n      .getAvailableRooms(branchId, service.serviceId, appDate, service.appointmentTime)\r\n      .subscribe((response: any) => {\r\n        service.roomList.push(...response)\r\n      });\r\n  }\r\n\r\n  SaveClickEvent() {\r\n    this.DialogMessage = \"Saving Data please wait...\";\r\n    this.childModal.show();\r\n\r\n    this.onsubmit();\r\n  }\r\n  hideChildModal() {\r\n    this.childModal.hide();\r\n  }\r\n  onsubmit() {\r\n    debugger\r\n    try {\r\n      const a = this.appRequest.items.map((item: AppItem,index) => Array(item.quantity)\r\n        .fill(null)\r\n        .map((_,i)=>({...item, index:i})))\r\n        .reduce((acc, curr) => acc.concat(curr), []);\r\n      const appointmentServices = a\r\n        .map((s, index) => {          \r\n          return {\r\n            EMPLOYEE : s.employee[s.index] || s.employee[0],\r\n            ROOM : s.room[s.index] || s.room[0],\r\n            SERVICE : s.service,\r\n            SNO : index,\r\n            PAX : s.quantity,\r\n            STARTTIME : s.appointmentTime,\r\n          }\r\n        });\r\n\r\n      let body ={\r\n          CUSTOMER : this.appRequest.Customer,\r\n          branch : this.appRequest.outlet,\r\n          DATE : this.appRequest.appointmentDate,\r\n          GUID : this.appRequest.cartId,\r\n          STATUS : 0,\r\n          multipleServiceList : appointmentServices\r\n      }\r\n      this.masterService\r\n        .postmaster(\"add\", body, \"/saveSchedule\")\r\n        .subscribe(\r\n          (data) => {\r\n              if (data.status == \"ok\") {\r\n                this.masterService.ApproveAppointment(this.appRequest.cartId, data.result).subscribe((appResponse:any)=>{\r\n                  if(appResponse.status == \"ok\"){\r\n                    this.showMessage(\"Data Saved Successfully.\",1000);   \r\n                    this.router.navigate([this.returnUrl]);           \r\n                  }\r\n                  else {\r\n                    this.showMessage(data.result)\r\n                  }\r\n                }, error=>alert(error));\r\n            } else {\r\n              this.showMessage(data.result);\r\n            }\r\n          },\r\n          (error) => {\r\n            alert(error);\r\n          }\r\n        );\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n  onCancel() {\r\n    this.router.navigate([this.returnUrl]);\r\n  }\r\n\r\n  showMessage(message:string, closeAfter = 3000){\r\n    this.DialogMessage = message;\r\n    if(!this.childModal.isShown)\r\n        this.childModal.show();\r\n    if(closeAfter>=0){\r\n        setTimeout(() => {\r\n            this.childModal.hide();\r\n        }, closeAfter);\r\n    }\r\n  }\r\n\r\n  editTime(app:AppItem){\r\n    this.scheduleService.getTimeSlotForService(this.appRequest.outlet.branchId, app.serviceId, this.appRequest.appointmentDate).subscribe((response: any) => {\r\n      if(response.status == \"ok\"){\r\n        app.freeBlocks = response.result.map((x:any) => <FreeTimeBlock>x);\r\n        console.log('freeBlocks',app.freeBlocks);\r\n      }\r\n    });\r\n    app.editTime = true;\r\n  }\r\n\r\n  onTimeBlockChange(app:AppItem){\r\n    if(app.selectedTimeBlock && typeof app.selectedTimeBlock === 'object' && 'empList' in app.selectedTimeBlock && 'roomList' in app.selectedTimeBlock){\r\n      const tBlock = app.selectedTimeBlock as FreeTimeBlock;\r\n      app.employeeList = tBlock.empList;\r\n      app.roomList = tBlock.roomList;\r\n      app.displayTime = tBlock.Start;\r\n      app.appointmentTime =  this.timeFormatService.to24HourFormat(app.displayTime);\r\n      app.editTime = false;\r\n    }\r\n  }\r\n\r\n  confirmTime(app:AppItem){\r\n    if(app.selectedTimeBlock === \"custom\"){\r\n      app.displayTime = this.timeFormatService.to12HourFormat(app.appointmentTime);\r\n      this.getEmployees(this.branchId, this.appRequest.appointmentDate, app);\r\n      this.getRooms(this.branchId, this.appRequest.appointmentDate, app);\r\n    }\r\n    app.editTime = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <ba-card>\\r\\n      <div style=\\\"height: 100%;\\\">\\r\\n        <fieldset style=\\\" border: none;padding: 0; margin: 0;\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"miti\\\">Miti</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control disabledFont\\\" id=\\\"miti\\\" \\r\\n                  disabled [(ngModel)]=\\\"checkIn.miti\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"date\\\">Date</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control  disabledFont\\\" id=\\\"date\\\" \\r\\n                  disabled [(ngModel)]=\\\"checkIn.date\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-sm-12  col-md-6 col-lg-4 col-xxl-3\\\">\\r\\n                <label for=\\\"outlet\\\">Outlet</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"outlet\\\" [(ngModel)] = \\\"checkIn.branch\\\"\\r\\n                (ngModelChange)=\\\"getServices(checkIn.branch.branchId);GetAppointmentForCheckIn();\\\">\\r\\n                    <option *ngFor = \\\"let branch of userBranches\\\" [ngValue]=\\\"branch\\\">{{branch.branchName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"!enableCustomerSelect\\\">\\r\\n            <table id=\\\"tblPatientInfo\\\">\\r\\n              <tr>\\r\\n                <td>{{'customer' | labelPipe}} Name</td>\\r\\n                <td>: {{checkIn.CUSTOMER?.NAME}}</td>\\r\\n                <td>Mobile No</td>\\r\\n                <td>: {{checkIn.CUSTOMER?.MOBILE}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Address</td>\\r\\n                <td>: {{checkIn.CUSTOMER?.ADDRESS}}</td>\\r\\n                <td>{{'customer' | labelPipe}} Id</td>\\r\\n                <td>: {{checkIn.CUSTOMER?.PATIENT_ID}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Check In</td>\\r\\n                <td>: {{checkIn.checkInTime}}</td>\\r\\n                <td>Entry User</td>\\r\\n                <td>: {{checkIn.UserId}}</td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <customer-select (customerChanged)=\\\"customerChanged($event)\\\"\\r\\n            *ngIf=\\\"enableCustomerSelect\\\">\\r\\n          </customer-select>\\r\\n        </fieldset>\\r\\n      </div>          \\r\\n    </ba-card>\\r\\n      <ba-card title=\\\"Appointments\\\">\\r\\n        <div class=\\\"table-responsive mb-3\\\">\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\"></th>\\r\\n                <th scope=\\\"col\\\">S.No.</th>\\r\\n                <th scope=\\\"col\\\">Service</th>\\r\\n                <th scope=\\\"col\\\">Therapist</th>\\r\\n                <th scope=\\\"col\\\">Room</th>\\r\\n                <th scope=\\\"col\\\">Start Time</th>\\r\\n                <th scope=\\\"col\\\">End Time</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <ng-container *ngIf=\\\"appointments && appointments.length > 0\\\">\\r\\n                <tr\\r\\n                  *ngFor=\\\"let app of appointments;let i=index;\\\">\\r\\n                  <td scope=\\\"row\\\">{{i+1}}</td>\\r\\n                  <td><input type=\\\"checkbox\\\" [(ngModel)]=\\\"app.isChecked\\\"></td>     \\r\\n                  <td class=\\\"text-capitalize\\\">{{app.service.name}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">{{app.employee.name}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">{{app.room.name}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">{{app.startTime}}</td>\\r\\n                  <td class=\\\"text-capitalize\\\">{{app.endTime}}</td>                                \\r\\n                </tr>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container *ngIf=\\\"userList && (userList | searchData: filter).length === 0\\\">\\r\\n                <tr>\\r\\n                  <td colspan=\\\"8\\\">\\r\\n                    <div class=\\\"font-weight-bold\\\">User List is unavailable.</div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-container>\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </ba-card>\\r\\n\\r\\n      <ba-card title=\\\"Other Services\\\">\\r\\n        <div class=\\\"table-responsive mb-3\\\" style=\\\"height: 500px;\\\">\\r\\n          <table class=\\\"table align-items-center table-flush\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 60px;\\\">S.No.</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 40%;\\\">Service</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 30%;\\\">Therapist</th>\\r\\n                <th scope=\\\"col\\\" style=\\\"width: 30%;\\\">Room</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <ng-container *ngIf=\\\"addOnServices && addOnServices.length > 0\\\">\\r\\n                <tr\\r\\n                  *ngFor=\\\"let addOnService of addOnServices;let i=index;\\\">\\r\\n                  <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                    <td class=\\\"text-capitalize\\\">\\r\\n                      <angular2-multiselect [data]=\\\"ServiceList\\\" [settings]=\\\"serviceSetting\\\" (ngModelChange)=\\\"serviceChangeEvent($event, i)\\\" [(ngModel)]=\\\"addOnService._\\\">\\r\\n                      </angular2-multiselect>\\r\\n                      <!-- <select class=\\\"form-control\\\" name=\\\"serviceselect\\\" id=\\\"serviceselect\\\" [(ngModel)]=\\\"addOnService.service\\\"\\r\\n                        (ngModelChange)=\\\"serviceChangeEvent(addOnService, i)\\\">\\r\\n                        <option *ngFor=\\\"let s of ServiceList\\\" [ngValue]=\\\"s\\\">{{s.DESCRIPTION}}</option>\\r\\n                      </select> -->\\r\\n                    </td>\\r\\n                    <td class=\\\"text-capitalize\\\">\\r\\n                      <select class=\\\"form-control\\\" name=\\\"employeeselect\\\" id=\\\"employeeselect\\\"\\r\\n                      [(ngModel)]=\\\"addOnService.employee\\\">\\r\\n                      <option *ngFor=\\\"let em of addOnService.employeeList\\\" [ngValue]=\\\"em\\\">{{em.NAME}}</option>\\r\\n                    </select>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-capitalize\\\">\\r\\n                      <select class=\\\"form-control\\\" name=\\\"roomselect\\\" id=\\\"roomselect\\\" [(ngModel)]=\\\"addOnService.room\\\">\\r\\n                        <option *ngFor=\\\"let r of addOnService.roomList\\\" [ngValue]=\\\"r\\\">{{r.ROOMNO}}({{r.DESCRIPTION}})</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n                </tr>\\r\\n              </ng-container>\\r\\n              <ng-container>\\r\\n                <div class=\\\"col-12 col-md-2 control-buttons text-right\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                  <img src=\\\"/assets/icon/add.svg\\\" alt=\\\"\\\" (click)=\\\"addNewRow()\\\">\\r\\n                </div>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container *ngIf=\\\"userList && (userList | searchData: filter).length === 0\\\">\\r\\n                <tr>\\r\\n                  <td colspan=\\\"8\\\">\\r\\n                    <div class=\\\"font-weight-bold\\\">User List is unavailable.</div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-container>\\r\\n\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </ba-card>\\r\\n          \\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveClickEvent()\\\"\\r\\n          [disabled]=\\\"(appointments.length==0 && addOnServices.length == 0) || checkIn.CUSTOMER==null\\\">Submit</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Back</button>\\r\\n      </div>\\r\\n    \\r\\n  \\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport { Subscription } from \"rxjs\";\r\nimport { Employee, ScheduleInterface, Service, Room, Customer, HolidayModel, Branch } from '../../../../common/interfaces';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { TimePickerComponent } from \"angular2-timepicker/timepicker-component\";\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { settings } from 'cluster';\r\nimport { DefaultEditComponent } from '../../../../ng2-smart-table/src/ng2-smart-table/components/cell/cell-edit-mode';\r\nimport { DisableDateService } from '../../../../common/services/disable-date-picker/disable-date-picker.service';\r\n\r\nimport { DatePipe } from '@angular/common';\r\nimport internal, { strictEqual } from 'assert';\r\nimport { KOTPrintComponent } from './kot-print.component';\r\nimport { AddOnService, AppointmentSummary, CheckInModel } from '../../../../common/interfaces/check-in.interface';\r\n@Component({\r\n  selector: \"checkIn\",\r\n  styleUrls: [\"../../schedule.scss\"],\r\n  templateUrl: \"./checkIn.component.html\",\r\n  providers: [DatePipe],\r\n})\r\nexport class CheckIn implements AfterViewInit {\r\n  @ViewChild(\"childEmployeeModal\") childEmployeeModal: ModalDirective;\r\n  @ViewChild(\"childModal\") childModal: ModalDirective;\r\n  //Check-In\r\n  checkIn: CheckInModel = <CheckInModel>{};\r\n  //Check-In\r\n  DialogMessage: string = \"Saving data please wait ...\";\r\n  mode: string = \"\";\r\n  customerId: string = \"\";\r\n  modeTitle: string = \"\";\r\n  private returnUrl: string;\r\n  private subcriptions: Array<Subscription> = [];\r\n  user: any = {};\r\n  SNO: number = 0;\r\n  ServiceList: Service[] = [];\r\n  roomList: any[] = [];\r\n  employeeList: any[] = [];\r\n  bookedEmployee: any = <any>{};\r\n\r\n  formatDates: any[] = [];\r\n  userBranches: Branch[] = [];\r\n\r\n  addOnServices: AddOnService[] = <AddOnService[]>[];\r\n  appointments: AppointmentSummary[] = <AppointmentSummary[]>[];\r\n  serviceSetting: any = <any>{};\r\n\r\n  public get enableCustomerSelect(): boolean {\r\n    return this.customerId ? false : true;\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private masterService: MasterRepo,\r\n    private elementRef: ElementRef,\r\n    private activatedRoute: ActivatedRoute,\r\n    private _authService: AuthService,\r\n    private disableDateService: DisableDateService,\r\n    private masterRepo: MasterRepo,\r\n    private datePipe: DatePipe,\r\n    private printKot:KOTPrintComponent\r\n  ) {\r\n    let today = new Date().toDateString();\r\n    var dayjs = require(\"../../../../../assets/js/dayjs.min.js\");\r\n    const formattedDate = dayjs(today).format(\"YYYY-MM-DD\");\r\n\r\n    this.checkIn.date = formattedDate;\r\n    this.checkIn.miti = this.masterService.toBSDate(this.checkIn.date);\r\n\r\n    const setting = this._authService.getSetting();\r\n    if (!!this.activatedRoute.snapshot.params[\"returnUrl\"]) {\r\n      this.returnUrl = this.activatedRoute.snapshot.params[\"returnUrl\"];\r\n    } else this.returnUrl = \"/pages/schedule/mastersche\";\r\n\r\n    if (!!this.activatedRoute.snapshot.params['customerId']) {\r\n          this.customerId = this.activatedRoute.snapshot.params['customerId'];\r\n      }\r\n    this.router.events.subscribe((val) => {\r\n      let data = {\r\n        GUID: this.checkIn.GUID,\r\n        SNO: 0,\r\n      };\r\n    });\r\n\r\n    this.serviceSetting = {\r\n      enableFilterSelectAll: false,\r\n      text: \"Select Service\",\r\n      enableSearchFilter: true,\r\n      labelKey: \"DESCRIPTION\",\r\n      primaryKey: \"SERVICEID\",\r\n      singleSelection: true,\r\n      showCheckbox: false,\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.roomList = [];\r\n    this.employeeList = [];\r\n    this.ServiceList = [];\r\n    let user = this._authService.getUserProfile();\r\n    this.userBranches = user.branches;\r\n    if (this.userBranches) {\r\n      this.checkIn.branch = this.userBranches.find(\r\n        (x) => x.branchId === user.defaultBranch\r\n      );\r\n    }\r\n    this.getServices(user.defaultBranch);\r\n    if(!!this.customerId){\r\n      this.masterRepo.getCustomerById(this.customerId).subscribe(\r\n        (customer: Customer) => {\r\n          console.log(customer);\r\n          this.checkIn.CUSTOMER = customer;\r\n          this.GetAppointmentForCheckIn();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getServices(branchId: string) {\r\n    this.masterService.getServices(branchId).subscribe(services => {\r\n      this.ServiceList = services;\r\n    });\r\n  }\r\n\r\n  getEmployees(branchId: string, service, index: number) {\r\n    this.masterService\r\n      .getEmployeeListNew(branchId)\r\n      .subscribe(branchEmp => {\r\n        let serviceEmp = service.employees;\r\n        this.addOnServices[index].employeeList = branchEmp.filter((bEmp) =>\r\n          serviceEmp.some((emp) => bEmp.EMPLOYEEID == emp.id)\r\n        );\r\n      });\r\n  }\r\n\r\n  getRooms(branchId: string, service, index: number) {\r\n    this.masterService.getRoomListNew(branchId).subscribe(branchRoom => {\r\n      let serviceRoom = service.rooms;\r\n      this.addOnServices[index].roomList = branchRoom.filter((bRoom) =>\r\n        serviceRoom.some((room) => bRoom.ROOMNO == room.id)\r\n      );\r\n    });\r\n  }\r\n\r\n  SaveClickEvent() {\r\n    this.DialogMessage = \"Saving Data please wait...\";\r\n    this.childModal.show();\r\n\r\n    this.onsubmit();\r\n  }\r\n  onsubmit() {\r\n    try {\r\n      let abc: any[] = [];\r\n      abc = this.addOnServices.map((x) => ({\r\n        service: { id: x.service.SERVICEID, name: x.service.DESCRIPTION },\r\n        room: x.room ? { id: x.room.ROOMNO, name: x.room.DESCRIPTION } : null,\r\n        employee: x.employee\r\n          ? { id: x.employee.EMPLOYEEID, name: x.employee.NAME }\r\n          : null,\r\n      }));\r\n      this.checkIn.Services = [...this.appointments.filter(x=>x.isChecked), ...abc];\r\n      let sub = this.masterService\r\n        .postmaster(this.mode, this.checkIn, \"/saveCheckIn\")\r\n        .subscribe(\r\n          (data) => {\r\n            if (data.status == \"ok\") {\r\n              //Displaying dialog message for save with timer of 1 secs\r\n              this.DialogMessage = \"Data Saved Successfully\";\r\n              this.print();\r\n              setTimeout(() => {\r\n                this.childModal.hide();\r\n                this.router.navigate([this.returnUrl]);\r\n              }, 1000);\r\n            } else {\r\n              this.DialogMessage = data.result;\r\n              setTimeout(() => {\r\n                  this.childModal.hide();\r\n              }, 3000)\r\n            }\r\n          },\r\n          (error) => {\r\n            alert(error);\r\n          }\r\n        );\r\n      this.subcriptions.push(sub);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n  onCancel() {\r\n    this.router.navigate([this.returnUrl]);\r\n  }\r\n\r\n  customerChanged(e) {\r\n    this.checkIn.CUSTOMER = e;\r\n    this.GetAppointmentForCheckIn();\r\n  }\r\n\r\n  GetAppointmentForCheckIn() {\r\n    if(!this.checkIn.CUSTOMER) return;\r\n    let model = {\r\n      CUSID: this.checkIn.CUSTOMER.CUSID,\r\n      outletId: this.checkIn.branch.branchId,\r\n      FDate: this.checkIn.date,\r\n    };\r\n    this.masterService.GetAppointmentForCheckIn(model).subscribe(\r\n      (response: any) => {\r\n        this.appointments = response.result;\r\n        if(response.status == \"edit\"){\r\n          this.mode = \"edit\";\r\n          this.checkIn.checkInId = response.RefNo;\r\n          this.appointments.forEach((appointment) => appointment.isChecked = true);\r\n        }\r\n      },\r\n      (error) => {\r\n        let response = JSON.parse(error._body);\r\n        this.DialogMessage = response.result;\r\n        this.childModal.show();\r\n        setTimeout(() => {\r\n          this.checkIn.CUSTOMER = null;\r\n          this.childModal.hide();\r\n        }, 3000);\r\n      }\r\n    );\r\n  }\r\n\r\n  addNewRow() {\r\n    this.addOnServices.push(<AddOnService>{});\r\n  }\r\n\r\n  serviceChangeEvent(e,index) {\r\n    this.addOnServices[index].service = e[0];\r\n    let branchId = this.checkIn.branch.branchId;\r\n    this.getEmployees(branchId, e[0], index);\r\n    this.getRooms(branchId, e[0], index);\r\n  }\r\n\r\n   print(){\r\n      console.log(this.checkIn);\r\n      setTimeout(() => {\r\n        this.printKot.printKOT(\r\n          this.checkIn.CUSTOMER,\r\n          this.checkIn.Services\r\n        );\r\n      }, 1500);\r\n  }  \r\n}\r\n","import { Component, Injectable, OnInit } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport {\r\n  BaseModel,\r\n  Customer,\r\n  Employee,\r\n  Service,\r\n} from \"../../../../common/interfaces\";\r\nimport { LabelPipe } from \"../../../../theme/pipes/label.pipe\";\r\nimport { AppointmentSummary } from \"../../../../common/interfaces/check-in.interface\";\r\n\r\n@Component({\r\n  selector: \"kot-print\",\r\n  template: `<div id=\"print\"></div>`,\r\n})\r\n@Injectable()\r\nexport class KOTPrintComponent {\r\n  today = new Date();\r\n  date =\r\n    this.today.getFullYear() +\r\n    \"-\" +\r\n    (this.today.getMonth() + 1) +\r\n    \"-\" +\r\n    this.today.getDate();\r\n  time =\r\n    this.today.getHours() +\r\n    \":\" +\r\n    this.today.getMinutes() +\r\n    \":\" +\r\n    this.today.getSeconds();\r\n  dateTime = this.date + \" \" + this.time;\r\n\r\n  constructor(private labelPipe: LabelPipe) {}\r\n\r\n  printKOT(customer: Customer, services: AppointmentSummary[]) {\r\n    console.log(\"@@printTop\");\r\n\r\n    let popupWin;\r\n    let tableData = ``;\r\n    services.forEach((service) => {\r\n      tableData  += `<table style='font-size: 11px;font-family: Arial, Helvetica, sans-serif;\r\n              border-collapse: collapse;border-top: none;border-bottom: none;'>`;\r\n      let head = this.head(customer, service.service.name, service.employee.name, service.room.id, service.startTime);\r\n\r\n      tableData += head + `</table>`;\r\n    });\r\n    popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=50%,width=50%\");\r\n    if (\r\n      popupWin.outerWidth < screen.availWidth ||\r\n      popupWin.outerHeight < screen.availHeight\r\n    ) {\r\n      popupWin.moveTo(0, 0);\r\n      popupWin.resizeTo(screen.availWidth, screen.availHeight);\r\n    }\r\n    popupWin.document.write(`<html> <head><title></title>\r\n          <style>\r\n          @media print\r\n          {\r\n            @page {\r\n                size: 80mm auto; /* Width x Height */\r\n                margin: 3mm; /* Adjust margins */\r\n             }\r\n            table { \r\n                page-break-after:always;\r\n                font-family:Arial,sans-serif;\r\n            }\r\n                \r\n          } \r\n          </style></head>\r\n      <body style='width: 300px;heignt:500px;' onload=\"window.print();window.close()\">\r\n      ${tableData}\r\n      </body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n  }\r\n\r\n  head(\r\n    customer: Customer,\r\n    service: string,\r\n    employee: string,\r\n    room: string,\r\n    serviceTime: string\r\n  ): string {\r\n    var header = \"\";\r\n    const customerLabel = this.labelPipe.transform(\"customer\");\r\n    const employeeLabel = this.labelPipe.transform(\"employee\");\r\n    //Reset arrayIndex for multiple calls\r\n\r\n    header =\r\n      header +\r\n      `\r\n        <div class=\"row\">\r\n            <h4 style=\"font-family: Arial, Helvetica, sans-serif;text-align:center\">Service Order Ticket</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>Date: ${this.date}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>${customerLabel}: ${customer.NAME}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>Mobile : ${customer.MOBILE}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>Service : ${service}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>Time : ${serviceTime}</p>\r\n        </div>\r\n         <div class=\"row\">\r\n            <p>Time : ${room}</p>\r\n        </div>\r\n        <div class=\"row\">\r\n            <p>${employeeLabel} : ${employee}</p>\r\n        </div>\r\n        <hr>\r\n        <style>\r\n            p{\r\n                font-size: 11px;\r\n                font-family: Arial, Helvetica, sans-serif;\r\n            }\r\n        </style>\r\n  `;\r\n    return header;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"widgets\\\">\\r\\n  <div>\\r\\n    <ba-card title=\\\"Check - In List\\\" baCardClass=\\\"with-scroll\\\">\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\"></ng2-smart-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-md\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>          \\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"modal-title glyphicon glyphicon-warning-sign\\\" style=\\\"display:inline-block\\\"></div>\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ngx-bootstrap'\r\nimport { LocalDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport 'style-loader!../../../masters/components/smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Treatment } from \"../../../../common/interfaces\"\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { title } from 'process';\r\nimport { GlobalState } from '../../../../global.state';\r\nimport { LabelPipe } from '../../../../theme/pipes/label.pipe';\r\n\r\n\r\n@Component({\r\n  selector: 'check-in-list',\r\n  templateUrl: './CheckInList.component.html',\r\n  providers: [],\r\n})\r\nexport class CheckInList {\r\n  query: string = '';\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n  DialogMessage: string = \"You are not authorized\";\r\n\r\n  settings = {\r\n    mode: 'external',\r\n    delete: null,\r\n    view: null,\r\n    columns: {\r\n      CUSTOMER: {\r\n        title: this.state.getGlobalSetting(\"label-dictionary\").filter(item => item.key === 'customer')[0].value,\r\n        type: 'string',\r\n        valuePrepareFunction: (CUSTOMER) => {\r\n          return CUSTOMER.NAME;\r\n        },\r\n        filterFunction: (Patient, search: string) => {\r\n          if (search.length > 0) {\r\n            return Patient.NAME.toLowerCase().match(search.toLowerCase());\r\n          }\r\n          else {\r\n            return Patient.NAME;\r\n          }\r\n        }\r\n\r\n      },\r\n      time :{\r\n        title: \"Checked-In On\",\r\n        type: 'string'\r\n      },\r\n      userId :{\r\n        title: \"Checked-In By\",\r\n        type: 'string'\r\n      }\r\n    }\r\n  };\r\n  private subcriptions: Array<Subscription> = [];\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: MasterRepo, \r\n    private _authService: AuthService, \r\n    private router: Router,\r\n    private state: GlobalState,\r\n    private labelPipe:LabelPipe) {\r\n    let Clist: Array<any> = [];\r\n    let user = this._authService.getUserProfile();\r\n\r\n    this.service\r\n      .GetAllCheckIns(encodeURIComponent(user.defaultBranch))\r\n      .subscribe(\r\n        (data:any) => {\r\n          Clist.push(...data);\r\n        },\r\n        (Error) => console.log(Error),\r\n        () => {\r\n          //console.log(Clist, \"CLIST NG2\")\r\n          this.source.load(Clist);\r\n          console.log(this.source);\r\n        }\r\n      );\r\n  }\r\n\r\n  onEditClick(event): void {\r\n    this.router.navigate([\"/pages/schedule/checkOut\", { id: event.data.checkInId, mode: \"edit\", returnUrl: this.router.url }])\r\n  }\r\n\r\n}","module.exports = \"<div>\\r\\n    <div>\\r\\n        <ba-card title=\\\"{{'customer' | labelPipe}} Information\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"IntegrateTreatmentWithAppointment || mode != 'add'\\\">\\r\\n                    <table id=\\\"tblPatientInfo\\\">\\r\\n                        <tr>\\r\\n                            <td>{{'customer' | labelPipe}} Name</td>\\r\\n                            <td>: {{model.CUSTOMER.NAME}}</td>\\r\\n                            <td>Mobile No</td>\\r\\n                            <td>: {{model.CUSTOMER.MOBILE}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Address</td>\\r\\n                            <td>: {{model.CUSTOMER.ADDRESS}}</td>\\r\\n                            <td>{{'customer' | labelPipe}} Id</td>\\r\\n                            <td>: {{model.CUSTOMER.PATIENT_ID}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Age</td>\\r\\n                            <td>: {{model.CUSTOMER.Age}}</td>\\r\\n                            <td>Gender</td>\\r\\n                            <td>: {{model.CUSTOMER.GENDER}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Membership</td>\\r\\n                            <td>: {{model.CUSTOMER.Membership}}</td>\\r\\n                            <td>Email</td>\\r\\n                            <td style=\\\"width: 35%;\\\">: {{model.CUSTOMER.EMAIL}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!IntegrateTreatmentWithAppointment && mode == 'add'\\\">\\r\\n                    <customer-select (customerChanged)=\\\"customerChanged($event)\\\"\\r\\n                        (historyChange)=\\\"historyChange($event)\\\">\\r\\n                    </customer-select>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"employeeselect\\\" style=\\\"font-weight: 600;\\\">Staff</label>\\r\\n                        <div>\\r\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\" name=\\\"employeeselect\\\" id=\\\"employeeselect\\\"\\r\\n                                [(ngModel)]=\\\"model.Healer\\\">\\r\\n                                <option *ngFor=\\\"let em of employeeList\\\" [ngValue]=\\\"em\\\">{{em.NAME}}</option>\\r\\n                            </select>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n\\r\\n        <ba-card title=\\\"Service Details\\\">\\r\\n            <div class=\\\"table-responsive mb-3\\\">\\r\\n              <table class=\\\"table align-items-center table-flush\\\">\\r\\n                <thead class=\\\"thead-light\\\">\\r\\n                  <tr>\\r\\n                    <th scope=\\\"col\\\">S.No.</th>\\r\\n                    <th scope=\\\"col\\\">Service</th>\\r\\n                    <th scope=\\\"col\\\">Quanity</th>\\r\\n                    <th scope=\\\"col\\\">Rate</th>\\r\\n                    <th scope=\\\"col\\\">Amount</th>\\r\\n                    <th scope=\\\"col\\\">Discount</th>\\r\\n                    <th scope=\\\"col\\\">Vat</th>\\r\\n                    <th scope=\\\"col\\\">Gross Amount</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <ng-container *ngIf=\\\"model.Services && model.Services.length > 0\\\">\\r\\n                    <tr\\r\\n                      *ngFor=\\\"let app of model.Services;let i=index;\\\">\\r\\n                      <td scope=\\\"row\\\">{{i+1}}</td>\\r\\n                      <td class=\\\"text-capitalize\\\">{{app.service.name}}</td>\\r\\n                      <td class=\\\"text-capitalize\\\">{{app.quantity}}</td>\\r\\n                      <td class=\\\"text-capitalize\\\">{{app.rate | number: '1.2-2'}}</td>\\r\\n                      <td class=\\\"text-capitalize\\\">{{app.amount  | number: '1.2-2'}}</td>\\r\\n                      <td class=\\\"text-capitalize\\\">{{app.discount  | number: '1.2-2'}}</td>                                \\r\\n                      <td class=\\\"text-capitalize\\\">{{app.vat  | number: '1.2-2'}}</td>                                \\r\\n                      <td class=\\\"text-capitalize\\\">{{app.netAmount  | number: '1.2-2'}}</td>       \\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n    \\r\\n                  <ng-container *ngIf=\\\"userList && (userList | searchData: filter).length === 0\\\">\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"8\\\">\\r\\n                        <div class=\\\"font-weight-bold\\\">User List is unavailable.</div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n    \\r\\n                </tbody>\\r\\n                <tfoot class=\\\"tfoot-light\\\">\\r\\n                    <tr>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                        <th scope=\\\"col\\\">Totals</th>\\r\\n                        <th scope=\\\"col\\\">{{model.totalQty}}</th>\\r\\n                        <th scope=\\\"col\\\"></th>\\r\\n                        <th scope=\\\"col\\\">{{model.totAmnt | number: '1.2-2'}}</th>\\r\\n                        <th scope=\\\"col\\\">{{model.discount | number: '1.2-2'}}</th>\\r\\n                        <th scope=\\\"col\\\">{{model.vat | number: '1.2-2'}}</th>\\r\\n                        <th scope=\\\"col\\\">{{model.netAmnt | number: '1.2-2'}}</th>\\r\\n                      </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n          </ba-card>\\r\\n\\r\\n        \\r\\n\\r\\n        \\r\\n        \\r\\n\\r\\n        \\r\\n\\r\\n        <ba-card>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveClickEvent()\\\">Submit</button>\\r\\n            <!--<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteConformation()\\\" *ngIf=\\\"mode=='edit'\\\">Delete\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"mode!='add'\\\" (click)=\\\"printTreatmentEntry(model, true)\\\">Print</button>\\r\\n        -->\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Back</button>\\r\\n        </ba-card>\\r\\n\\r\\n       \\r\\n    </div>\\r\\n\\r\\n    <!-- END FORM -->\\r\\n\\r\\n    <div bsModal #childPreviewModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childPreviewModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Treatment Documents</h4>\\r\\n                </div>\\r\\n                <button id=\\\"button\\\" class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"nextImage($event)\\\">Next</button>\\r\\n                <div id=\\\"container\\\" style=\\\"text-align: center;\\\">\\r\\n                    <img width=\\\"600px\\\" height=\\\"600px\\\" style=\\\"object-fit: contain;\\\" [src]=\\\"selectedImage\\\" id=\\\"image\\\"\\r\\n                        (click)=\\\"onImageClick($event)\\\" />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\" style=\\\"text-align: center;\\\">\\r\\n                    <img *ngFor=\\\"let e of uploadFilesUrl\\\" height=\\\"80px\\\" width=\\\"80px\\\" style=\\\"object-fit: contain;\\\"\\r\\n                        src=\\\"{{e}}\\\" (click)=\\\"changeImage($event)\\\" />\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    {{DialogMessage}}\\r\\n                </div>\\r\\n                <!--<div class=\\\"modal-footer\\\">\\r\\n                      <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                      <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                  </div>!-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    Once you delete the schedule you can't recover it back. Are U sure you want to delete this\\r\\n                    Schedule?\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n                    <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\"","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport { Subscription } from \"rxjs\";\r\nimport { ServerDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport { Treatment, ScheduleInterface, Customer, Employee, Prescription, Disease, Medication } from '../../../../common/interfaces';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { CustomerSelect } from '../CustomerSelect/customerSelect.component';\r\nimport { BrowserXhr, CookieXSRFStrategy, Http, RequestOptions, ResponseOptions, XHRBackend } from '@angular/http';\r\n@Component({\r\n    selector: 'check-out',\r\n\r\n    styleUrls: ['../../schedule.scss'],\r\n    templateUrl: './CheckOut.component.html',\r\n\r\n})\r\nexport class CheckOutEntry {\r\n    @ViewChild('childPreviewModal') childPreviewModal: ModalDirective;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n    @ViewChild(CustomerSelect) CustomerSelect: CustomerSelect\r\n\r\n\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    mode: string = \"\";\r\n    modeTitle: string = '';\r\n    public codeValue: string;\r\n    newCurrentWeight: string;\r\n    private returnUrl: string;\r\n    private subcriptions: Array<Subscription> = [];\r\n    user: any = {};\r\n    SNO: number = 0;\r\n    remarks: string;\r\n    public model: any = {\r\n        CUSTOMER : {},\r\n        checkOutServices:[]\r\n    };\r\n\r\n    constructor(private router: Router, private masterService: MasterRepo, private activatedRoute: ActivatedRoute, private _authService: AuthService) {\r\n        var setting = this._authService.getSetting();\r\n        if (!!this.activatedRoute.snapshot.params['returnUrl']) {\r\n            this.returnUrl = this.activatedRoute.snapshot.params['returnUrl'];\r\n        }\r\n        if (!!this.activatedRoute.snapshot.params['mode']) {\r\n            this.mode = this.activatedRoute.snapshot.params['mode'];\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        let sid = this.activatedRoute.snapshot.params['id'];\r\n        if (this.mode != 'add') {\r\n            this.masterService.postmaster(this.mode, { checkInId: sid }, \"/GetDataForCheckOut\").subscribe(data => {\r\n                if (data.status == 'ok') {\r\n                    if (data.result != null) {\r\n                        this.model = data.result;\r\n                        this.model.totalQty = this.model.Services.reduce((a,b)=>a + b.quantity, 0);\r\n                        this.model.totAmnt = this.model.Services.reduce((a,b)=>a + b.amount, 0);\r\n                        this.model.discount = this.model.Services.reduce((a,b)=>a + b.discount, 0);\r\n                        this.model.vat = this.model.Services.reduce((a,b)=>a + b.vat, 0);\r\n                        this.model.netAmnt = this.model.Services.reduce((a,b)=>a + b.netAmount, 0);\r\n                        this.model.remarks = data.result.remarks;\r\n                    }\r\n                }\r\n                else {\r\n                    this.DialogMessage = data.result;\r\n                    setTimeout(() => {\r\n                        this.childModal.hide();\r\n                    }, 3000)\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n        }\r\n    }\r\n    \r\n\r\n    SaveClickEvent() {\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.onsubmit();\r\n    }\r\n\r\n    saveChildModal(replacementEmp) {\r\n        this.DialogMessage = \"Updating Data please wait...\"\r\n        this.childModal.show();\r\n    }\r\n\r\n    hideChildModal() {\r\n        this.childModal.hide();\r\n    }\r\n\r\n    onsubmit() {\r\n        try {\r\n            let sub = this.masterService.postmaster('add', this.model, \"/saveCheckOut\")\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n                    }\r\n                    else {\r\n                        this.DialogMessage = data.result;\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    onCancel() {\r\n\r\n        let new_date = this.masterService.getDate();\r\n\r\n        this.masterService.saveDate(new_date);\r\n\r\n        this.router.navigate([this.returnUrl]);\r\n    }\r\n\r\n\r\n    DeleteConformation() {\r\n        this.deleteModal.show();\r\n    }\r\n    DeleteEvent() {\r\n        this.deleteModal.hide();\r\n        this.DialogMessage = \"Deleting this schedule please wait...\";\r\n        this.childModal.show();\r\n        let sub = this.masterService.postmaster('delete', this.model, \"/DeleteSchedule\")\r\n            .subscribe(data => {\r\n                //console.log(data);\r\n                if (data.status == 'ok') {\r\n                    this.DialogMessage = \"Delete Successfull...\";\r\n                    this.childModal.hide();\r\n                    this.router.navigate([this.returnUrl]);\r\n                }\r\n                else {\r\n                    this.DialogMessage = data.result;\r\n                    setTimeout(() => {\r\n                        this.childModal.hide();\r\n                    }, 3000)\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n    }\r\n}\r\n","module.exports = \"<style type=\\\"text/css\\\">\\r\\n  input{\\r\\n    margin-bottom: 2px;\\r\\n  }\\r\\n</style>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"customerEntry\\\" style=\\\"font-weight:600; font-size: 14px;cursor: pointer;\\\"\\r\\n    (click)=\\\"redirectToPatient()\\\">{{'customer' | labelPipe}}</label>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn \\\" style=\\\"margin-left:20px;\\\" (click)=\\\"onAddNewCustomer()\\\">New</button>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!CustomerEntryVisible\\\">\\r\\n    <div class=\\\"col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n      <input [(ngModel)]=\\\"barcode\\\" style=\\\"color:black\\\" type=\\\"text\\\" class=\\\"form-control \\\" name=\\\"cusBarcode\\\"\\r\\n        id=\\\"cusBarcode\\\" [readOnly]=\\\"mode=='edit'?true:false\\\" (input)=\\\"onBarcodeChange($event.target.value)\\\"\\r\\n        placeholder=\\\"Barcode\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n      <input type=\\\"text\\\" (change)=\\\"mobileChange($event)\\\" id=\\\"customerSelectMobile\\\" list=\\\"mobileList\\\" (keyup)=\\\"mobile_keyup($event)\\\" [(ngModel)]=\\\"MobileInput\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"       \\r\\n        placeholder=\\\"Mobile No\\\">\\r\\n\\r\\n      <div style=\\\"position: absolute; background-color: white; \\\">\\r\\n        <datalist *ngIf=\\\"CustomerList && CustomerList.length>0\\\" id=\\\"mobileList\\\">\\r\\n          <option *ngFor=\\\"let r of CustomerList\\\" [value]=\\\"r.MOBILE\\\">\\r\\n            {{r.NAME}} </option>\\r\\n        </datalist>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col-sm-12  col-md-6  col-lg-4 col-xxl-3\\\">\\r\\n      <input type=\\\"text\\\" (change)=\\\"customerChange($event)\\\"  id=\\\"customerSelect\\\" list=\\\"customerList\\\" (keyup)=\\\"customer_keyup($event)\\\" [(ngModel)]=\\\"CustomerInput\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"\\r\\n        placeholder=\\\"{{'customer' | labelPipe}} Name\\\">\\r\\n\\r\\n      <div style=\\\"position: absolute; background-color: white; \\\">\\r\\n        <datalist *ngIf=\\\"CustomerList && CustomerList.length>0\\\" id=\\\"customerList\\\" >\\r\\n          <option *ngFor=\\\"let r of CustomerList\\\" [value]=\\\"r.NAME\\\">\\r\\n            {{r.NAME}} </option>\\r\\n        </datalist>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"  *ngIf=\\\"!CustomerEntryVisible\\\">\\r\\n    <table id=\\\"tblPatientInfo\\\" style=\\\"margin-left: 15px; margin-top: 10px;\\\">\\r\\n      <tr>\\r\\n          <td>Membership</td>\\r\\n          <td>: {{SelectedCustomer.Membership}}</td>\\r\\n          <td>Issued Date</td>\\r\\n          <td style=\\\"width: 35%;\\\">: {{SelectedCustomer.REGDATE | date:'dd MMM yyyy'}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Balance</td>\\r\\n        <td>: {{SelectedCustomer.balance}}</td>\\r\\n        <td>Expiry Date</td>\\r\\n        <td style=\\\"width: 35%;\\\">: {{SelectedCustomer.EXPDATE | date:'dd MMM yyyy'}}</td>\\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n<div *ngIf=\\\"CustomerEntryVisible\\\" class=\\\"form-group\\\">\\r\\n  <fieldset style=\\\"  border: 1px solid #dcdcdc; padding:10px; margin: 0;\\\">\\r\\n    <form id=formId class=\\\"form-horizontal\\\" [formGroup]=\\\"customerForm\\\" (ngSubmit)=\\\"saveCustomer()\\\">\\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('NAME')\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"col-sm-2 form-control-label \\\">{{'customer' | labelPipe}} Name</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"name\\\" id=\\\"name\\\" formControlName=\\\"NAME\\\"\\r\\n            placeholder=\\\"Name \\\">\\r\\n          <div\\r\\n            *ngIf=\\\"customerForm.controls['NAME'].invalid && (isSubmitting || customerForm.controls['NAME'].dirty || customerForm.controls['NAME'].touched)\\\"\\r\\n            class=\\\"invalid-feedback d-block\\\">\\r\\n            <small *ngIf=\\\"customerForm.controls['NAME'].errors.required\\\">{{'customer' | labelPipe}} Name is required.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('ADDRESS')\\\">\\r\\n        <label for=\\\"address\\\" class=\\\"col-sm-2 form-control-label \\\">Address</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"address\\\"\\r\\n            id=\\\"address\\\" placeholder=\\\"Address\\\" formControlName=\\\"ADDRESS\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"customerForm.controls['ADDRESS'].invalid && (isSubmitting || customerForm.controls['ADDRESS'].dirty || customerForm.controls['ADDRESS'].touched)\\\"\\r\\n            class=\\\"invalid-feedback d-block\\\">\\r\\n            <small *ngIf=\\\"customerForm.controls['ADDRESS'].errors.required\\\">Address is required.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\" *ngIf=\\\"customerForm.contains('Membership')\\\">\\r\\n        <label for=\\\"Membership\\\" class=\\\"col-sm-2 form-control-label\\\">Membership</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <select class=\\\"form-control\\\" placeholder=\\\"Select Membership\\\" formControlName=\\\"Membership\\\">\\r\\n            <option value=\\\"Gold\\\">Gold</option>\\r\\n            <option value=\\\"Silver\\\">Silver</option>\\r\\n            <option value=\\\"Platinum\\\">Platinum</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('MOBILE')\\\">\\r\\n        <label for=\\\"mobile\\\" class=\\\"col-sm-2 form-control-label \\\">Mobile</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"number\\\" (input)=\\\"onMobileChange($event)\\\" formControlName=\\\"MOBILE\\\"\\r\\n            class=\\\"form-control \\\" name=\\\"mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile No\\\">\\r\\n            <div\\r\\n                *ngIf=\\\"customerForm.controls['MOBILE'].invalid && (isSubmitting || customerForm.controls['MOBILE'].dirty || customerForm.controls['MOBILE'].touched)\\\"\\r\\n                class=\\\"invalid-feedback d-block\\\">\\r\\n                <small *ngIf=\\\"customerForm.controls['MOBILE'].errors.required\\\">Mobile is required.</small>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>   \\r\\n      <div class=\\\"form-group row\\\" *ngIf=\\\"customerForm.contains('DOB')\\\">\\r\\n        <label for=\\\"DOB\\\" class=\\\"col-sm-2 form-control-label\\\">DOB</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input  (change)=\\\"changeDOB($event)\\\" style=\\\"color:black\\\" type=\\\"date\\\"\\r\\n            class=\\\"form-control \\\" name=\\\"DOB\\\" id=\\\"DOB\\\" placeholder=\\\"Date of Birth \\\" formControlName=\\\"DOB\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"customerForm.controls['DOB'].invalid && (isSubmitting || customerForm.controls['DOB'].dirty || customerForm.controls['DOB'].touched)\\\"\\r\\n            class=\\\"invalid-feedback d-block\\\">\\r\\n            <small *ngIf=\\\"customerForm.controls['DOB'].errors.required\\\">Date of Birth is required.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\" *ngIf=\\\"customerForm.contains('AGE')\\\">\\r\\n        <label for=\\\"gender\\\" class=\\\"col-sm-2 form-control-label\\\">Age</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"age\\\" id=\\\"age\\\"\\r\\n            placeholder=\\\"Age \\\" formControlName=\\\"AGE\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"customerForm.controls['AGE'].invalid && (isSubmitting || customerForm.controls['AGE'].dirty || customerForm.controls['AGE'].touched)\\\"\\r\\n            class=\\\"invalid-feedback d-block\\\">\\r\\n            <small *ngIf=\\\"customerForm.controls['AGE'].errors.required\\\">Age is required.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row\\\" *ngIf=\\\"customerForm.contains('GENDER')\\\">\\r\\n        <label for=\\\"gender\\\" class=\\\"col-sm-2 form-control-label\\\">Gender</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"gender\\\" placeholder=\\\"Select Gender\\\" formControlName=\\\"GENDER\\\">\\r\\n            <option value=\\\"Male\\\">Male</option>\\r\\n            <option value=\\\"Female\\\">Female</option>\\r\\n            <option value=\\\"Others\\\">Others</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      \\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('EMAIL')\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 form-control-label \\\">Email</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"email\\\" class=\\\"form-control \\\" name=\\\"email\\\"\\r\\n            id=\\\"email\\\" placeholder=\\\"Email Address\\\" formControlName=\\\"EMAIL\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"customerForm.controls['EMAIL'].invalid && (isSubmitting || customerForm.controls['EMAIL'].dirty || customerForm.controls['EMAIL'].touched)\\\"\\r\\n            class=\\\"invalid-feedback d-block\\\">\\r\\n            <small *ngIf=\\\"customerForm.controls['EMAIL'].errors.required\\\">Email Address is required.</small>\\r\\n            <small *ngIf=\\\"customerForm.controls['EMAIL'].errors.pattern\\\">Invalid Email Address.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      \\r\\n\\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('PATIENT_ID')\\\">\\r\\n        <label for=\\\"patientid\\\" class=\\\"col-sm-2 form-control-label \\\">{{'customer' | labelPipe}} ID</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input style=\\\"color:black\\\" type=\\\"text \\\" class=\\\"form-control \\\"\\r\\n            name=\\\"patientid\\\" id=\\\"patientid\\\" placeholder=\\\"{{'customer' | labelPipe}} ID\\\" formControlName=\\\"PATIENT_ID\\\">\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group row \\\" *ngIf=\\\"customerForm.contains('Patient_Weight')\\\">\\r\\n        <label for=\\\"address\\\" class=\\\"col-sm-2 form-control-label \\\">{{'customer' | labelPipe}} Weight</label>\\r\\n        <div class=\\\"col-sm-6 \\\">\\r\\n          <input  style=\\\"color:black\\\" type=\\\"text \\\" class=\\\"form-control \\\" name=\\\"patientid\\\"\\r\\n            id=\\\"patientid\\\" placeholder=\\\"{{'customer' | labelPipe}} Weight\\\" formControlName=\\\"Patient_Weight\\\">\\r\\n        </div>\\r\\n        \\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group row \\\">\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"false\\\" class=\\\"btn btn-primary\\\" \\r\\n          style=\\\"margin-top:3px;margin-left: 10px;\\\">Save\\r\\n          {{'customer' | labelPipe}}</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </fieldset>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from '../../../../common/interfaces/master.interface';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CommonService } from '../../../../common/services/common.service';\r\n@Component({\r\n  selector: 'customer-select',\r\n  styleUrls: ['../../schedule.scss'],\r\n  templateUrl: './CustomerSelect.html'\r\n})\r\nexport class CustomerSelect {\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  DialogMessage: string = \"Saving data please wait ...\"\r\n  private subcriptions: Array<Subscription> = [];\r\n  EnableCustomerEntryInAppointment: boolean;\r\n  CustomerList: Customer[] = [];\r\n  mobileNo: string = \"\";\r\n  name: string = \"\";\r\n  SelectedCustomer: Customer = <Customer>{};\r\n  @Output() customerChanged= new EventEmitter<Customer>();\r\n  @Output() mobileChanged = new EventEmitter<Customer>();\r\n  @Output() ncw = new EventEmitter();\r\n  @Output() historyChange = new EventEmitter();\r\n  CustomerEntryVisible: boolean;\r\n  customerForm: FormGroup;\r\n \r\n  listCustomer: string; \r\n  CustomerInput: string;\r\n  MobileInput: string;\r\n  timeout: any = null;\r\n  isSubmitting : boolean = false;\r\n  constructor(private router: Router, private masterService: MasterRepo, private _authService: AuthService, private fb: FormBuilder, private common:CommonService) {\r\n    var setting = this._authService.getSetting();\r\n    this.EnableCustomerEntryInAppointment = setting.EnableCustomerEntryInAppointment;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.CustomerList = [];\r\n    this.customerForm = this.fb.group({\r\n      CUSID: [''],\r\n      NAME: [\"\"],\r\n      ADDRESS: [''],\r\n      TELNO: [''],\r\n      MOBILE: [''],\r\n      IMOBILE: [''],\r\n      PANNO: [''],\r\n      EMAIL: [''],\r\n      DOB: [''],\r\n      Age: [''],\r\n      PATIENT_ID: [''],\r\n      Patient_Weight: [''],\r\n      MSTATUS: [''],\r\n      GENDER: [''],\r\n      OCCUPATION: [''],\r\n      EMERGENCYCONTACTNAME: [''],\r\n      EMERGENCYCONTACTNO: [''],\r\n      REGDATE: [''],\r\n      BARCODE: [''],\r\n      Membership: ['']\r\n    });\r\n\r\n    this.masterService.getFormPreferences(\"CustomerEntryCompact\").subscribe((result:any) => {\r\n        this.common.setFormPreference(this.customerForm, result.fields);\r\n    })\r\n  }\r\n\r\n  getCustomerList(name: string, mobile: string) {\r\n    var pageNumer = 1\r\n    var rowCount = 10\r\n    var totalPages = 1;\r\n    this.CustomerList = [];\r\n    this.masterService.getPagedCustomerList(pageNumer, rowCount, name, mobile).subscribe((data:any) => {\r\n          let customers: Customer[] = data.result;\r\n          this.CustomerList.push(...customers);\r\n        },\r\n        (Error) => {\r\n          this.masterService.handleWebError(Error);\r\n        },\r\n        () => {\r\n          this.masterService._customerList = this.CustomerList;\r\n        }\r\n      );\r\n  }\r\n\r\n  customer_keyup(event) {\r\n    if(!event.keyCode) return;\r\n\r\n    clearTimeout(this.timeout);\r\n    var $this = this;\r\n    this.timeout = setTimeout(function () {\r\n      $this.getCustomerList(event.target.value, null)\r\n    }, 500);\r\n  }\r\n\r\n  mobile_keyup(event) {\r\n    if(!event.keyCode) return;\r\n\r\n    clearTimeout(this.timeout);\r\n    var $this = this;\r\n    this.timeout = setTimeout(function () {\r\n      $this.getCustomerList(null, event.target.value)\r\n    }, 500);\r\n  }\r\n\r\n  customerChange(event) {\r\n    var customer = this.CustomerList.filter(x => event.target.value == x.NAME)[0];\r\n    if (customer) {\r\n      this.MobileInput = customer.MOBILE;\r\n      this.SelectedCustomer = customer;\r\n      this.customerChanged.emit(customer);\r\n    }\r\n  }\r\n\r\n  mobileChange(event) {\r\n    var customer = this.CustomerList.filter(x => event.target.value == x.MOBILE)[0];\r\n    if (customer) {\r\n      this.CustomerInput = customer.NAME;\r\n      this.SelectedCustomer = customer;\r\n      this.customerChanged.emit(customer);\r\n    }\r\n  }\r\n\r\n  onAddNewCustomer() {\r\n    if (this.EnableCustomerEntryInAppointment) {\r\n      this.CustomerEntryVisible = true;\r\n    } else {\r\n      this.router.navigate(['/pages/masters/cus/detail-cus', { mode: \"add\", returnUrl: \"/pages/schedule/scheInput\" }])\r\n    }\r\n  }\r\n\r\n  redirectToPatient() {\r\n    if (this.CustomerEntryVisible) {\r\n      this.CustomerEntryVisible = false;\r\n    }\r\n  }\r\n\r\n  saveCustomer() {\r\n    try {\r\n      if (!this.customerForm.valid) {\r\n        this.isSubmitting = true;\r\n        return;\r\n      }\r\n      this.DialogMessage = \"Saving Data please wait...\";\r\n      this.childModal.show();\r\n      let cus: any = this.customerForm.value;\r\n      //console.log(\"CUSTOMER DETAILS\", cus);\r\n      let sub = this.masterService.postmaster(\"add\", cus, \"/saveCustomer\")\r\n        .subscribe(data => {\r\n            if (data.status == 'ok') {\r\n              //Displaying dialog message for save with timer of 1 secs\r\n              this.DialogMessage = \"Data Saved Successfully\"\r\n              this.masterService.refreshCustomerList();\r\n              this.ncw.emit(this.common.getFormValue(this.customerForm,\"Patient_Weight\"));\r\n              cus.CUSID = data.result.cusid;\r\n              this.customerChanged.emit(cus);\r\n              const __this = this;\r\n              this.CustomerInput = data.result.name;\r\n              this.MobileInput = data.result.mobile;\r\n              setTimeout(() => {\r\n                __this.childModal.hide();\r\n                __this.CustomerEntryVisible = false;\r\n                __this.mobileNo = this.common.getFormValue(this.customerForm,\"MOBILE\");\r\n                __this.SelectedCustomer = __this.SelectedCustomer;\r\n                __this.CustomerList = __this.masterService._customerList;\r\n                __this.onSearchChange(__this.mobileNo);\r\n                this.isSubmitting = false;\r\n              }, 1000);\r\n            } else {\r\n              this.DialogMessage = data.result;\r\n              setTimeout(() => {\r\n                  this.childModal.hide();\r\n              }, 3000)\r\n            }\r\n          },\r\n          (error) => {\r\n            alert(error);\r\n          }\r\n        );\r\n      this.subcriptions.push(sub);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  changeDOB(event) {\r\n    var dob = event.target.value;\r\n    let birthDate = new Date(dob);\r\n    //console.log(\"NEW CUSTOMER DOB\", this.newcustomerDOB);\r\n    let timeDiff = Math.abs(Date.now() - birthDate.getTime());\r\n    let age = Math.floor(timeDiff / (1000 * 3600 * 24) / 365.25);\r\n    //console.log('AGE',age)\r\n    this.customerForm.get(\"AGE\").setValue(age);\r\n  }\r\n\r\n  onMobileChange(e) {\r\n    if (e.target.value.length >= 10) {\r\n      e.target.value = e.target.value.substring(0, 10);\r\n    }\r\n  }\r\n\r\n  onSearchChange(searchValue: string) {\r\n    var cus: any = this.CustomerList.find(x => x.MOBILE == searchValue);\r\n    //console.log(\"cus\",cus);\r\n    if (cus != null) {\r\n      this.SelectedCustomer = cus;\r\n      this.mobileNo = cus.MOBILE;\r\n      this.customerChanged.emit(cus);\r\n    }\r\n    //console.log(this.SelectedCustomer)\r\n  }\r\n\r\n  onBarcodeChange(searchValue: string) {\r\n    var cus = this.CustomerList.find(x => x.BARCODE == searchValue);\r\n    //console.log(\"barcode\",cus);\r\n    if (cus != null) {\r\n      this.SelectedCustomer = cus;\r\n      this.customerChanged.emit(cus);\r\n    }\r\n  }\r\n\r\n  selectedCustomerChanged(e) {\r\n    this.customerChanged.emit(this.SelectedCustomer);\r\n    this.mobileNo = this.SelectedCustomer.MOBILE;\r\n  }\r\n\r\n  selectCustomer(event) {\r\n    //console.log('EVENT', event);\r\n  } \r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchData', pure: false })\r\n\r\nexport class CustomerPipe implements PipeTransform {\r\n  transform(data, query: string): any {\r\n    if (data) {\r\n      if (query.length) {\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^A-Z0-9]/ig, '').toLowerCase();\r\n          const comId = (item.NAME) ? (item.NAME).replace(/[^A-Z0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n            return item;\r\n          }\r\n        });\r\n      } else {\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'searchMobile', pure: false })\r\n\r\nexport class MobilePipe implements PipeTransform {\r\n  transform(data, query: string): any {\r\n    if (data) {\r\n      if (query.length) {\r\n        return data.filter(item => {\r\n          const searchedQuery = query.replace(/[^0-9]/ig, '').toLowerCase();\r\n          const comId = (item.MOBILE) ? (item.MOBILE).replace(/[^0-9]/ig, '').toLowerCase() : '';\r\n          if (\r\n            comId.indexOf(searchedQuery) !== -1\r\n          ) {\r\n           \r\n            return item;\r\n          }\r\n        });\r\n      } else {\r\n        \r\n        return data;\r\n      }\r\n    }\r\n  }\r\n}","module.exports = \"<div class=\\\"widgets\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <input type=\\\"date\\\" name=\\\"date\\\" id=\\\"date\\\" value=\\\"{{ScheduleDate}}\\\"\\r\\n            (change)=\\\"OnDateChangeEvent($event.target.value)\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <ba-card title=\\\"Customers\\\" baCardClass=\\\"with-scroll\\\">\\r\\n        <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\"></ng2-smart-table>\\r\\n      </ba-card>\\r\\n    </div>\\r\\n  </div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ngx-bootstrap'\r\nimport { LocalDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport 'style-loader!../../../masters/components/smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Customer } from '../../../../common/interfaces'\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'followup',\r\n    templateUrl: './followup.component.html',\r\n    providers: [],\r\n})\r\nexport class FollowUp {\r\n\r\n    settings = {\r\n        columns: {\r\n            PatientName: {\r\n                title: 'Patient',\r\n                type: 'string',\r\n                editable: false\r\n            },\r\n            Mobile: {\r\n                title: 'Mobile',\r\n                type: 'string',\r\n                editable: false\r\n            },\r\n            Staff: {\r\n                title: 'Staff',\r\n                type: 'string'\r\n            },\r\n            TreatmentDate: {\r\n                title: 'Treatment Date',\r\n                type: 'date',\r\n                editable: false\r\n            },\r\n            FollowupDate: {\r\n                title: 'Follow-Up Date',\r\n                type: 'string'\r\n            },\r\n            Time: {\r\n                title: 'Time',\r\n                type: 'string'                \r\n            },\r\n        }\r\n    };\r\n\r\n    data: any[] = [];\r\n    private subcriptions: Array<Subscription> = [];\r\n    source: LocalDataSource = new LocalDataSource();\r\n    constructor(private service: MasterRepo, private _authService: AuthService, private router: Router) {\r\n        this.source.load(this.data);\r\n    }\r\n\r\n    OnDateChangeEvent(v) {\r\n        this.data = [];\r\n        this.service.getFollowUpList(v).subscribe((data) => {\r\n            this.data.push(data);\r\n        },\r\n            Error => console.log(Error),\r\n            () => {\r\n                //console.log(this.data)\r\n                this.source.load(this.data);\r\n            });\r\n    }\r\n    ngOnInit() {\r\n        this.OnDateChangeEvent(new Date());\r\n    }\r\n}","module.exports = \".context-menu {\\r\\n  position: fixed;\\r\\n  z-index: 1000;\\r\\n  background: white;\\r\\n  border: 1px solid #ccc;\\r\\n  list-style: none;\\r\\n  padding: 5px 0;\\r\\n  margin: 0;\\r\\n  width: 150px;\\r\\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\\r\\n}\\r\\n\\r\\n.context-menu li {\\r\\n  padding: 8px 15px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.context-menu li:hover {\\r\\n  background-color: #f0f0f0;\\r\\n}\\r\\n\"","module.exports = \"<ul\\r\\n  *ngIf=\\\"contextMenuVisible\\\"\\r\\n  [style.left.px]=\\\"menuLeft\\\"\\r\\n  [style.top.px]=\\\"menuTop\\\"\\r\\n  class=\\\"context-menu\\\"\\r\\n  (click)=\\\"hideContextMenu()\\\"\\r\\n>\\r\\n  <li (click)=\\\"onMenuAction('Edit')\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit</li>\\r\\n  <li (click)=\\\"onMenuAction('Check-In')\\\" *ngIf=\\\"canCheckIn\\\"><i class=\\\"fa fa-sign-in\\\"></i> Check-In</li>\\r\\n  <li (click)=\\\"onMenuAction('Check-Out')\\\" *ngIf=\\\"model.status == 1\\\"><i class=\\\"fa fa-sign-out\\\"></i> Check-Out</li>\\r\\n</ul>\"","import { Component, HostListener, Output, EventEmitter } from '@angular/core';\r\nimport { TimelineModel } from 'src/app/common/interfaces';\r\nimport { AuthService } from 'src/app/common/services/permission/authService.service';\r\n\r\n@Component({\r\n  selector: 'timeline-context-menu',\r\n  templateUrl: './timelineContextMenu.component.html',\r\n  styleUrls: ['./timelineContextMenu.component.css']\r\n})\r\nexport class TimelineContextMenuComponent {\r\n  @Output() onAction = new EventEmitter<any>();\r\n  contextMenuVisible = false;\r\n  menuLeft = 0;\r\n  menuTop = 0;\r\n  model :TimelineModel;\r\n\r\n  constructor(private authService: AuthService){}\r\n\r\n  get canCheckIn() {\r\n    debugger;\r\n    const date = new Date();\r\n    const appDate = new Date(this.model.startDate);\r\n    const dateOnly = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n    const appDateOnly = new Date(appDate.getFullYear(), appDate.getMonth(), appDate.getDate());\r\n    const AllowCheckInBefore = this.authService.getSetting().AllowCheckInBefore;\r\n    return dateOnly.getTime() == appDateOnly.getTime() && (appDate.getTime() - (AllowCheckInBefore * 60 * 1000)) < new Date().getTime();\r\n  }\r\n\r\n\r\n  public showContextMenu(event: MouseEvent, model: TimelineModel) {\r\n    event.preventDefault();\r\n    this.contextMenuVisible = true;\r\n    this.menuLeft = event.clientX;\r\n    this.menuTop = event.clientY;\r\n    this.model = model;\r\n    console.log(event);\r\n  }\r\n\r\n  onMenuAction(action: string) {\r\n    console.log('Selected action:', action);\r\n    this.hideContextMenu();\r\n    this.onAction.emit({action,model:this.model});\r\n  }\r\n\r\n  hideContextMenu() {\r\n    this.contextMenuVisible = false;\r\n  }\r\n\r\n  @HostListener('document:click')\r\n  onDocumentClick() {\r\n    this.hideContextMenu();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission/authService.service';\r\nimport { ExportAsService, ExportAsConfig } from 'ngx-export-as';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Branch, TimelineModel } from '../../../../common/interfaces';\r\nimport { CustomerAllSchedule } from '../ScheduleSearch/customer-all-schedule.component';\r\nimport { AppState } from '../../../../app.service';\r\nimport{ TimelineContextMenuComponent } from './TimelineContextMenu/timelineContextMenu.component';\r\ndeclare let jsPDF;\r\n\r\n@Component({\r\n  selector: 'masterschedule',\r\n  styleUrls: ['../../schedule.scss'],\r\n  templateUrl: './masterSchedule.html',\r\n  providers: [DatePipe],\r\n})\r\nexport class MasterSchedule {\r\n  @ViewChild('ScheduleForMail') childScheduleForMailModal: ModalDirective;\r\n  @ViewChild('customerSchedule') childCustomerSchedule: CustomerAllSchedule;\r\n  @ViewChild('contextMenu') contextMenu: TimelineContextMenuComponent;\r\n  // @ViewChild(\"scheduler\") scheduler: DayPilot.Angular.Scheduler;\r\n  DialogMessage: string = \"You are not authorized\";\r\n  minList: any[] = [];\r\n  employeeList: any[] = [];\r\n  searchCustomer: string;\r\n  startingTime = \"12AM\";\r\n  closingTime = \"12AM\";\r\n  noOfTimeHeaderInHour = 1;\r\n  minuteCellWidth = 25;\r\n  totalNoOfMinCell = 4;\r\n  hourHeaderList = [];\r\n  mList: any[] = [];\r\n  ScheduleDate: Date = new Date(\"2017-09-13\");\r\n  ScheduleDateAD: string\r\n  ScheduleDateBS: string\r\n  et: any = <any>{};\r\n  rt: any = <any>{};\r\n  rtFormat: string;\r\n  rtFormatNepali: string;\r\n  roomList: any[] = [];\r\n  DisplayRoomTimeLine: boolean = true;\r\n  TimeLineBlock: number = 15;\r\n  SectionPerHour: number = 4\r\n  DefaultTimeLineScroll: number = 2000;\r\n  IntegrateTreatmentWithAppointment: boolean;\r\n  userBranches : Branch[] = [];\r\n  selectedBranch : Branch[] = [];\r\n  contextMenuVisible: boolean = false;\r\n  @ViewChild('employeeEmailSchedule') el: ElementRef;\r\n  exportAsConfig: ExportAsConfig = {\r\n    type: 'pdf',\r\n    elementIdOrContent: 'employeeSchedule'\r\n  }\r\n\r\n  branchSetting:any =  {\r\n      enableCheckAll: true,\r\n      text: 'Select Outlets',\r\n      enableSearchFilter: true,\r\n      labelKey:\"branchName\",\r\n      primaryKey:\"branchId\",\r\n      badgeShowLimit: 2\r\n  };\r\n\r\n  constructor(private _authService: AuthService\r\n    , private exportAsService: ExportAsService\r\n    , private router: Router\r\n    , private scheduleService: ScheduleInputService\r\n    , private masterRepo: MasterRepo\r\n    , private datePipe: DatePipe\r\n    , private appService:AppState) {\r\n    var setting = _authService.getSetting();\r\n    this.DisplayRoomTimeLine = setting.DisplayRoomTimeLine;\r\n    this.TimeLineBlock = setting.TimeLineBlock;\r\n    this.minuteCellWidth = setting.TimeLineBlockWidth;\r\n    this.IntegrateTreatmentWithAppointment = setting.IntegrateTreatmentWithAppointment;\r\n    this.SectionPerHour = 60 / this.TimeLineBlock;\r\n    this.DefaultTimeLineScroll = setting.DefaultTimeLineScroll\r\n    var st = parseInt(this.startingTime.slice(0, -2));\r\n    var stp = this.startingTime.slice(-2);\r\n    var ct = parseInt(this.closingTime.slice(0, -2));\r\n    var ctp = this.closingTime.slice(-2);\r\n    if (ctp.toUpperCase() == \"PM\") { ct = ct + 12; }\r\n    if (stp.toUpperCase() == \"PM\") { st = st + 12; }\r\n    if (st == 12 && stp.toUpperCase() == \"AM\") { st = 0 }\r\n    if (ct == 12 && ctp.toUpperCase() == \"AM\") { ct = 24 }\r\n    let starttime = st;\r\n    let ap = stp.toUpperCase();\r\n    for (let h = st; h < ct; h++) {\r\n      let pred = \"AM\";\r\n      if (h >= 12) {\r\n        pred = \"PM\";\r\n      }\r\n      h\r\n      this.hourHeaderList.push((h > 12 ? (h - 12) : h == 0 ? 12 : h) + pred);\r\n    }\r\n    this.noOfTimeHeaderInHour = ct - st;\r\n    this.totalNoOfMinCell = this.noOfTimeHeaderInHour * this.SectionPerHour;\r\n    for (let j = 1; j <= this.noOfTimeHeaderInHour; j++) {\r\n      if (starttime >= 12) {\r\n        ap = \"PM\";\r\n      }\r\n      for (let i = 0; i < this.SectionPerHour; i++) {\r\n\r\n        this.minList.push({ min: i * this.TimeLineBlock, booked: 0, startTime: starttime, minPart: i + 1, ampm: ap, colspan: 1 });\r\n      }\r\n      if (starttime == 12) { starttime = 0; ap = \"PM\" }\r\n      starttime++;\r\n    }\r\n    this.userBranches = this._authService.getUserProfile().branches;\r\n    this.selectedBranch.push( this.userBranches.find(x => x.branchId == this._authService.getUserProfile().defaultBranch));\r\n  }\r\n\r\n  changeEntryDate(value, format: string) {\r\n    if (format == \"AD\") {\r\n      this.ScheduleDateBS = this.masterRepo.toBSDate(value);\r\n      this.OnDateChangeEvent(value);\r\n    }\r\n    else if (format == \"BS\") {\r\n      this.ScheduleDateAD = this.masterRepo.toADDate(value);\r\n      this.OnDateChangeEvent(this.ScheduleDateAD);\r\n    }\r\n\r\n  }\r\n\r\n  OnDateChangeEvent(v) {\r\n    this.searchCustomer = '';\r\n    this.ScheduleDate = v;\r\n    this.employeeList = [];\r\n    this.roomList = [];\r\n    this.et = {};\r\n    this.rt = {};\r\n    this.scheduleService.getEmployeeSchedule({ FDate: v, branches : this.selectedBranch.map(x => x.branchId) }).subscribe(data => {\r\n      if(data && data.length >0) {\r\n        this.et = data[0];\r\n        this.emptimeTableMaker();\r\n      }\r\n    }\r\n      , Error => {\r\n        try {\r\n          let t = Error.json();\r\n          //console.log(t);\r\n          if (t.result == \"Authorization Failed\") {\r\n            this.router.navigate(['/login', this.router.url]);\r\n          }\r\n          else {\r\n            alert(\"Error in Loading Data:\" + t.result);\r\n          }\r\n\r\n        }\r\n        catch (e) {\r\n          alert(e);\r\n        }\r\n      }\r\n    );\r\n    /*\r\n    this.scheduleService.getRoomSchedule({ FDate: v , branchId : this.selectedBranch}).subscribe(data => {\r\n      console.log(data, \"room data\");\r\n      this.rt = data[0];\r\n      //console.log(\"room\",this.rt);\r\n      //console.log(\"rt.DATE\",this.rt.DATE)\r\n\r\n      var rtNewDate = new Date(this.rt.DATE);\r\n\r\n      this.rtFormat = this.datePipe.transform(rtNewDate, \"yyyy-MM-dd\");\r\n      \r\n      this.rtFormatNepali = this.masterRepo.toBSDate(this.rtFormat);\r\n\r\n\r\n      this.roomtimeTableMaker();\r\n      for (let r of this.rt.ROOMS) {\r\n        let bt = r.BOOKEDTIMES;\r\n        //console.log(\"before\",r)\r\n        r.BOOKEDTIMES = bt.sort((x, y) => new Date(x.STARTDATETIME).getTime() - new Date(y.STARTDATETIME).getTime())\r\n\r\n        //console.log(\"after\",r);\r\n      }\r\n\r\n    });\r\n    */\r\n    $('div#tblSchedule').scrollLeft(this.DefaultTimeLineScroll);\r\n  }\r\n\r\n  ngOnInit() {\r\n    let date = new Date();\r\n    this.ScheduleDateAD = `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2,'0')}`;\r\n    this.changeEntryDate(this.ScheduleDateAD, 'AD');\r\n    this.appService.notification$.subscribe((data) => {\r\n      this.OnDateChangeEvent(new Date());\r\n    });\r\n  }\r\n\r\n  customerSearchChange(event: any) {\r\n    this.childCustomerSchedule.showDialog();\r\n  }\r\n\r\n  roomCellClick(m) {\r\n    //console.log(m);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //$(' <script type=\"text/javascript\" src=\"../../assets/js/jquery-ui.js\"></script>').appendTo(document.body);\r\n    $(\" <script> (function() { var elem = document.createElement('input'); elem.setAttribute('type', 'date');if ( elem.type === 'text' ) {$('#date').datepicker(); }})();</script>\").appendTo(document.body);\r\n    $('div#tblSchedule').scrollLeft(this.DefaultTimeLineScroll);\r\n\r\n  }\r\n\r\n  roomtimeTableMaker() {\r\n    this.roomList = [];\r\n    for (let e of this.rt.ROOMS) {\r\n      this.mList = JSON.parse(JSON.stringify(this.minList));\r\n      for (let b of e.BOOKEDTIMES) {\r\n        //console.log(b);\r\n        this.setBookedInCell(this.mList, b.STARTDATETIME, b.STARTTIME, b.ENDTIME, b.TIMEDURATION_IN_MIN, b.EMPLOYEE, b.SERVICE, b.customerId, b.CUSTOMER, b.SCHEDULEID, b.STATUS, b.checkInId);\r\n      }\r\n      this.removeCellToSplice();\r\n      this.roomList.push({ ID: e.ROOMNO, NAME: e.DESCRIPTION, minList: this.mList });\r\n\r\n    }\r\n  }\r\n\r\n  emptimeTableMaker() {\r\n    const groupedMap = new Map<string, any[]>();\r\n    this.employeeList = [];\r\n    for (let e of this.et.EMPLOYEES) {\r\n      this.mList = JSON.parse(JSON.stringify(this.minList));\r\n      for (let b of e.BOOKEDTIMES) {\r\n        this.setBookedInCell(this.mList, b.STARTDATETIME, b.STARTTIME, b.ENDTIME, b.TIMEDURATION_IN_MIN, b.ROOM, b.SERVICE, b.customerId, b.CUSTOMER, b.SCHEDULEID, b.STATUS, b.checkInId);\r\n      }\r\n      this.removeCellToSplice();\r\n      const empObj = {\r\n        ID: e.EMPLOYEEID,\r\n        NAME: e.EMPLOYEENAME,\r\n        minList: this.mList,\r\n      };\r\n      const branchName = e.branch.branchName;\r\n      if (!groupedMap.has(branchName)) {\r\n        groupedMap.set(branchName, []);\r\n      }\r\n      groupedMap.get(branchName).push(empObj);\r\n    }\r\n    this.employeeList = Array.from(groupedMap.entries()).map(([branch, employees]) => ({\r\n      branch,\r\n      employees\r\n    }));\r\n  }\r\n\r\n  removeCellToSplice() {\r\n    var i = this.mList.findIndex(x => x.cellToSplice == 1);\r\n    if (i > -1) {\r\n      this.mList.splice(i, 1);\r\n      this.removeCellToSplice();\r\n    }\r\n\r\n  }\r\n\r\n  setBookedInCell(initialCellList, startDate, starttime, endtime, duration, room, service, customerId, customer, sid, status, checkInId) {\r\n    var s = starttime.slice(0, -5);\r\n    var ampm = starttime.slice(-2);\r\n    var onlyMin = parseInt(starttime.slice(-4).slice(0, -2));\r\n    //console.log({ sid: sid, Tstarttime: starttime, Tampm: ampm, starttime: s, ampm: ampm.toUpperCase(), onlyMin: onlyMin });\r\n    if (ampm === \"00\") ampm = \"AM\"\r\n    var noOfBLock = Math.ceil(duration / this.TimeLineBlock);\r\n    //console.log({ noOfBLock: noOfBLock });\r\n    let isBooked = 0;\r\n    let skip = 0;\r\n    for (let t of initialCellList) {\r\n      //console.log({ sid:sid, Tstarttime: t.startTime, Tampm: t.ampm, starttime: s, ampm: ampm.toUpperCase(), onlyMin: onlyMin, minPart: t.minPart });\r\n      if (t.startTime == s && t.ampm == ampm.toUpperCase()) {\r\n        if (Math.floor(onlyMin / this.TimeLineBlock) == t.minPart - 1) {\r\n          t.booked = 1;\r\n          isBooked = 1;\r\n          skip = 1;\r\n          if (t.colspan < noOfBLock) {\r\n            t.colspan = noOfBLock;\r\n          }\r\n          t.width = this.minuteCellWidth * noOfBLock + 'px';\r\n          if (t.appointments == null) {\r\n            t.appointments = [];\r\n          }\r\n          t.appointments.push(<TimelineModel>{ room: room, service: service, customerId, customer: customer, startDate, time: starttime, sid: sid, status:status, checkInId })\r\n        }\r\n      }\r\n      if (isBooked == 1 && noOfBLock > 0) {\r\n        if (skip == 1) { skip = 0; }\r\n        else {\r\n\r\n          t.booked = 1;\r\n          t.cellToSplice = 1;\r\n        }\r\n        noOfBLock = noOfBLock - 1;\r\n        if (noOfBLock == 0) { isBooked = 0; }\r\n      }\r\n    }\r\n    return initialCellList;\r\n  }\r\n\r\n  onAddClick() {\r\n    this.router.navigate(['/pages/schedule/scheInput', { mode: \"add\", returnUrl: this.router.url }])\r\n  }\r\n\r\n  labelClickEvent(id) {\r\n    this.router.navigate(['/pages/schedule/scheInput', { mode: \"edit\", id: id, returnUrl: this.router.url }])\r\n  }\r\n\r\n  treatmentClickEvent(id) {\r\n\r\n    this.router.navigate(['/pages/schedule/treatment', { mode: \"\", id: id, returnUrl: this.router.url }])\r\n  }\r\n\r\n  showDetails() {\r\n    this.childScheduleForMailModal.show();\r\n  }\r\n\r\n  sendEmail() {\r\n    let Content = `\r\n          <html>              \r\n              <body >${this.el.nativeElement.outerHTML}\r\n              </body>\r\n          </html>`\r\n    //console.log(Content);\r\n    this.masterRepo.postmaster(this.ScheduleDate, Content, '/SendEmail').subscribe((data) => {\r\n      //console.log(data);\r\n    })\r\n    this.childScheduleForMailModal.hide();\r\n  }\r\n\r\n  downloadToPdf() {\r\n    let pdf = new jsPDF();\r\n\r\n    let options = {\r\n      pagesplit: true,\r\n      background: '#fff',\r\n    };\r\n    pdf.addHTML(document.getElementById(\"employeeSchedule\"), 10, 10, options, () => {\r\n      pdf.save(\"EmpSchedule.pdf\");\r\n    });\r\n    // pdf.text(document.getElementById(\"employeeSchedule\")\r\n    // );\r\n    // pdf.save(\"test.pdf\")\r\n    this.childScheduleForMailModal.hide();\r\n  }\r\n\r\n  downloadPDF() {\r\n    this.exportAsService.save(this.exportAsConfig, 'EmpSchedule').subscribe(() => { })\r\n  }\r\n\r\n  getAppointmentBackground(ap: any) {\r\n    switch (ap.status) {\r\n      default:\r\n        return \"#4286f4\";\r\n      case 1:\r\n        return \"yellow\";\r\n      case 2:\r\n        return \"#9ef315\";\r\n      case 3:\r\n        return \"#d3d4d0\"\r\n      case 4:\r\n        return \"grey\";\r\n\r\n    }\r\n  }\r\n\r\n  getAppointmentTextColor(ap: any) {\r\n    switch (ap.status) {\r\n      default:\r\n        return \"white\";\r\n      case 1:\r\n        return \"black\";\r\n      case 2:\r\n        return \"black\";\r\n      case 3:\r\n        return \"black\"\r\n\r\n    }\r\n  }\r\n\r\n  showContextMenu(e, m){\r\n    this.contextMenu.showContextMenu(e, m);\r\n  }\r\n\r\n  onMenuAction(data:any) {\r\n    const action = data.action;\r\n    const model = data.model;\r\n    console.log('Selected action:', action);\r\n    console.log('Model :', model);\r\n    this.contextMenu.hideContextMenu();\r\n    // Handle the action based on the selected menu item\r\n    switch (action) {\r\n      case 'Edit':\r\n        this.labelClickEvent(model.sid);\r\n        break;\r\n      case 'Check-In':\r\n        this.router.navigate([\"/pages/schedule/checkIn\", { customerId: model.customerId, returnUrl: this.router.url }])\r\n        break;\r\n      case 'Check-Out':\r\n        this.router.navigate([\"/pages/schedule/checkOut\", { id: model.checkInId, mode: \"edit\", returnUrl: this.router.url }])\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"width: 100%;\\\">\\r\\n        <div class=\\\"col-sm-4 col-md-4 col-xl-2 col-xxl-1\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 5px;\\\" (click)=\\\"onAddClick()\\\">New\\r\\n                Appointment</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 col-sm-4 col-md-4  col-xl-2 col-xxl-1\\\">\\r\\n            <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                (change)=\\\"changeEntryDate($event.detail.value,'BS')\\\" [label]=\\\"'yyyy-mm-dd'\\\"\\r\\n                [(ngModel)]=\\\"this.ScheduleDateBS\\\" >\\r\\n            </nepali-date-picker>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 col-sm-4 col-md-4  col-xl-2 col-xxl-1\\\">\\r\\n            <input type=\\\"date\\\" class=\\\"date-input form-control\\\" [(ngModel)]=\\\"this.ScheduleDateAD\\\"\\r\\n                (change)=\\\"changeEntryDate($event.target.value,'AD')\\\" style=\\\"max-width:150px; height: 35px;\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12  col-xl-3 col-xxl-5\\\" style=\\\"display: flex;\\\">\\r\\n            <angular2-multiselect style=\\\"width: 100%;\\\" [data]=\\\"userBranches\\\" [settings]=\\\"branchSetting\\\" [(ngModel)]=\\\"selectedBranch\\\" (ngModelChange)=\\\"changeEntryDate(ScheduleDateAD,'AD')\\\">\\r\\n            </angular2-multiselect>\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 col-sm-4 col-md-3  col-xl-2 col-xxl-1\\\">\\r\\n            <input #inputBox type=\\\"number\\\" name=\\\"searchCustomer\\\" id=\\\"searchCustomer\\\"\\r\\n                style=\\\"max-width: 150px;height:35px;align-self:self-start;\\\" [(ngModel)]=\\\"searchCustomer\\\"\\r\\n                (keydown.enter)=\\\"customerSearchChange($event)\\\" placeholder=\\\"Search Mobile\\\" class=\\\"form-control\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-xs-6 col-sm-4 col-md-3  col-xl-1\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 5px;\\\" (click)=\\\"showDetails()\\\">Details</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"dayWiseSchedule\\\">\\r\\n        <div style=\\\"height: 30px; line-height: 30px;  vertical-align: middle;  \\\">\\r\\n            {{ScheduleDate |date:'EEEE, MMMM d, y'}}\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" id=\\\"tblSchedule\\\" style=\\\"min-height: 380px\\\">\\r\\n            <table style=\\\"height:fit-content;\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th class=\\\"headcol\\\"\\r\\n                            style=\\\"border: 1px solid #dcdcdc;font-size: 17px;font-weight:400;text-shadow: 0px 1px 2px;width:110px;height: 41px; text-align: center; line-height: 40px;margin-top: -1px;\\\">\\r\\n                            Employee\\r\\n                        </th>\\r\\n                        <th *ngFor=\\\"let h of hourHeaderList\\\" [attr.colspan]=\\\"SectionPerHour\\\"\\r\\n                            style=\\\" border: 1px solid #dcdcdc;height: 30px\\\">{{h}}</th>\\r\\n                    </tr>\\r\\n                    <tr style=\\\"height: 10px;\\\">\\r\\n                        <th></th>\\r\\n                        <th [style.max-width]=\\\"minuteCellWidth+'px'\\\" [style.min-width]=\\\"minuteCellWidth+'px'\\\"\\r\\n                            style=\\\"border: 1px solid #dcdcdc;\\\" *ngFor=\\\"let m of minList\\\">\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <ng-container *ngFor=\\\"let group of employeeList\\\">\\r\\n                    <tr style=\\\"height: 30px;\\\">\\r\\n                        <td class=\\\"branchHeader\\\" colspan=\\\"99\\\">\\r\\n                            {{group.branch}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let e of group.employees \\\" style=\\\"border: 1px solid #dcdcdc;\\\">\\r\\n                        <td class=\\\"headcol\\\"\\r\\n                            style=\\\"border: 1px solid #dcdcdc;font-size:11px;font-weight:bold; width:110px; vertical-align: middle; height: 57px; margin-top: -1px;\\\">\\r\\n                            {{e.NAME}}\\r\\n                        </td>\\r\\n                        <td id=\\\"tdDataCont\\\" (click)=\\\"roomCellClick(e)\\\" *ngFor=\\\"let a of e.minList\\\"\\r\\n                            [attr.colspan]=\\\"a.colspan\\\" [style.max-width]=\\\"minuteCellWidth+'px'\\\"\\r\\n                            [style.min-width]=\\\"minuteCellWidth+'px'\\\">\\r\\n                            <div *ngFor=\\\"let m of a.appointments\\\" class=\\\"emptooltip\\\" (contextmenu)=\\\"showContextMenu($event, m)\\\">\\r\\n                                <div class=\\\"timeline\\\" [style.background] = \\\"getAppointmentBackground(m)\\\" \\r\\n                                [style.color]=\\\"getAppointmentTextColor(m)\\\" (click)=\\\"labelClickEvent(m.sid)\\\">\\r\\n                                    {{m.customer}}<br>{{m.service}}<br>{{m.room}}\\r\\n                                </div>\\r\\n                                <span *ngIf=\\\"IntegrateTreatmentWithAppointment\\\" class=\\\"tooltiptext\\\">\\r\\n                                    <table id=\\\"tooltipTable\\\">\\r\\n                                        <tr>\\r\\n                                            <td style=\\\"width: 100px\\\">\\r\\n                                                Patient</td>\\r\\n                                            <td style=\\\"font-weight: 600; width: 150px;\\\">\\r\\n                                                : {{m.customer}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td style=\\\"width: 100px\\\">\\r\\n                                                Service</td>\\r\\n                                            <td style=\\\"font-weight: 600; width: 150px;\\\">\\r\\n                                                : {{m.service}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td style=\\\"width: 100px\\\">\\r\\n                                                Time</td>\\r\\n                                            <td style=\\\"font-weight: 600; width: 150px;\\\">\\r\\n                                                : {{m.time}}</td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td colspan=\\\"2\\\">\\r\\n                                                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\"\\r\\n                                                    (click)=\\\"treatmentClickEvent(m.sid)\\\">Treatment</button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </table>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    </ng-container>\\r\\n                    \\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top:50px;\\\" *ngIf=\\\"DisplayRoomTimeLine\\\">\\r\\n        <table id=\\\"dayWiseSchedule\\\">\\r\\n            <tr>\\r\\n                <td rowspan=\\\"3\\\"\\r\\n                    style=\\\"color: black;font-size: 17px;font-weight: bold;text-shadow: 0px 1px 2px;width:100px\\\">\\r\\n                    Rooms Schedule</td>\\r\\n                <td [attr.colspan]=\\\"totalNoOfMinCell\\\">{{ScheduleDate | date:'EEEE, MMMM d, y'}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td [attr.rowspan]=\\\"roomList.length+3\\\">\\r\\n                    <div id=\\\"tblSchedule\\\" style=\\\"width:1000px; overflow:scroll\\\">\\r\\n                        <table>\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th *ngFor=\\\"let h of hourHeaderList\\\" [attr.colspan]=\\\"SectionPerHour\\\"\\r\\n                                        style=\\\" border: 1px solid #dcdcdc; \\\">{{h}}</th>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <th [style.max-width]=\\\"minuteCellWidth+'px'\\\"\\r\\n                                        [style.min-width]=\\\"minuteCellWidth+'px'\\\" style=\\\"border: 1px solid #dcdcdc;\\\"\\r\\n                                        *ngFor=\\\"let m of minList\\\"></th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let e of roomList\\\" style=\\\"border: 1px solid #dcdcdc;\\\">\\r\\n                                    <td [attr.colspan]=\\\"totalNoOfMinCell\\\">\\r\\n                                <tr>\\r\\n                                    <td id=\\\"tdDataCont\\\" (click)=\\\"roomCellClick(e)\\\" *ngFor=\\\"let m of e.minList\\\"\\r\\n                                        [attr.colspan]=\\\"m.colspan\\\" [style.max-width]=\\\"m.width\\\"\\r\\n                                        [style.min-width]=\\\"m.width\\\">\\r\\n                                        <label class=\\\"timeline\\\" *ngIf=\\\"m.booked==1\\\"\\r\\n                                            (click)=\\\"labelClickEvent(m.sid)\\\">{{m.room}}<br>{{m.service}}<br>{{m.customer}}</label>\\r\\n\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n    </td>\\r\\n    </tr>\\r\\n    <tr></tr>\\r\\n    <tr *ngFor=\\\"let e of roomList\\\" style=\\\"border: 1px solid #dcdcdc;\\\">\\r\\n        <td style=\\\"font-size:11px;font-weight:bold; height:52px\\\">{{e.ID}}({{e.NAME}})</td>\\r\\n    </tr>\\r\\n    <tr style=\\\"height:7px\\\">\\r\\n        <td>\\r\\n            <div style=\\\"height:5px\\\"></div>\\r\\n        </td>\\r\\n    </tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<!--<daypilot-scheduler [config]=\\\"config\\\" [events]=\\\"events\\\"  #scheduler></daypilot-scheduler>-->\\r\\n<!--<table>\\r\\n        <tr style=\\\"display: block; float: left;\\\">\\r\\n          <td rowspan=\\\"4\\\" colspan=\\\"4\\\" *ngFor=\\\"let h of hourHeaderList\\\" style=\\\" border: 1px solid #dcdcdc;display: block;height:100px\\\">{{h}}</td>\\r\\n        </tr>\\r\\n        <tr style=\\\"display: block; float: left;\\\">\\r\\n          <td *ngFor=\\\"let m of minList\\\" style=\\\" border: 1px solid #dcdcdc;display: block;height:25px;width:25px\\\"></td>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let e of employeeList\\\" style=\\\"display: block; float: left;\\\">\\r\\n\\r\\n          <td [attr.colspan]=\\\"totalNoOfMinCell\\\" style=\\\"display: block;\\\">\\r\\n            <tr style=\\\"display: block; float: left;margin-top:-2px\\\">\\r\\n              <td style=\\\"display: block;width:50px;height:25px\\\"  id=\\\"tdDataCont\\\" *ngFor=\\\"let m of e.minList\\\"  [style.max-height]=\\\"m.width\\\" [style.min-height]=\\\"m.width\\\"\\r\\n                (click)=\\\"CellClick(m)\\\">\\r\\n                <div ><label style=\\\"width:50px;background:brown\\\"  [style.height]=\\\"m.width\\\" *ngIf=\\\"m.booked==1\\\">{{m.room}}<br>{{m.service}}<br>{{m.customer}}</label></div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </td>\\r\\n        </tr>\\r\\n          <tr *ngFor=\\\"let e of roomList\\\" style=\\\"display: block; float: left;\\\">\\r\\n               <td [attr.colspan]=\\\"totalNoOfMinCell\\\" style=\\\"display: block;\\\">\\r\\n                    <tr style=\\\"display: block; float: left;margin-top:-2px\\\">\\r\\n                        <td style=\\\"display: block;width:50px;height:25px\\\" id=\\\"tdDataCont\\\" *ngFor=\\\"let m of e.minList\\\"  [style.max-height]=\\\"m.width\\\" [style.min-height]=\\\"m.width\\\">\\r\\n                            <div><label style=\\\"width:50px;background:brown\\\" *ngIf=\\\"m.booked==1\\\" [style.height]=\\\"m.width\\\">{{m.room}}{{m.service}}{{m.customer}}</label></div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </td>\\r\\n            </tr>\\r\\n\\r\\n      </table>-->\\r\\n\\r\\n\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"modal-title glyphicon glyphicon-warning-sign\\\" style=\\\"display:inline-block\\\"></div>\\r\\n                {{DialogMessage}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #scheduleInputModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n        <div #employeeEmailSchedule class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"scheduleInputModal.hide()\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Schedule:</h4>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"time\\\">Time</label>\\r\\n                    <!--<input type=\\\"input\\\" class=\\\"form-control\\\" id=\\\"time\\\" [(ngModel)]=\\\"scheduleInput.startTime\\\">-->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #ScheduleForMail=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"ScheduleForMail.hide()\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Employee Schedule:</h4>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\" style=\\\"overflow: scroll;\\\">\\r\\n                <div class=\\\"row\\\" id=\\\"employeeSchedule\\\"\\r\\n                    style=\\\" background: white;margin-left:20px;padding-right: 5px;width:750px; height: 400px;\\\">\\r\\n                    <label style=\\\"width:100%;font-weight: bold;font-size: 16px;text-decoration: underline;\\\">Date :\\r\\n                        {{rtFormat}} AD, {{rtFormatNepali}} BS </label>\\r\\n\\r\\n                    <div *ngIf=\\\"!(rt && rt.ROOMS ) || rt.ROOMS.length === 0\\\">\\r\\n                        <h1 style=\\\"margin-left:100px; margin-top:50px;\\\"> NO SCHEDULE</h1>\\r\\n                    </div>                    \\r\\n                    <div *ngFor=\\\"let r of rt.ROOMS\\\" style=\\\"margin-bottom:25px\\\" class=\\\"row\\\">\\r\\n                        <label\\r\\n                            style=\\\"width:100%;font-weight: bold;font-size: 14px;text-decoration: underline;\\\">{{r.ROOMNO}}</label><br>\\r\\n                        <div style=\\\"width:10%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Time </div>\\r\\n                        <div style=\\\"width:12%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Service</div>\\r\\n                        <div style=\\\"width:12%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Customer</div>\\r\\n                        <div style=\\\"width:11%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Mobile</div>\\r\\n                        <div style=\\\"width:15%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Employee</div>\\r\\n\\r\\n                        <div style=\\\"width:8%;float:left;font-weight: bold;font-size: 12px;text-decoration: underline;\\\">\\r\\n                            Fee</div>\\r\\n                        <div *ngFor=\\\"let t of r.BOOKEDTIMES\\\">\\r\\n                            <div style=\\\"clear:left\\\">\\r\\n                                <span style=\\\"width:10%;float:left;font-size: 12px;\\\">\\r\\n                                    {{t.STARTTIME}} &nbsp;&nbsp;</span>\\r\\n                                <span style=\\\"width:12%;float:left;font-size: 12px;\\\">{{t.SERVICE}}</span>\\r\\n                                <span style=\\\"width:12%;float:left;font-size: 12px;\\\">{{t.CUSTOMER}}</span>\\r\\n                                <span style=\\\"width:11%;float:left;font-size: 12px;\\\">{{t.MOBILE}}</span>\\r\\n                                <span style=\\\"width:15%;float:left;font-size: 12px;\\\">{{t.EMPLOYEE}}</span>\\r\\n                                <span *ngIf=\\\"t.TYPE!=null\\\"\\r\\n                                    style=\\\"width:8%;float:left;font-size: 12px;\\\">{{t.TYPE}}</span>\\r\\n                                <span *ngIf=\\\"t.TYPE==null\\\" style=\\\"width:8%;float:left;font-size: 12px;\\\">&nbsp;</span>\\r\\n                                <!-- <span\\r\\n                                    style=\\\"width:10%;float:left;font-size: 12px;color:blue;cursor: pointer; margin-left: 5px\\\"\\r\\n                                    (click)=\\\"labelClickEvent(t.SCHEDULEID)\\\">Details</span> -->\\r\\n                                <span class=\\\"target-light fa fa-ellipsis-h\\\"\\r\\n                                    style=\\\"width:10%;float:left;font-size: 12px;color:blue;cursor: pointer; margin-left: 5px\\\"\\r\\n                                    (click)=\\\"labelClickEvent(t.SCHEDULEID)\\\"></span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"sendEmail()\\\">Send Mail</button>\\r\\n                <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"downloadPDF()\\\">Download PDF</button>\\r\\n                <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\"\\r\\n                    (click)=\\\"ScheduleForMail.hide()\\\">Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<customer-all-schedule [mobile]=\\\"searchCustomer\\\" [date]=\\\"ScheduleDate\\\" #customerSchedule></customer-all-schedule>\\r\\n\\r\\n<timeline-context-menu #contextMenu (onAction)=\\\"onMenuAction($event)\\\"></timeline-context-menu>\\r\\n<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <ba-card title=\\\"Schedule Input\\\">\\r\\n      <div style=\\\"height: 100%;\\\">\\r\\n        <fieldset style=\\\" border: none;padding: 0; margin: 0;\\\" [disabled]=\\\"disableScheduleInput\\\">\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"IntegrateTreatmentWithAppointment || mode != 'add'\\\">\\r\\n            <table id=\\\"tblPatientInfo\\\">\\r\\n              <tr>\\r\\n                <td>{{'customer' | labelPipe}} Name</td>\\r\\n                <td>: {{scheduleInput.CUSTOMER?.NAME}}</td>\\r\\n                <td>Mobile No</td>\\r\\n                <td>: {{scheduleInput.CUSTOMER?.MOBILE}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Address</td>\\r\\n                <td>: {{scheduleInput.CUSTOMER?.ADDRESS}}</td>\\r\\n                <td>{{'customer' | labelPipe}} Id</td>\\r\\n                <td>: {{scheduleInput.CUSTOMER?.PATIENT_ID}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>Check In</td>\\r\\n                <td>: {{scheduleInput.checkInTime}}</td>\\r\\n                <td>Entry User</td>\\r\\n                <td>: {{scheduleInput.UserId}}</td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n          <customer-select (customerChanged)=\\\"customerChanged($event)\\\"\\r\\n            *ngIf=\\\"!IntegrateTreatmentWithAppointment && mode == 'add'\\\"></customer-select>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"miti\\\">Miti</label>\\r\\n                <nepali-date-picker name=\\\"nepaliDateFrom\\\" [id]=\\\"'nepaliDatefrom'\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.detail.value, 'BS')\\\" [label]=\\\"'yyyy-mm-dd'\\\"\\r\\n                  [(ngModel)]=\\\"ScheduleDateBS\\\">\\r\\n                </nepali-date-picker>\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-sm-12  col-md-3  col-lg-2 col-xxl-1\\\">\\r\\n                <label for=\\\"date\\\">Date</label>\\r\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" \\r\\n                  [disabled]=\\\"multipleServiceList.length>0 || mode=='edit'\\\" [(ngModel)]=\\\"scheduleInput.DATE\\\"\\r\\n                  (change)=\\\"changeEntryDate($event.target.value, 'AD')\\\">\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group col-sm-12  col-md-6 col-lg-4 col-xxl-3\\\">\\r\\n                <label for=\\\"outlet\\\">Outlet</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"outlet\\\" [(ngModel)] = \\\"scheduleInput.branch\\\"\\r\\n                (ngModelChange)=\\\"getServices(scheduleInput.branch.branchId)\\\">\\r\\n                    <option *ngFor = \\\"let branch of userBranches\\\" [ngValue]=\\\"branch\\\">{{branch.branchName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n            \\r\\n          <div class=\\\"row\\\" *ngIf=\\\"mode=='edit' && !enableCheckIn\\\">\\r\\n            <div class=\\\"form-group col-md-4 col-xl-3\\\">\\r\\n              <label for=\\\"Status\\\">Status</label>\\r\\n              <select class=\\\"form-control\\\" name=\\\"Status\\\" id=\\\"Status\\\" [(ngModel)]=\\\"scheduleInput.STATUS\\\">\\r\\n                <option *ngFor=\\\"let s of statusList\\\" [ngValue]=\\\"s.status\\\">{{s.description}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div style=\\\" border: 1px solid #dcdcdc;padding:10px;\\\" class=\\\"col-12 col-xxl-6\\\">\\r\\n            <fieldset style=\\\" border: none;padding: 0; margin: 0;\\\"\\r\\n              [disabled]=\\\"scheduleInput.DATE == null || scheduleInput.DATE == ''\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"sserviceselect\\\">Service</label>\\r\\n                  <angular2-multiselect [data]=\\\"ServiceList\\\" [settings]=\\\"serviceSetting\\\" (ngModelChange)=\\\"serviceChangeEvent($event)\\\" [(ngModel)]=\\\"selectedService\\\">\\r\\n                  </angular2-multiselect>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-2 col-lg-1\\\">\\r\\n                  <label for=\\\"pax\\\">Pax</label>\\r\\n                    <input  class=\\\"form-control\\\" name=\\\"pax\\\" id=\\\"pax\\\" (change)=\\\"paxChanged($event.target.value, multipleServiceObj.SERVICE.noOfEmployees)\\\" [(ngModel)]=\\\"multipleServiceObj.PAX\\\"/>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-lg-5 col-md-4\\\">\\r\\n                  <label for=\\\"employeeselect\\\" style=\\\"margin-left:10px\\\">Staff</label>\\r\\n                  <label style=\\\"width: 160px;font-size: 13px;margin-left:10px\\\">\\r\\n                    <input type=\\\"checkbox\\\" style=\\\"vertical-align: middle\\\"\\r\\n                      (change)=\\\"$event.target.checked?(multipleServiceObj.EMPLOYEE_BOOKED_BYCUSTOMER=1):(multipleServiceObj.EMPLOYEE_BOOKED_BYCUSTOMER=0)\\\"\\r\\n                      [checked]=\\\"multipleServiceObj.EMPLOYEE_BOOKED_BYCUSTOMER==1\\\"\\r\\n                      [disabled]=\\\"mode == 'edit' && multipleServiceObj.EMPLOYEE_BOOKED_BYCUSTOMER==1 && user.Role == 'user' && multipleServiceObj.SNO > 0\\\">\\r\\n                    Is Booked By {{'customer' | labelPipe}}\\r\\n                  </label>\\r\\n\\r\\n                  <angular2-multiselect [data]=\\\"employeeList\\\" [settings]=\\\"empSetting\\\" [(ngModel)]=\\\"multipleServiceObj.EMPLOYEE\\\">\\r\\n                  </angular2-multiselect>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"roomselect\\\">Room</label>\\r\\n                  <angular2-multiselect [data]=\\\"roomList\\\" [settings]=\\\"roomSetting\\\" [(ngModel)]=\\\"multipleServiceObj.ROOM\\\">\\r\\n                  </angular2-multiselect>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-12 col-md-6\\\">\\r\\n                  <label for=\\\"roomselect\\\">Fee</label>\\r\\n                  <select class=\\\"form-control\\\" name=\\\"typeselect\\\" id=\\\"typeselect\\\" [(ngModel)]=\\\"multipleServiceObj.TYPE\\\"\\r\\n                    (ngModelChange)=\\\"TypeChange(multipleServiceObj.TYPE)\\\">\\r\\n                    <option Value=\\\"NotPaid\\\">NotPaid </option>\\r\\n                    <option Value=\\\"Paid\\\">Paid</option>\\r\\n                    <option Value=\\\"Free\\\">Free</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"margin: 20px;\\\">\\r\\n                <button type=\\\"button\\\" *ngFor=\\\"let time of appTimeSlots\\\"\\r\\n                    class=\\\"btn btn-primary\\\" (click)=\\\"selectAppointmentTime(time)\\\" style=\\\"margin-right: 10px;\\\">{{time.time}}</button>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group col-12 col-md-10 col-sm-10 col-xs-8\\\">\\r\\n                  <label for=\\\"time\\\">Time</label>\\r\\n                  <!--<input type=\\\"input\\\" class=\\\"form-control\\\" id=\\\"time\\\" [(ngModel)]=\\\"scheduleInput.startTime\\\">-->\\r\\n                  <div class=\\\"demo row\\\">\\r\\n                    <div class=\\\"col-12 col-md-5 col-sm-4 col-xs-3\\\">\\r\\n                      <input type=\\\"time\\\" class=\\\"form-control\\\" style=\\\"width: 150px;\\\"\\r\\n                        (change)=\\\"starttimeChange($event.target.value)\\\" [(ngModel)]=\\\"StartTime\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-1 col-sm-1  col-xs-1\\\">\\r\\n                      <label style=\\\"margin: 10px;\\\">To</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-12 col-md-5 col-sm-4  col-xs-3\\\">\\r\\n                      <input type=\\\"time\\\" class=\\\"form-control\\\" style=\\\"width: 150px;\\\" disabled [(ngModel)]=\\\"EndTime\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-md-2 col-sm-2 col-xs-2\\\">\\r\\n                  <button type=\\\"button\\\"\\r\\n                    [disabled]=\\\"multipleServiceObj==null|| multipleServiceObj.SERVICE==null || multipleServiceObj.EMPLOYEE==null || multipleServiceObj.ROOM==null || scheduleInput.billableSchedule==1\\\"\\r\\n                    class=\\\"btn btn-primary\\\" (click)=\\\"AddClickEvent()\\\" style=\\\"margin-top:20px;\\\">Add</button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <Table id=\\\"BlueHeaderResizableTable\\\" style=\\\"width:100%;max-height:300px\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th style=\\\"width:30px\\\">SN.</th>\\r\\n                    <th style=\\\"width:35%\\\">Service</th>\\r\\n                    <th style=\\\"width:35%\\\">Therapist</th>\\r\\n                    <th style=\\\"width:20%\\\">Room</th>\\r\\n                    <th style=\\\"width:10%\\\">Time</th>\\r\\n                    <th style=\\\"width:60px\\\"></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody class=\\\"tabelRowWithAutoScroll\\\">\\r\\n                  <tr *ngFor=\\\"let ir of multipleServiceList;let i=index\\\" style=\\\"height:28px;font-size:small\\\">\\r\\n                    <td style=\\\"width:30px\\\">{{i+1}}</td>\\r\\n                    <td style=\\\"width:35%\\\">{{ir.SERVICE.DESCRIPTION}}</td>\\r\\n                    <td style=\\\"width:35%\\\">{{ir.EMPLOYEE.NAME}}</td>\\r\\n                    <td style=\\\"width:20%\\\">{{ir.ROOM.ROOMNO}}</td>\\r\\n                    <td style=\\\"width:10%\\\">{{ir.STARTTIME}}</td>\\r\\n                    <td>\\r\\n                      <button class=\\\"glyphicon glyphicon-edit\\\" (click)=\\\"editSchedule(i)\\\"\\r\\n                        [disabled]=\\\"scheduleInput.billableSchedule==1\\\"></button>\\r\\n                      <button class=\\\"glyphicon glyphicon-remove\\\" (click)=\\\"removeSchedule(ir.serviceGuid)\\\" style=\\\"float: right;\\\"\\r\\n                        [disabled]=\\\"(mode == 'edit' && ir.EMPLOYEE_BOOKED_BYCUSTOMER==1 && user.Role == 'user') || scheduleInput.billableSchedule==1\\\"></button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </Table>\\r\\n            </fieldset>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\r\\n          *ngIf=\\\"false && mode=='edit' && canBeBillable() && scheduleInput.billableSchedule!=1\\\" (click)=\\\"ProceedBill()\\\">\\r\\n          Proceed To Bill\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n          *ngIf=\\\"mode=='edit' && canBeBillable() && scheduleInput.billableSchedule==1\\\" (click)=\\\"CancelBill()\\\">\\r\\n          Cancel Bill\\r\\n        </button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveClickEvent()\\\"\\r\\n          [disabled]=\\\"multipleServiceList.length==0 || scheduleInput.CUSTOMER==null || scheduleInput.DATE==null ||disableScheduleInput || scheduleInput.billableSchedule==1\\\">Submit</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteConformation()\\\"\\r\\n          *ngIf=\\\"mode=='edit'&& disableScheduleInput==false && scheduleInput.billableSchedule!=1\\\">Delete</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Back</button>\\r\\n      </div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div bsModal #childEmployeeModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childEmployeeModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Replace Therapist</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <label for=\\\"employeeselectForEdit\\\">Available Therapist</label>\\r\\n        <select class=\\\"form-control\\\" name=\\\"employeeselectForEdit\\\" id=\\\"employeeselectForEdit\\\"\\r\\n          [(ngModel)]=\\\"ReplacedEmployee\\\">\\r\\n          <option *ngFor=\\\"let em of replacementEmployeeList\\\" [ngValue]=\\\"em\\\">{{em.NAME}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"saveChildModal(ReplacedEmployee)\\\">Save changes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Once you delete the schedule you can't recover it back. Are U sure you want to delete this Schedule?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport { Subscription } from \"rxjs\";\r\nimport { Employee, ScheduleInterface, Service, Room, Customer, HolidayModel, Branch } from '../../../../common/interfaces';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { DisableDateService } from '../../../../common/services/disable-date-picker/disable-date-picker.service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n    selector: 'schedule',\r\n    styleUrls: ['../../schedule.scss'],\r\n    templateUrl: './schedule.html',\r\n    providers: [DatePipe]\r\n})\r\nexport class ScheduleInput implements AfterViewInit {\r\n    @ViewChild('childEmployeeModal') childEmployeeModal: ModalDirective;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    mode: string = \"\";\r\n    modeTitle: string = '';\r\n    private returnUrl: string;\r\n    private subcriptions: Array<Subscription> = [];\r\n    scheduleInput: any = <any>{};\r\n    employeeBookedTimes: any = <any>{};\r\n    roomBookedDetails: any = <any>{};\r\n    user: any = {};\r\n    SNO: number = 0;\r\n    CustomerList: Customer[] = [];\r\n    ServiceList: Service[] = [];\r\n    roomList: any[] = [];\r\n    employeeList: any[] = [];\r\n    replacementEmployeeList: any[] = [];\r\n    bookedEmployee: any = <any>{};\r\n    multipleServiceList: any[] = [];\r\n    multipleServiceObj: any = <any>{PAX :1};\r\n    StartTime: any;\r\n    EndTime: any;\r\n    disableScheduleInput: boolean = false;\r\n    IntegrateTreatmentWithAppointment: boolean;\r\n    enableCheckIn:boolean = true;\r\n    statusList: any[] = [];\r\n\r\n    disabledDates: any[] = [];\r\n    holiday: HolidayModel;\r\n    formatDates: any[] = [];\r\n    userBranches : Branch[] = [];\r\n\r\n    ScheduleDateBS: string;\r\n    appTimeSlots : any[] = [];\r\n    empSetting = <any>{};\r\n    serviceSetting = <any>{};\r\n    roomSetting = <any>{};\r\n    selectedService:Service[];\r\n    constructor(\r\n        private _scheduleInputService: ScheduleInputService,\r\n        private router: Router,\r\n        private masterService: MasterRepo,\r\n        private elementRef: ElementRef,\r\n        private activatedRoute: ActivatedRoute,\r\n        private _authService: AuthService,\r\n        private disableDateService: DisableDateService,\r\n        private masterRepo: MasterRepo,\r\n        private datePipe: DatePipe\r\n    ) {\r\n\r\n        const setting = this._authService.getSetting();\r\n        this.IntegrateTreatmentWithAppointment = setting.IntegrateTreatmentWithAppointment;\r\n        if (!!this.activatedRoute.snapshot.params['returnUrl']) {\r\n            this.returnUrl = this.activatedRoute.snapshot.params['returnUrl'];\r\n        }\r\n        if (!!this.activatedRoute.snapshot.params['mode']) {\r\n            this.mode = this.activatedRoute.snapshot.params['mode'];\r\n        }\r\n        this.empSetting = {\r\n            enableCheckAll: true,\r\n            text: 'Select Employees',\r\n            enableSearchFilter: true,\r\n            labelKey:\"NAME\",\r\n            primaryKey:\"EMPLOYEEID\",\r\n            disabled:true\r\n        };\r\n        this.roomSetting = {\r\n            enableCheckAll: true,\r\n            text: 'Select Rooms',\r\n            enableSearchFilter: true,\r\n            labelKey:\"DESCRIPTION\",\r\n            primaryKey:\"ROOMNO\",\r\n            disabled:true\r\n        };\r\n        this.serviceSetting = {\r\n            enableFilterSelectAll: false,\r\n            text: 'Select Service',\r\n            enableSearchFilter: true,\r\n            labelKey:\"DESCRIPTION\",\r\n            primaryKey:\"SERVICEID\",\r\n            singleSelection:true,\r\n            showCheckbox:false,\r\n            disabled:true\r\n        };\r\n        this.paxChanged(1,1);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n    ngOnInit() {\r\n        this.roomList = [];\r\n        this.CustomerList = [];\r\n        this.employeeList = [];\r\n        this.ServiceList = [];\r\n        \r\n        let user = this._authService.getUserProfile();\r\n        this.userBranches = user.branches;\r\n        if(this.userBranches)\r\n            this.scheduleInput.branch = this.userBranches.find(x=>x.branchId === user.defaultBranch);        \r\n        this.getServices(user.defaultBranch);\r\n\r\n        if (this.masterService._customerList.length > 0) { this.CustomerList = this.masterService._customerList; }\r\n        else {\r\n            this.masterService.getCustomerList().subscribe((data) => {\r\n                this.CustomerList.push(<Customer>data);\r\n            },\r\n                Error => console.log(Error),\r\n                () => {\r\n                    this.masterService._customerList = this.CustomerList;\r\n                });\r\n        }\r\n       \r\n        this.user = this._scheduleInputService.getUser();\r\n\r\n        if (this.mode == \"edit\") {\r\n            let sid = this.activatedRoute.snapshot.params['id'];\r\n            this.masterService.postmaster(this.mode, { sid: sid }, \"/loadScheduleById\").subscribe(data => {\r\n                if (data.status == 'ok') {\r\n                    this.scheduleInput = <ScheduleInterface>data.result;\r\n                    this.scheduleInput.branch = this.userBranches.find(x=>x.branchId === this.scheduleInput.branch.branchId);  \r\n                    this.scheduleInput.DATE = this.scheduleInput.DATE.toString().substring(0, 10);\r\n                    this.multipleServiceList = this.scheduleInput.multipleServiceList;\r\n                    this.getStatusList();\r\n                    if (this.scheduleInput.billableSchedule == 1) {\r\n                        this.disableScheduleInput = true;\r\n                    }\r\n                    else { this.disableScheduleInput = false; }\r\n                    //  this.DialogMessage = \"Data Loaded Successfully.\"\r\n                    setTimeout(() => {\r\n                        //    this.childModal.hide();\r\n\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    this.showMessage(data.result);\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n        } else {\r\n            this._scheduleInputService.getGUID().subscribe((respose:any) => {\r\n                this.scheduleInput.GUID = respose.guid;\r\n            })\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subcriptions.forEach(sub => sub.unsubscribe());\r\n        this.subcriptions = [];\r\n        this.removeSchedule(null, false);\r\n    }\r\n\r\n    clearEmpRoom(){\r\n        this.employeeList = [];\r\n        this.roomList = [];\r\n        this.multipleServiceObj.ROOM = undefined;\r\n        this.multipleServiceObj.EMPLOYEE = undefined;\r\n    }\r\n\r\n    getServices(branchId :string){\r\n        this.masterService.getServices(branchId)            \r\n        .subscribe(services => {\r\n            this.ServiceList = services;\r\n            this.clearEmpRoom();\r\n        });\r\n    }\r\n\r\n    getEmployees(branchId : string, service : Service, sEmp: Number[] = null) {\r\n        this.masterService.getEmployeeListNew(branchId)            \r\n        .subscribe(response => {\r\n            let branchEmp = response;\r\n            let serviceEmp = service.employees;\r\n            this.employeeList = branchEmp.filter(bEmp => serviceEmp.some(emp => bEmp.EMPLOYEEID == emp.id));\r\n            if (sEmp) {\r\n                this.multipleServiceObj.EMPLOYEE = this.employeeList.filter(x => sEmp.some(emp => x.EMPLOYEEID == emp));\r\n            }\r\n        });\r\n    }\r\n\r\n    getRooms(branchId : string, service : Service, sRoom: Number[] = null){\r\n        this.masterService.getRoomListNew(branchId)            \r\n        .subscribe(response => {\r\n            let branchRoom = response;\r\n            let serviceRoom = service.rooms;\r\n            this.roomList = branchRoom.filter(bRoom => serviceRoom.some(room => bRoom.ROOMNO == room.id));\r\n            if (sRoom) {\r\n                this.multipleServiceObj.ROOM = this.roomList.filter(x => sRoom.some(room => x.ROOMNO == room));\r\n            }\r\n        });\r\n    }\r\n\r\n    changeEntryDate(value, format: string) {\r\n        if (format == \"AD\") {\r\n            this.ScheduleDateBS = this.masterService.toBSDate(value)\r\n        }\r\n\r\n        else if (format == \"BS\") {\r\n            this.scheduleInput.DATE = this.masterService.toADDate(value);\r\n        }\r\n        this.checkHoliday(this.scheduleInput.DATE, 0, \"00:00\", \"00:00\");\r\n        this.enableServiceDetail();\r\n    }\r\n\r\n    SaveClickEvent() {\r\n        this.scheduleInput.multipleServiceList = this.multipleServiceList;\r\n        this.showMessage(\"Saving Data please wait.\",-1);\r\n        this.onsubmit();\r\n    }\r\n\r\n    starttimeChange(value: string) {\r\n        if (value == null || value == \"\") return;\r\n        let timeComponent = value.split(':');\r\n        if (timeComponent) {\r\n            let hour = parseInt(timeComponent[0])\r\n            let min = parseInt(timeComponent[1].substring(0, 2))\r\n            if (timeComponent[1].toLowerCase().endsWith(\"pm\") && hour < 12)\r\n                hour += 12;\r\n\r\n            let ampm = \"am\";\r\n            if (timeComponent[1].length > 2)\r\n                ampm = timeComponent[1].substring(3, 2);\r\n\r\n            if (ampm.toLowerCase() == \"pm\" && hour < 12)\r\n                hour = hour + 12;\r\n            this.SetStartTime(hour, min);\r\n            console.log(this.multipleServiceObj);\r\n            if (this.multipleServiceObj.SERVICE != null) {\r\n                //  calculate end time as service duration            \r\n                min = min + this.multipleServiceObj.SERVICE.TIMEDURATION_MIN;\r\n                while (min >= 60) {\r\n                    hour = hour + 1;\r\n                    min = min - 60;\r\n                }\r\n                this.SetEndTime(hour, min);\r\n\r\n            }\r\n            else {\r\n                this.SetEndTime(0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    SetStartTime(hour, min) {\r\n        this.StartTime = hour.toString().padStart(2, '0') + \":\" + min.toString().padStart(2, '0')\r\n        this.multipleServiceObj.STARTTIME = this.GetTimeString(hour, min);\r\n    }\r\n\r\n    SetEndTime(hour, min) {\r\n        this.EndTime = hour.toString().padStart(2, '0') + \":\" + min.toString().padStart(2, '0')\r\n        this.multipleServiceObj.ENDTIME = this.GetTimeString(hour, min);\r\n    }\r\n\r\n    GetTimeString(hour, min) {\r\n        var ampm = \" AM\";\r\n        if (hour >= 12) {\r\n            if (hour > 12)\r\n                hour = hour - 12;\r\n            ampm = \" PM\";\r\n        }\r\n        return hour.toString().padStart(2, '0') + \":\" + min.toString().padStart(2, '0') + ampm;\r\n    }\r\n\r\n    TypeChange(value) {\r\n        console.log(\"type\", value);\r\n        this.multipleServiceObj.TYPE = value;\r\n    }\r\n\r\n    EmployeeChange(emp: Employee) {\r\n        this.getTimeSlotForAppointment();\r\n    }\r\n\r\n    RoomChange(room: Room) {\r\n        this.getTimeSlotForAppointment();\r\n    }\r\n\r\n    bookedEmployeeClickEvent(value) {\r\n        if (value.EMPLOYEE_BOOKED_BYCUSTOMER == 1) return;\r\n        this.bookedEmployee = value;\r\n        this.replacementEmployeeList = [];\r\n        this.childEmployeeModal.show();\r\n    }\r\n    saveChildModal(replacementEmp) {\r\n        this.childEmployeeModal.hide();\r\n        this.showMessage(\"Updating Data please wait.\",-1);\r\n        try {\r\n            let sub = this.masterService.postmaster(\"addEdit\", { replacementEmployee: replacementEmp, ToBeReplacedEmployee: this.bookedEmployee }, \"/postReplacementEmployee\")\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.showMessage(\"Data Exchanges Successfully\",1000)\r\n                    }\r\n                    else {\r\n                        this.showMessage(data.result)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    hideChildModal() {\r\n        this.childModal.hide();\r\n    }\r\n\r\n    onsubmit() {\r\n        try {\r\n            //console.log(\"finaldata\",this.scheduleInput);\r\n            let sub = this.masterService.postmaster(this.mode, this.scheduleInput, \"/saveSchedule\")\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.showMessage(\"Data Saved Successfully.\",1000);\r\n                        this.router.navigate([this.returnUrl]);\r\n                    }\r\n                    else {\r\n                        this.showMessage(data.result)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.router.navigate([this.returnUrl]);\r\n    }\r\n\r\n    async AddClickEvent() {\r\n        const serviceGuid = uuidv4();\r\n        try {               \r\n            var isEmpAvailable = true;\r\n            this.multipleServiceObj.EMPLOYEE.forEach(element => {\r\n                if(element.OFFDAY.find(x => x == this.getWeekDay(new Date(this.scheduleInput.DATE))))\r\n                    isEmpAvailable = false;\r\n            });\r\n            \r\n            if (!isEmpAvailable) {\r\n                if (this.user.Role == \"admin\") {\r\n                    if (!confirm('One or more Employee will not be available on selected date. Do you want to add anyway?'))\r\n                        return;\r\n                }\r\n                else {\r\n                    this.showMessage('One or more Employee will not be available on selected date.');\r\n                    return;\r\n                }\r\n            }\r\n            if (this.StartTime === undefined) {\r\n                this.showMessage('Please set Appointment Time first');\r\n                return;\r\n            }\r\n\r\n            if (!(await this.checkHoliday(this.scheduleInput.DATE, this.multipleServiceObj.EMPLOYEE.EMPLOYEEID, this.multipleServiceObj.STARTTIME, this.multipleServiceObj.ENDTIME)))\r\n                return;            \r\n\r\n            this.showMessage(\"Validting Data please wait.\",-1);\r\n\r\n            \r\n            const noOfService = this.multipleServiceObj.PAX * this.multipleServiceObj.SERVICE.noOfEmployees;\r\n            for (let i =0; i < noOfService;i++) {\r\n                const emp = this.multipleServiceObj.EMPLOYEE[i] || this.multipleServiceObj.EMPLOYEE[0];\r\n                const room = this.multipleServiceObj.ROOM[i] || this.multipleServiceObj.ROOM[0];\r\n                let data = {\r\n                    Date: this.scheduleInput.DATE,\r\n                    Service: this.multipleServiceObj.SERVICE,\r\n                    CustomerId: this.scheduleInput.CUSTOMER.CUSID,\r\n                    EmployeeId: emp.EMPLOYEEID,\r\n                    RoomNo: room.ROOMNO,\r\n                    STARTTIME: this.multipleServiceObj.STARTTIME,\r\n                    ENDTIME: this.multipleServiceObj.ENDTIME,\r\n                    StartTime: this.StartTime,\r\n                    EndTime: this.EndTime,\r\n                    GUID: this.scheduleInput.GUID,\r\n                    SNO: this.SNO + 1,\r\n                    ScheduleId: this.scheduleInput.ScheduleId,\r\n                    serviceGuid\r\n                }\r\n                let result = await this.masterService.postMasterAsync('validate', data, \"/ValidateSchedule\");\r\n            }\r\n\r\n            \r\n            for (let i =0; i < noOfService;i++) {\r\n                const emp = this.multipleServiceObj.EMPLOYEE[i] || this.multipleServiceObj.EMPLOYEE[0];\r\n                const room = this.multipleServiceObj.ROOM[i] || this.multipleServiceObj.ROOM[0];\r\n\r\n                let isAddOn:boolean = i % this.multipleServiceObj.SERVICE.noOfEmployees !=0;\r\n                this.multipleServiceList.push({...this.multipleServiceObj, SNO:++this.SNO, EMPLOYEE:emp, ROOM:room, isAddOn, serviceGuid});\r\n            }\r\n           \r\n            setTimeout(() => {\r\n                this.selectedService = <Service[]>[];\r\n                this.multipleServiceObj = <any>{PAX:1};\r\n                this.paxChanged(1,1);\r\n                this.SetStartTime(0, 0);\r\n                this.SetEndTime(0, 0);\r\n                this.childModal.hide();\r\n            }, 1000)\r\n        }\r\n        catch (e) {\r\n            console.log(\"Validate Appointment Error :\",e);\r\n            this.hideChildModal();\r\n            this.removeSchedule(serviceGuid, false);\r\n        }\r\n    }\r\n\r\n    onSearchChange(searchValue: string) {\r\n        var cus = this.CustomerList.find(x => x.MOBILE == searchValue);\r\n        if (cus != null)\r\n            this.scheduleInput.CUSTOMER = cus;\r\n    }\r\n\r\n    onBarcodeChange(searchValue: string) {\r\n        var cus = this.CustomerList.find(x => x.BARCODE == searchValue);\r\n        if (cus != null)\r\n            this.scheduleInput.CUSTOMER = cus;\r\n    }\r\n\r\n    editSchedule(index) {\r\n        try {\r\n            console.log(this.multipleServiceList[index]);\r\n            let selectedSchedule = this.multipleServiceList[index];\r\n            this.selectedService = [selectedSchedule.SERVICE];\r\n            this.multipleServiceObj = {\r\n                SERVICE: this.ServiceList.find(x => x.SERVICEID == selectedSchedule.SERVICE.SERVICEID),\r\n                SNO: selectedSchedule.SNO,\r\n                CUSTOMERID: selectedSchedule.CUSTOMERID,\r\n                STARTTIME: selectedSchedule.STARTTIME,\r\n                ENDTIME: selectedSchedule.ENDTIME,\r\n                EMPLOYEE_BOOKED_BYCUSTOMER: selectedSchedule.EMPLOYEE_BOOKED_BYCUSTOMER,\r\n                RATE: selectedSchedule.RATE,\r\n                TYPE: selectedSchedule.TYPE,\r\n                PAX: selectedSchedule.PAX,\r\n            };\r\n            let empList = this.multipleServiceList\r\n                              .filter(x=>x.guid == selectedSchedule.guid)\r\n                              .map(x=>x.EMPLOYEE.EMPLOYEEID);\r\n            console.log(\"empList\", empList);\r\n            this.paxChanged(this.multipleServiceObj.PAX, this.multipleServiceObj.SERVICE.noOfEmployees);\r\n            this.getEmployees(this.scheduleInput.branch.branchId, this.multipleServiceObj.SERVICE, empList);\r\n            this.getRooms(this.scheduleInput.branch.branchId, this.multipleServiceObj.SERVICE, [selectedSchedule.ROOM.ROOMNO]);\r\n\r\n            this.starttimeChange(selectedSchedule.STARTTIME);\r\n\r\n            this.removeSchedule(selectedSchedule.serviceGuid, false);\r\n            this.enableServiceDetail();\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    removeSchedule(serviceGuid:string, showMessage:boolean = true) {\r\n        const data = {\r\n            GUID: this.scheduleInput.GUID,\r\n            serviceGuid\r\n        }\r\n        if (showMessage)\r\n        this.showMessage(\"Removing Appointment please wait.\",-1);\r\n        let sub = this.masterService.postmaster('remove_row', data, \"/DeleteTempSchedule\")\r\n        .subscribe(data => {\r\n            //console.log(data);\r\n            if (data.status == 'ok') {\r\n                this.multipleServiceList = this.multipleServiceList.filter(x=>x.serviceGuid != serviceGuid);\r\n                if(showMessage)\r\n                    this.showMessage(\"Success\",1000);\r\n            }\r\n            else {\r\n                if(showMessage)\r\n                    this.showMessage(data.result);\r\n            }\r\n        });\r\n    }    \r\n\r\n    getWeekDay(date: Date): string {\r\n        switch (date.getDay()) {\r\n            case 0:\r\n                return \"sunday\";\r\n            case 1:\r\n                return \"monday\";\r\n            case 2:\r\n                return \"tuesday\";\r\n            case 3:\r\n                return \"wednesday\";\r\n            case 4:\r\n                return \"thursday\";\r\n            case 5:\r\n                return \"friday\";\r\n            case 6:\r\n                return \"saturday\";\r\n\r\n            default:\r\n                return \"saturday\";\r\n        }\r\n    }\r\n    \r\n    serviceChangeEvent(e) {\r\n        if(!this.scheduleInput.CUSTOMER) return;\r\n        this.multipleServiceObj.SERVICE = e[0]\r\n        this.multipleServiceObj.RATE = this.multipleServiceObj.SERVICE.RATE;\r\n\r\n        this.clearEmpRoom();\r\n        this.getEmployees( this.scheduleInput.branch.branchId, this.multipleServiceObj.SERVICE);\r\n        this.getRooms( this.scheduleInput.branch.branchId, this.multipleServiceObj.SERVICE);\r\n        this.getTimeSlotForAppointment();\r\n        this.paxChanged(this.multipleServiceObj.PAX, e[0].noOfEmployees);\r\n    }\r\n    canBeBillable() {\r\n        return (new Date() >= new Date(this.scheduleInput.DATE) && this._authService.getSetting().IntegratePos);\r\n    }\r\n    ProceedBill() {\r\n        this.scheduleInput.billableSchedule = 1;\r\n        this.SaveClickEvent();\r\n    }\r\n    CancelBill() {\r\n        this.scheduleInput.multipleServiceList = this.multipleServiceList;\r\n        this.showMessage(\"Saving Data please wait.\",-1);\r\n        try {\r\n            let sub = this.masterService.postmaster(this.mode, this.scheduleInput, \"/cancelBill\")\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        this.showMessage(\"Data Saved Successfully\", 1000);\r\n                    }\r\n                    else {\r\n                        this.showMessage(data.result);\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    DeleteConformation() {\r\n        this.deleteModal.show();\r\n    }\r\n    DeleteEvent() {\r\n        this.deleteModal.hide();\r\n        this.showMessage(\"Deleting this schedule please wait.\",-1);\r\n        let sub = this.masterService.postmaster('delete', this.scheduleInput, \"/DeleteSchedule\")\r\n            .subscribe(data => {\r\n                //console.log(data);\r\n                if (data.status == 'ok') {\r\n                    this.showMessage(\"Delete Successfull.\", 1000)                    ;\r\n                    this.router.navigate([this.returnUrl]);\r\n                }\r\n                else {\r\n                    this.showMessage(data.result);\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n    }\r\n\r\n    customerChanged(e) {\r\n        this.scheduleInput.CUSTOMER = e;\r\n    }\r\n\r\n    async checkHoliday(date, employee, startTime, endTime) {\r\n        var roleRes = this.masterService.getRole();\r\n        var roleJSON = JSON.parse(roleRes);\r\n        var res = await this._scheduleInputService.checkHoliday({ date, employee, startTime, endTime }).toPromise<any>();\r\n        if (res.status == \"ok\" && res.result == true) {\r\n            if (roleJSON.Role == \"admin\") {\r\n                if (confirm(\"Staff is not available for selected Date/Time. Do you still want to add appointment?\")){\r\n                    this.scheduleInput.OverrideHoliday = true;\r\n                    return true;\r\n                }\r\n                else return false;\r\n            }\r\n            else {\r\n                this.showMessage(\"Staff is not available for selected Date/Time.\",-1);\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getStatusList() {\r\n        this.statusList = [];\r\n        console.log(this.scheduleInput.STATUS);\r\n        switch (this.scheduleInput.STATUS) {\r\n            case 0:\r\n                this.statusList.push({ status: 1, description: \"Patient Arrived\" });\r\n                break;\r\n            case 1:\r\n                this.statusList.push({ status: 0, description: \"Initial\" });\r\n                this.statusList.push({ status: 2, description: \"Patient In Session\" });\r\n                break;\r\n            case 2:\r\n                this.statusList.push({ status: 0, description: \"Initial\" });\r\n                this.statusList.push({ status: 1, description: \"Patient Arrived\" });\r\n                this.statusList.push({ status: 3, description: \"Session Completed\" });\r\n                break;\r\n            case 3:\r\n                this.statusList.push({ status: 0, description: \"Initial\" });\r\n                this.statusList.push({ status: 1, description: \"Patient Arrived\" });\r\n                this.statusList.push({ status: 2, description: \"Patient In Session\" });\r\n                break;\r\n        }\r\n    }\r\n\r\n    getTimeSlotForAppointment(){\r\n        let model = {\r\n            customerId : this.scheduleInput.CUSTOMER.CUSID,\r\n            outletId : this.scheduleInput.branch.branchId,\r\n            serviceId : this.multipleServiceObj.SERVICE.SERVICEID,\r\n            appointmentDate : this.scheduleInput.DATE,\r\n            employeeId : 0,\r\n            roomNo :\"\"\r\n        }\r\n        if(this.multipleServiceObj.EMPLOYEE)\r\n            model.employeeId = this.multipleServiceObj.EMPLOYEE.EMPLOYEEID;\r\n        if(this.multipleServiceObj.ROOM)\r\n            model.roomNo = this.multipleServiceObj.ROOM.ROOMNO;\r\n        console.log(model);\r\n        this.masterService.getTimeSlotForAppointment(model)            \r\n        .subscribe((response: any) => {\r\n            this.appTimeSlots = <any[]>response.result;\r\n        });\r\n    }\r\n\r\n    selectAppointmentTime(time){\r\n        this.starttimeChange(time.time);\r\n        if(!this.multipleServiceObj.EMPLOYEE)\r\n            this.multipleServiceObj.EMPLOYEE = this.employeeList.find(x=>x.EMPLOYEEID == time.employeeId);\r\n        if(!this.multipleServiceObj.ROOM)\r\n            this.multipleServiceObj.ROOM = this.roomList.find(x=>x.ROOMNO == time.roomNo);\r\n    }\r\n\r\n    paxChanged(pax:number, noOfEmpRequred:number){\r\n        const totalEmp:number = noOfEmpRequred * pax;\r\n        this.empSetting = Object.assign({}, this.empSetting, {limitSelection:totalEmp});\r\n        this.roomSetting = Object.assign({}, this.roomSetting, {limitSelection:pax});\r\n    }\r\n\r\n    showMessage(message:string, closeAfter = 3000){\r\n        this.DialogMessage = message;\r\n        if(!this.childModal.isShown)\r\n            this.childModal.show();\r\n        if(closeAfter>=0){\r\n            setTimeout(() => {\r\n                this.childModal.hide();\r\n            }, closeAfter);\r\n        }\r\n    }\r\n\r\n    enableServiceDetail(){\r\n                this.serviceSetting = Object.assign({}, this.serviceSetting, {disabled:false});\r\n        this.empSetting = Object.assign({}, this.empSetting, {disabled:false});\r\n        this.roomSetting = Object.assign({}, this.roomSetting, {disabled:false});\r\n    }\r\n}\r\n","import { Component, ViewChild, Input } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from '../../../../common/interfaces/master.interface';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\n@Component({\r\n    selector: 'customer-all-schedule',\r\n    styleUrls: ['../../schedule.scss'],\r\n    templateUrl: './customer-all-schedule.html'\r\n})\r\nexport class CustomerAllSchedule {\r\n    @ViewChild('CustomerSchedule') childCustomerScheduleModal: ModalDirective;\r\n    @Input() mobile: string = \"\";\r\n    @Input() date: Date;\r\n    schedules: any[] = [];\r\n    Customer: Customer = <Customer>{};\r\n    ShowAll:boolean = false;\r\n\r\n    constructor(private router: Router, private scheduleService: ScheduleInputService) {\r\n        this.schedules = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.schedules = [];\r\n    }\r\n\r\n    showDialog() {\r\n        this.Customer = <Customer>{}\r\n        this.schedules = [];\r\n        this.ShowAll = false;\r\n        this.scheduleService.getCustomerSchedule({ FDate: this.date, CUSTOMER: this.mobile }).subscribe((response:any) => {\r\n            if (response.customer != null) {\r\n                this.schedules = response.schedule;\r\n                this.Customer.NAME = response.customer.name;\r\n                this.Customer.MOBILE = response.customer.mobile;\r\n            }\r\n            setTimeout(() => {\r\n                this.childCustomerScheduleModal.show();\r\n            }, 100);\r\n        }\r\n            , Error => {\r\n                try {\r\n                    let t = Error.json();\r\n                    //console.log(t);\r\n                    if (t.result == \"Authorization Failed\") {\r\n                        this.router.navigate(['/login', this.router.url]);\r\n                    }\r\n                    else {\r\n                        alert(\"Error in Loading Data:\" + t.result);\r\n                    }\r\n\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    labelClickEvent(id) {\r\n        this.router.navigate(['/pages/schedule/scheInput', { mode: \"edit\", id: id, returnUrl: this.router.url }])\r\n    }\r\n\r\n    CheckAllChanged(e: boolean) {\r\n        this.scheduleService.getCustomerSchedule({ FDate: (e ? new Date(2000, 1, 1) : this.date), CUSTOMER: this.mobile }).subscribe((response:any) => {\r\n            if (response.customer != null) {\r\n                this.schedules = response.schedule;\r\n                this.Customer.NAME = response.customer.name;\r\n                this.Customer.MOBILE = response.customer.mobile;\r\n                console.log(this.Customer);\r\n            }\r\n        }\r\n            , Error => {\r\n                try {\r\n                    let t = Error.json();\r\n                    //console.log(t);\r\n                    if (t.result == \"Authorization Failed\") {\r\n                        this.router.navigate(['/login', this.router.url]);\r\n                    }\r\n                    else {\r\n                        alert(\"Error in Loading Data:\" + t.result);\r\n                    }\r\n\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n}","module.exports = \"<div class=\\\"modal fade\\\" bsModal #CustomerSchedule=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"CustomerSchedule.hide()\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n                <h4 class=\\\"modal-title\\\">Patient Schedule:</h4>\\r\\n                \\r\\n                <label class=\\\"switch\\\" style=\\\"float: right; margin-left: 5px;\\\">\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"ShowAll\\\" (change)=\\\"CheckAllChanged($event.target.checked)\\\">\\r\\n                    <span class=\\\"slider round\\\"></span>\\r\\n                </label>\\r\\n                <label style=\\\"float: right;line-height: 20px;\\\">Show All</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"row\\\" id=\\\"customerSchedule\\\">\\r\\n                    <div class=\\\"col-5 col-sm-7 col-md-7\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <span class=\\\"input-group-addon\\\" id=\\\"basic-addon1\\\">Patient Name</span>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Customer.NAME\\\" readonly\\r\\n                                aria-label=\\\"Username\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-5 col-sm-5 col-md-5\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <span class=\\\"input-group-addon\\\" id=\\\"basic-addon1\\\">Mobile No</span>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Customer.MOBILE\\\" readonly\\r\\n                                aria-label=\\\"Username\\\" aria-describedby=\\\"basic-addon1\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <table class=\\\"table table-bordered table-hover\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Sn.</th>\\r\\n                            <th>Date</th>\\r\\n                            <th>Time</th>\\r\\n                            <th>Employee</th>\\r\\n                            <th>Service</th>\\r\\n                            <th>Room</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let t of schedules\\\">\\r\\n                            <td>1</td>\\r\\n                            <td>{{t.strDate}}</td>\\r\\n                            <td>{{t.STARTTIME}}</td>\\r\\n                            <td>{{t.EMPLOYEE}}</td>\\r\\n                            <td>{{t.SERVICE}}</td>\\r\\n                            <td>{{t.ROOMNO}}</td>\\r\\n                            <td> <span style=\\\"color:blue;cursor: pointer; margin-left: 5px\\\"\\r\\n                                    (click)=\\\"labelClickEvent(t._id)\\\">Details</span></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"CustomerSchedule.hide()\\\">Close</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\"","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ScheduleInputService } from '../../scheduleInput.service';\r\nimport { Subscription } from \"rxjs\";\r\nimport { ServerDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport { Treatment, ScheduleInterface, Customer, Employee, Prescription, Disease, Medication } from '../../../../common/interfaces';\r\nimport 'style-loader!../../schedule.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { AuthService } from '../../../../common/services/permission';\r\nimport { CustomerSelect } from '../CustomerSelect/customerSelect.component';\r\nimport { ReturnStatement } from '@angular/compiler/src/output/output_ast';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Component({\r\n    selector: 'treatment',\r\n\r\n    styleUrls: ['../../schedule.scss'],\r\n    templateUrl: './Treatment.html',\r\n\r\n})\r\nexport class TreatmentEntry {\r\n    @ViewChild('childPreviewModal') childPreviewModal: ModalDirective;\r\n    @ViewChild('childModal') childModal: ModalDirective;\r\n    @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n    @ViewChild(CustomerSelect) CustomerSelect: CustomerSelect\r\n\r\n\r\n    DialogMessage: string = \"Saving data please wait ...\"\r\n    mode: string = \"\";\r\n    modeTitle: string = '';\r\n    public codeValue: string;\r\n    newCurrentWeight: string;\r\n    private returnUrl: string;\r\n    private subcriptions: Array<Subscription> = [];\r\n    user: any = {};\r\n    SNO: number = 0;\r\n    PatientComplaint: string;\r\n    TreatmentNotes: string;\r\n    remarks: string;\r\n    //newCurrentWeight: string;\r\n    medication: string;\r\n    prescription: string;\r\n    eveningPrescription: string;\r\n    disease: string;\r\n    prescriptionList: Prescription[] = [];\r\n    diseaseList: Disease[] = [];\r\n    medicationList: Medication[] = [];\r\n    uploadFiles: any[];\r\n    notes: string;\r\n    contentUrl: string;\r\n    public _prescriptionList: Array<Prescription> = [];\r\n    uploadFilesUrl: string[] = [];\r\n    employeeList: Employee[] = [];\r\n    selectedImage: string = \"\";\r\n    selected_date: Date;\r\n    IntegrateTreatmentWithAppointment: boolean;\r\n    public model: Treatment = <Treatment>{\r\n        Patient: <Customer>{},\r\n        Healer: <Employee>{},\r\n        PatientComplaint: \"\",\r\n        TreatmentNotes: \"\",\r\n        Prescriptions: [],\r\n        Medications: [],\r\n        Diseases: [],\r\n        EveningPrescriptions: [],\r\n        TreatmentDocuments: [],\r\n        FollowUpPeriod: 0,\r\n        remarks: \"\"\r\n    };;\r\n\r\n\r\n    settings = {\r\n        mode: 'external',\r\n        actions: {\r\n            delete: false,\r\n            edit: false\r\n        },\r\n        view: {\r\n            viewButtonContent: '<i class=\"fa  fa-eye\"></i>'\r\n        },\r\n        pager: {\r\n            display: true, // set to false if no need for pagination \r\n            perPage: 5\r\n        },\r\n        columns: {\r\n            DATE: {\r\n                title: 'Date',\r\n                type: 'string',\r\n                valuePrepareFunction: (data) => {\r\n                    return data.substring(0, 10);\r\n                }\r\n                // valuePrepareFunction: (Patient) => {\r\n                //   return Patient.NAME;\r\n\r\n                // },\r\n                // filterFunction: (Patient, search: string) => {\r\n                //   if(search.length > 0){\r\n                //     return Patient.NAME.toLowerCase().match(search.toLowerCase());\r\n                //   }\r\n                //   else{\r\n                //     return Patient.NAME;\r\n                //   }\r\n                // }\r\n\r\n            },\r\n\r\n            Healer: {\r\n                title: 'Staff',\r\n                type: 'string',\r\n                valuePrepareFunction: (data) => {\r\n                    return data.NAME;\r\n                }\r\n                // filterFunction: (Patient, search: string) => {\r\n                //   if(search.length > 0){\r\n                //     return Patient.NAME.toLowerCase().match(search.toLowerCase());\r\n                //   }\r\n                //   else{\r\n                //     return Patient.NAME;\r\n                //   }\r\n                // }\r\n            },\r\n\r\n\r\n        }\r\n    };\r\n\r\n    editList(event) {\r\n        //console.log(event, \"ADDING?!?!?!\");\r\n        var modelHistory: Treatment;\r\n        modelHistory = <Treatment>event.data;\r\n        modelHistory.remarks = event.data.remarks;\r\n        modelHistory.Healer = <Employee>event.data.Healer;\r\n        modelHistory.PatientComplaint = event.data.PatientComplaint;\r\n        modelHistory.TreatmentNotes = event.data.TreatmentNotes;\r\n\r\n        this.printTreatmentEntry(modelHistory, false);\r\n\r\n        //console.log(\"THIS.MODEL\", this.model)\r\n    }\r\n\r\n    public ckPatientComplaintConfig = {\r\n        width: '100%',\r\n        height: 200,\r\n        allowedContent: false,\r\n        forcePasteAsPlainText: true,\r\n        font_names: 'Arial;Times New Roman;Verdana',\r\n        toolbarGroups: [\r\n            { name: 'document', groups: ['mode', 'document', 'doctools'] },\r\n            { name: 'clipboard', groups: ['clipboard', 'undo'] },\r\n            { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },\r\n            { name: 'forms', groups: ['forms'] },\r\n            '/',\r\n            { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },\r\n            { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },\r\n            { name: 'links', groups: ['links'] },\r\n            { name: 'insert', groups: ['insert'] },\r\n            '/',\r\n            { name: 'styles', groups: ['styles'] },\r\n            { name: 'colors', groups: ['colors'] },\r\n            { name: 'tools', groups: ['tools'] },\r\n            { name: 'others', groups: ['others'] },\r\n            { name: 'about', groups: ['about'] }\r\n        ],\r\n        removeButtons: 'Source,Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Strike,Subscript,Superscript,CopyFormatting,RemoveFormat,Outdent,Indent,CreateDiv,Blockquote,BidiLtr,BidiRtl,Language,Unlink,Anchor,Image,Flash,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Maximize,ShowBlocks,About'\r\n    };\r\n\r\n    public ckNotesRemarksConfig = {\r\n        width: '100%',\r\n        height: 150,\r\n        allowedContent: false,\r\n        forcePasteAsPlainText: true,\r\n        font_names: 'Arial;Times New Roman;Verdana',\r\n        toolbarGroups: [\r\n            { name: 'document', groups: ['mode', 'document', 'doctools'] },\r\n            { name: 'clipboard', groups: ['clipboard', 'undo'] },\r\n            { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },\r\n            { name: 'forms', groups: ['forms'] },\r\n            '/',\r\n            { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },\r\n            { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },\r\n            { name: 'links', groups: ['links'] },\r\n            { name: 'insert', groups: ['insert'] },\r\n            '/',\r\n            { name: 'styles', groups: ['styles'] },\r\n            { name: 'colors', groups: ['colors'] },\r\n            { name: 'tools', groups: ['tools'] },\r\n            { name: 'others', groups: ['others'] },\r\n            { name: 'about', groups: ['about'] }\r\n        ],\r\n        removeButtons: 'Source,Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Strike,Subscript,Superscript,CopyFormatting,RemoveFormat,Outdent,Indent,CreateDiv,Blockquote,BidiLtr,BidiRtl,Language,Unlink,Anchor,Image,Flash,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Maximize,ShowBlocks,About'\r\n    };\r\n\r\n    public ckTreatmentNoteConfig = {\r\n        width: '100%',\r\n        height: 200,\r\n        allowedContent: false,\r\n        forcePasteAsPlainText: true,\r\n        font_names: 'Arial;Times New Roman;Verdana',\r\n        toolbarGroups: [\r\n            { name: 'document', groups: ['mode', 'document', 'doctools'] },\r\n            { name: 'clipboard', groups: ['clipboard', 'undo'] },\r\n            { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },\r\n            { name: 'forms', groups: ['forms'] },\r\n            '/',\r\n            { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },\r\n            { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },\r\n            { name: 'links', groups: ['links'] },\r\n            { name: 'insert', groups: ['insert'] },\r\n            '/',\r\n            { name: 'styles', groups: ['styles'] },\r\n            { name: 'colors', groups: ['colors'] },\r\n            { name: 'tools', groups: ['tools'] },\r\n            { name: 'others', groups: ['others'] },\r\n            { name: 'about', groups: ['about'] }\r\n        ],\r\n        removeButtons: 'Source,Save,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Find,Replace,SelectAll,Scayt,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,Strike,Subscript,Superscript,CopyFormatting,RemoveFormat,Outdent,Indent,CreateDiv,Blockquote,BidiLtr,BidiRtl,Language,Unlink,Anchor,Image,Flash,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Maximize,ShowBlocks,About'\r\n    }\r\n    constructor(private _scheduleInputService: ScheduleInputService, private router: Router, private masterService: MasterRepo, private elementRef: ElementRef, private activatedRoute: ActivatedRoute, private _authService: AuthService, private http: HttpClient) {\r\n        var setting = _authService.getSetting();\r\n        this.IntegrateTreatmentWithAppointment = setting.IntegrateTreatmentWithAppointment;\r\n        if (!!this.activatedRoute.snapshot.params['returnUrl']) {\r\n            this.returnUrl = this.activatedRoute.snapshot.params['returnUrl'];\r\n        }\r\n        if (!!this.activatedRoute.snapshot.params['mode']) {\r\n            this.mode = this.activatedRoute.snapshot.params['mode'];\r\n        }\r\n\r\n        //this.model.DATE = new Date();\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.model.User = this._scheduleInputService.getUser();\r\n        let sid = this.activatedRoute.snapshot.params['id'];\r\n        //console.log({ beforeTreatment: this.mode });\r\n        if (this.mode != 'add') {\r\n            this.masterService.postmaster(this.mode, { sid: sid }, \"/loadTreatmentByScheduleId\").subscribe(data => {\r\n                //console.log(data);\r\n                if (data.status == 'ok') {\r\n                    if (data.result != null) {\r\n                        this.model = <Treatment>data.result;\r\n                        this.model.remarks = data.result.remarks;\r\n                    }\r\n                }\r\n                else {\r\n                    //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                    if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                        this.router.navigate(['/login', this.router.url]);\r\n                        return;\r\n                    }\r\n                    //Some other issues need to check\r\n                    //   this.DialogMessage = \"Error in Updaing Data:\" + data.result._body;\r\n                    //console.log(data.result._body);\r\n                    setTimeout(() => {\r\n                        //     this.childModal.hide();\r\n                    }, 3000)\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n        }\r\n        this.contentUrl = this.masterService.contentUrl;\r\n        setTimeout(() => {\r\n            this.historyChange(this.model.Patient.CUSID);\r\n            this.PatientComplaint = this.model.PatientComplaint;\r\n            this.TreatmentNotes = this.model.TreatmentNotes;\r\n            this.remarks = this.model.remarks;\r\n            //console.log(\"MODEL\", this.model)\r\n            //console.log('TREATMENT DOCUMENTS', this.model.TreatmentDocuments);\r\n            this.model.TreatmentDocuments.forEach(x => {\r\n                x = this.masterService.contentUrl + x;\r\n                //console.log('CONTENT URL AND DOCUMENTS', this.masterService.contentUrl, x   )\r\n                this.uploadFilesUrl.push(x);\r\n                //console.log(\"uploadFilesUrl ngOnInit\", this.uploadFilesUrl);\r\n\r\n            });\r\n            if (this.model.Patient.NAME == null && this.IntegrateTreatmentWithAppointment) {\r\n\r\n                this.masterService.postmaster(this.mode, { sid: sid }, \"/loadScheduleById\").subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //console.log(data);\r\n                        var schedule = <ScheduleInterface>data.result;\r\n                        this.model.Patient = schedule.CUSTOMER;\r\n                        this.model.Healer = schedule.multipleServiceList[0].EMPLOYEE;\r\n                        this.model.ScheduleId = sid;\r\n                        this.model.DATE = schedule.DATE;\r\n                        this.mode = \"add\";\r\n                    }\r\n                    else {\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url]);\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        //   this.DialogMessage = \"Error in Updaing Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            //     this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            }\r\n        }, 1000);\r\n\r\n\r\n        if (this.masterService._medicationList.length > 0) {\r\n            this.medicationList = this.masterService._medicationList;\r\n\r\n        }\r\n        else {\r\n            this.masterService.getMedicationList().subscribe((data) => {\r\n                this.medicationList.push(<Medication>data);\r\n\r\n            },\r\n                Error => console.log(Error),\r\n                () => {\r\n                    this.masterService._medicationList = this.medicationList;\r\n                });\r\n        }\r\n\r\n        if (this.masterService._diseaseList.length > 0) {\r\n            this.diseaseList = this.masterService._diseaseList;\r\n\r\n        }\r\n        else {\r\n            this.masterService.getDiseaseList().subscribe((data) => {\r\n                this.diseaseList.push(<Disease>data);\r\n\r\n            },\r\n                Error => console.log(Error),\r\n                () => {\r\n                    this.masterService._diseaseList = this.diseaseList;\r\n                });\r\n        }\r\n\r\n\r\n        if (this.masterService._employeeList.length > 0) {\r\n            this.employeeList = this.masterService._employeeList;\r\n\r\n        }\r\n        else {\r\n            this.masterService.getEmployeeList().subscribe((data) => {\r\n                this.employeeList.push(<Employee>data);\r\n\r\n            },\r\n                Error => console.log(Error),\r\n                () => {\r\n                    this.masterService._employeeList = this.employeeList;\r\n                });\r\n        }\r\n\r\n        if (this.masterService._prescriptionList.length > 0) {\r\n            this.prescriptionList = this.masterService._prescriptionList;\r\n        } else {\r\n            this.masterService.getPrescriptionList().subscribe((data) => {\r\n                this.prescriptionList.push(<Prescription>data);\r\n\r\n            },\r\n                Error => console.log(Error),\r\n                () => {\r\n                    this.masterService._prescriptionList = this.prescriptionList;\r\n                });\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        if (this.masterService._prescriptionList.length > 0) {\r\n            this.prescriptionList = this.masterService._prescriptionList;\r\n        } else {\r\n            this.masterService.getPrescriptionList().subscribe((data) => {\r\n                this.prescriptionList.push(<Prescription>data);\r\n\r\n            }, error => console.log(error),\r\n                () => {\r\n                    this.masterService._prescriptionList = this.prescriptionList;\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public rotationAmount: number = 0\r\n    onImageClick($direction) {\r\n        this.rotationAmount = this.rotationAmount + 90;\r\n        document.getElementById('image').style.transform = `rotate(${this.rotationAmount}deg)`;\r\n    }\r\n\r\n\r\n\r\n\r\n    SaveClickEvent() {\r\n        // // // this.scheduleInput.multipleServiceList = this.multipleServiceList;\r\n        // // // console.log(this.scheduleInput);\r\n        if (this.disease && this.disease !== \"\") {\r\n            this.DialogMessage = \"Please add pending Disease\";\r\n            this.childModal.show();\r\n            return;\r\n        }\r\n        if (this.medication && this.medication !== \"\") {\r\n            this.DialogMessage = \"Please add pending Medication\";\r\n            this.childModal.show();\r\n            return;\r\n        }\r\n        if (this.prescription && this.prescription !== \"\") {\r\n            this.DialogMessage = \"Please add pending Morning Prescription\";\r\n            this.childModal.show();\r\n            return;\r\n        }\r\n        if (this.eveningPrescription && this.eveningPrescription !== \"\") {\r\n            this.DialogMessage = \"Please add pending Evening Prescription\";\r\n            this.childModal.show();\r\n            return;\r\n        }\r\n        if (!this.model.Healer || !this.model.Healer.NAME || this.model.Healer.NAME === \"\") {\r\n            this.DialogMessage = \"Staff is not selected. Please select a staff and try again\";\r\n            this.childModal.show();\r\n            return;\r\n        }\r\n        this.DialogMessage = \"Saving Data please wait...\"\r\n        this.childModal.show();\r\n        this.onsubmit();\r\n    }\r\n\r\n    saveChildModal(replacementEmp) {\r\n        this.DialogMessage = \"Updating Data please wait...\"\r\n        this.childModal.show();\r\n    }\r\n\r\n    hideChildModal() {\r\n        this.childModal.hide();\r\n    }\r\n\r\n    sendEmail(model) {\r\n        if (confirm(\"Do you want to send Email?\")) {\r\n            //console.log(\"CONFIRM SEND EMAIL\")\r\n            this.masterService.sendTreatmentEmai(model);\r\n        }\r\n        else {\r\n            //console.log(\"DONT SEND EMAIL\")\r\n        }\r\n    }\r\n\r\n    onsubmit() {\r\n        try {\r\n            this.model.PatientComplaint = this.PatientComplaint;\r\n            this.model.TreatmentNotes = this.TreatmentNotes;\r\n            this.model.remarks;\r\n            // this.model.Diseases = this.dList;\r\n            // this.model.Medications = this.mList;\r\n            //console.log(this.masterService._customerList, \"customer list\")\r\n            if (this.mode == 'add') {\r\n                this.model.Patient.NAME = this.CustomerSelect.CustomerInput;\r\n                this.model.Patient.MOBILE = this.CustomerSelect.MobileInput;\r\n            }\r\n\r\n\r\n            //console.log(this.model, 'SAVE MODEL');\r\n\r\n            let sub = this.masterService.postform(this.mode, this.model, \"/saveTreatment\", this.uploadFiles)\r\n                .subscribe(data => {\r\n                    if (data.status == 'ok') {\r\n                        //console.log(\"data status ok ----\", data.status, \"------\", data)\r\n                        //Displaying dialog message for save with timer of 1 secs\r\n                        this.DialogMessage = \"Data Saved Successfully\"\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                            this.sendEmail(this.model)\r\n                            this.router.navigate([this.returnUrl]);\r\n                        }, 1000)\r\n\r\n                        //console.log(\"this.model\", this.model);\r\n\r\n                        this.printTreatmentEntry(this.model, true);\r\n\r\n                    }\r\n                    else {\r\n                        //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                        if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n                            this.router.navigate(['/login', this.router.url]);\r\n                            return;\r\n                        }\r\n                        //Some other issues need to check\r\n                        this.DialogMessage = \"Error in Saving Data:\" + data.result._body;\r\n                        //console.log(data.result._body);\r\n                        setTimeout(() => {\r\n                            this.childModal.hide();\r\n                        }, 3000)\r\n                    }\r\n                },\r\n                    error => { alert(error) }\r\n                );\r\n            this.subcriptions.push(sub);\r\n        }\r\n        catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n    onCancel() {\r\n\r\n        let new_date = this.masterService.getDate();\r\n\r\n        this.masterService.saveDate(new_date);\r\n\r\n        this.router.navigate([this.returnUrl]);\r\n    }\r\n    pcChange() {\r\n        // alert(\"editor changed\");\r\n        // console.log(\"editor changed\");\r\n        //this.model.PatientComplaint = rate;\r\n    }\r\n    canBeBillable() {\r\n        return (new Date() >= new Date(this.model.DATE));\r\n    }\r\n    ProceedBill() {\r\n        alert(this.model.PatientComplaint);\r\n        //this.scheduleInput.billableSchedule = 1;\r\n        //this.SaveClickEvent();\r\n    }\r\n\r\n\r\n    DeleteConformation() {\r\n        this.deleteModal.show();\r\n    }\r\n    DeleteEvent() {\r\n        this.deleteModal.hide();\r\n        this.DialogMessage = \"Deleting this schedule please wait...\";\r\n        this.childModal.show();\r\n        let sub = this.masterService.postmaster('delete', this.model, \"/DeleteSchedule\")\r\n            .subscribe(data => {\r\n                //console.log(data);\r\n                if (data.status == 'ok') {\r\n                    this.DialogMessage = \"Delete Successfull...\";\r\n                    this.childModal.hide();\r\n                    this.router.navigate([this.returnUrl]);\r\n                }\r\n                else {\r\n                    //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n                    if (data.result._body == \"Authorization Failed\") {\r\n                        this.router.navigate(['/login', this.router.url]);\r\n                        return;\r\n                    }\r\n                    //Some other issues need to check\r\n                    //console.log(data.result._body);\r\n                    this.childModal.hide();\r\n                }\r\n            },\r\n                error => { alert(error) }\r\n            );\r\n    }\r\n\r\n    addDisease(e) {\r\n        if (e.target.value !== \"\") {\r\n            if (e.key == \"Enter\") {\r\n                if (this.model.Diseases == null) {\r\n                    this.model.Diseases = [];\r\n                }\r\n                if (!this.model.Diseases.find(x => x == e.target.value)) {\r\n                    this.model.Diseases.push(e.target.value);\r\n\r\n                    let disease = this.diseaseList.filter(x => x.DESCRIPTION == e.target.value)[0];\r\n                    if (disease) {\r\n                        if (disease.Medications)\r\n                            disease.Medications.forEach(item => {\r\n                                if (!this.model.Medications.find(x => x.DESCRIPTION == item.DESCRIPTION))\r\n                                    this.model.Medications.push(item);\r\n                            });\r\n\r\n                        if (disease.Prescriptions)\r\n                            disease.Prescriptions.forEach(item => {\r\n                                if (!this.model.Prescriptions.find(x => x.DESCA == item.DESCA))\r\n                                    this.model.Prescriptions.push(item);\r\n                            });\r\n\r\n                        if (disease.eveningPrescriptions)\r\n                            disease.eveningPrescriptions.forEach(item => {\r\n                                if (!this.model.EveningPrescriptions.find(x => x.DESCA == item.DESCA))\r\n                                    this.model.EveningPrescriptions.push(item);\r\n                            });\r\n                    }\r\n                }\r\n                e.target.value = \"\";\r\n                this.disease = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    addMedication(e) {\r\n        if (e.target.value !== \"\") {\r\n            if (this.model.Medications == null) {\r\n                this.model.Medications = [];\r\n            }\r\n            if (!this.model.Medications.find(x => x.DESCRIPTION == e.target.value))\r\n                this.model.Medications.push(this.medicationList.find(x => x.DESCRIPTION == e.target.value));\r\n            e.target.value = \"\";\r\n            this.medication = \"\";\r\n        }\r\n    }\r\n\r\n    addPrescription(e, Prescriptions: Prescription[]) {\r\n        if (e.target.value !== \"\") {\r\n            if (Prescriptions == null) {\r\n                Prescriptions = [];\r\n            }\r\n            if (!Prescriptions.find(x => x.DESCA == e.target.value)) {\r\n                var pcptn = JSON.stringify(this.prescriptionList.find(x => x.DESCA == e.target.value))\r\n                Prescriptions.push(<Prescription>JSON.parse(pcptn));\r\n            }\r\n\r\n            e.target.value = \"\";\r\n            if (e.target.id == \"morningPrescription\")\r\n                this.prescription = \"\";\r\n            else\r\n                this.eveningPrescription = \"\";\r\n        }\r\n    }\r\n\r\n    onFileChanged(e) {\r\n        if (this.model.TreatmentDocuments == null) {\r\n            this.model.TreatmentDocuments = [];\r\n        }\r\n        if (this.uploadFiles == null) {\r\n            this.uploadFiles = [];\r\n        }\r\n        var length = e.target.files.length;\r\n        //console.log( e, e.target.value )\r\n        for (var i = 0; i < e.target.files.length; i++) {\r\n            //console.log('TARGET FILES ', e.target.files[i]);\r\n            this.uploadFiles.push(e.target.files[i]);\r\n            //this.model.TreatmentDocuments.push(e.target.value);    \r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(e.target.files[i]);\r\n            reader.onload = (_event) => {\r\n                var img = <string>reader.result;\r\n                this.uploadFilesUrl.push(img);\r\n            }\r\n        }\r\n\r\n        //console.log(this.uploadFiles, this.uploadFilesUrl);\r\n    }\r\n\r\n    previewImage(e) {\r\n        this.selectedImage = e.target.src;\r\n        this.childPreviewModal.show();\r\n    }\r\n\r\n    changeImage(e) {\r\n        this.selectedImage = e.target.src;\r\n\r\n\r\n    }\r\n    nextImage(e) {\r\n        var index = this.uploadFilesUrl.indexOf(this.selectedImage)\r\n        //console.log(\"Inde\",index)\r\n        this.selectedImage = this.uploadFilesUrl[index + 1];\r\n        //console.log(\"selectedImage\", this.selectedImage)\r\n\r\n    }\r\n    deleteImage(e) {\r\n\r\n        //console.log(\"DeleteImage\",e);\r\n\r\n        const index: number = this.model.TreatmentDocuments.indexOf(e);\r\n        if (index !== -1) {\r\n            this.model.TreatmentDocuments.splice(index, 1);\r\n        }\r\n        //console.log(\"Docs\",this.model.TreatmentDocuments);    \r\n    }\r\n\r\n\r\n    historySource: ServerDataSource;\r\n    historyChange(event) {\r\n        this.historySource = new ServerDataSource(this.http, {\r\n            endPoint: this.masterService.apiUrl + '/getPatientTreatmentHistory?id=' + event, //full-url-for-endpoint without any query strings \r\n            dataKey: 'data.result', //your-list-path-from-response , \r\n            pagerPageKey: 'currentPage', // your backend endpoint param excpected for page number key, \r\n            pagerLimitKey: 'maxResultCount', //your backend endpoint param excpected for page size\r\n            totalKey: 'data.total', //  total records returned in response path       \r\n        });\r\n    }\r\n\r\n    customerChanged(e) {\r\n        //console.log('new event', e);\r\n        // this.employeeList.push(e);\r\n        this.model.Patient = e;\r\n    }\r\n\r\n    customerWeight(event) {\r\n        this.newCurrentWeight = event;\r\n    }\r\n\r\n\r\n    headTable() {\r\n        let thead = \"\";\r\n        thead = thead + `THEAD <thead> <th style=\"height:10px; padding-top:50px;\" > fuck you </th> WORK ASSHOLE </thead> `\r\n        return thead;\r\n\r\n    }\r\n\r\n    printTreatmentEntry(data, print: boolean) {\r\n        //console.log(\"printTreatmentEntry Function\");\r\n        let popupWin;\r\n        let tableData = `<table style='width: 100%;font-size: 12px;\r\n            border-collapse: collapse;border-top: none;border: none;min-height:500px'>`\r\n        let body = this.body(data)\r\n        let prescriptions = this.prescriptions(data);\r\n        let medications = this.medications(data);\r\n        let diseases = this.diseases(data);\r\n\r\n        tableData = tableData + `<tbody>` + body + diseases + medications + prescriptions + this.cautions(data) + this.footer() + `\r\n        </tbody>` + `</table>`\r\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\r\n        popupWin.document.write(`\r\n        <html> \r\n            <head>\r\n                <title>Skin Care - Treatment History</title>\r\n                <style type=\"text/css\">\r\n                    td{ padding:2px; }\r\n                    ` + (print ? `@page{\r\n                        margin-top:50mm\r\n                    }`: ``) + `\r\n                </style>\r\n            </head>\r\n            <body ` + (print ? `onload=\"window.print();window.close();\"` : ``) + `>\r\n                ${tableData}\r\n                <div style=\"position: fixed;height: 50px;bottom: 0;\"></div>\r\n            </body>\r\n          </html>`\r\n        );\r\n        if (print)\r\n            popupWin.document.close();\r\n    }\r\n\r\n\r\n    public body(data) {\r\n        let tbody = \"\";\r\n        tbody = tbody + `\r\n\r\n        <tr>\r\n            <td colspan='5' style='font-size:14px;'><b>Patient Details</b></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan='1' style='font-size:12px;'><div style=\"width:120px\">Patient ID</div></td>\r\n            <td colspan='1' style='font-size:12px;'><b>:&nbsp;${data && data.Patient && data.Patient.CUSID}</b></td>     \r\n        </tr>\r\n        <tr>\r\n            <td colspan='1' style='font-size:12px;'>Patient Name</td>\r\n            <td colspan='1' style='font-size:12px; Width:40%;'><b>:&nbsp;${data && data.Patient && data.Patient.NAME}</b></td>\r\n            <td colspan='1' style='width:20%'></td>\r\n            <td colspan='1' style='font-size:12px;width:100px;'>Mobile No</td>\r\n            <td colspan='1' style='font-size:12px;; Width:40%;'><b>:&nbsp;${data && data.Patient && data.Patient.MOBILE}</b></td>        \r\n        </tr>   \r\n        <tr>\r\n            <td colspan='1' style='font-size:12px;'>Address</td>\r\n            <td colspan='1' style='font-size:12px;'><b>:&nbsp;${data && data.Patient && data.Patient.ADDRESS}</b></td>\r\n            <td colspan='1' style='width:20%'></td>\r\n            <td colspan='1' style='font-size:12px;'>Patient Age</td>\r\n            <td colspan='1' style='font-size:12px;'><b>:&nbsp;${data && data.Patient && data.Patient.Age ? data.Patient.Age : \"\"}</b></td>    \r\n        </tr>\r\n        <tr>\r\n            <td colspan='1' style='font-size:12px;'>Staff</td>\r\n            <td colspan='1' style='font-size:12px;'><b>:&nbsp;${data && data.Healer && data.Healer.NAME}</b></td>\r\n            <td colspan='1' style='width:20%'></td>\r\n            <td colspan='1' style='font-size:12px;'>Weight</td>\r\n            <td colspan='1' style='font-size:12px;'><b>:&nbsp;${data && data.Patient && data.Patient.Patient_Weight ? data.Patient.Patient_Weight : \"\"}</b></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan='5'><div style=\"height:10px\"></div</td>\r\n        </tr>\r\n  \r\n        <tr>\r\n            <td colspan='3' style='font-size:14px;padding-top:10px;'><b>Patient Complaint</b></td>\r\n            <td colspan='2' style='font-size:14px;padding-top:10px;'><b>Treatment Notes</b></td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan='3' style='font-size:12px;vertical-align: top;text-indent: 20px;'>${data && data.Patient && data.PatientComplaint}</td>\r\n            <td colspan='2' style='font-size:12px;vertical-align: top;text-indent: 20px;'>${data && data.Patient && data.TreatmentNotes}</td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan='5'><div style=\"height:10px\"></div</td>\r\n        </tr>   \r\n   \r\n   `\r\n\r\n        return tbody;\r\n    }\r\n\r\n\r\n    public diseases(data) {\r\n        var row = \"\";\r\n        //console.log(\"data.Diseases\", data.Diseases);\r\n        if (data.Diseases == null) {\r\n            data.Diseases = [];\r\n        }\r\n        if (data.Diseases.length > 0) {\r\n            row = row + `\r\n            <tr style=\"margin-top: 20px\" >\r\n                <td colspan='5' style='font-size:14px;padding-top:10px;'><b>Diagnosis</b></td>\r\n            </tr>\r\n            `\r\n            for (let i = 0; i < data.Diseases.length; i++) {\r\n                row = row + `\r\n            <tr>\r\n                <td colspan='5' style=\"text-indent:10px\">${i + 1}. ${data.Diseases[i]}</td>\r\n            <tr>\r\n            `\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n\r\n    public medications(data) {\r\n        var row = \"\";\r\n        //console.log(\"data.Medications\", data.Medications);\r\n        if (data.Medications == null) {\r\n            data.Medications = [];\r\n        }\r\n        if (data.Medications.length > 0) {\r\n            row = row + `\r\n            <tr style=\"margin-top: 10px\" >\r\n                <td colspan='5' style='font-size:14px;padding-top:10px;'><b>Medications </b></td>\r\n            </tr>\r\n            `\r\n            for (let i = 0; i < data.Medications.length; i++) {\r\n                row = row + `\r\n            <tr>\r\n                <td colspan='5' style=\"text-indent:10px\">${i + 1}. ${data.Medications[i].DESCRIPTION}</td>\r\n            <tr>\r\n            <tr>\r\n                <td colspan='5' style=\"text-indent:30px\"><i>${data.Medications[i].REMARKS ? data.Medications[i].REMARKS : \"\"}</i></td>\r\n            <tr>\r\n            `\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n    public prescriptions(data) {\r\n        var row = \"\";\r\n        row = row + `        \r\n            <tr>\r\n                <td colspan='2' style='vertical-align:top;border-style:solid;border-width:thin;'>\r\n                    <table >\r\n                        <tr>\r\n                            <td colspan='5' style='font-size:14px;padding-top:10px;'><b>Morning Routine </b></td>\r\n                        </tr>\r\n                        ${this.getPrescriptionForPrint(data.Prescriptions)}\r\n                    </table>\r\n                </td>\r\n                <td></td>\r\n                <td colspan='2' style='vertical-align:top;border-style:solid;border-width:thin;'>\r\n                    <table>\r\n                        <tr>\r\n                            <td colspan='5' style='font-size:14px;padding-top:10px;'><b>Evening Routine </b></td>\r\n                        </tr>\r\n                        ${this.getPrescriptionForPrint(data.EveningPrescriptions)}\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            `\r\n\r\n        return row;\r\n    }\r\n\r\n    public getPrescriptionForPrint(data: Prescription[]) {\r\n        var row = \"\";\r\n        var hasCautions;\r\n        if (data == null) {\r\n            data = [];\r\n        }\r\n        if (data.length > 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                row = row + `\r\n            <tr>\r\n                <td colspan='5' style='text-indent:10px'>${i + 1}. ${data[i].DESCA}</td>\r\n            <tr>\r\n            <tr>\r\n                <td colspan='5' style='text-indent:30px'><i>${data[i].directives ? data[i].directives : \"\"}</i></td>\r\n            <tr>\r\n            `\r\n\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n    public cautions(data) {\r\n        var row = \"\";\r\n        var rn = 1;\r\n        var cns = [];\r\n        row = row + `\r\n            <tr>\r\n            <td colspan='2' style='font-size:14px;padding-top:10px;'><b>Cautions </b></td>\r\n            </tr>\r\n            `\r\n        if (data.Prescriptions) {\r\n            for (let i = 0; i < data.Prescriptions.length; i++) {\r\n                if (data.Prescriptions[i].cautions && data.Prescriptions[i].cautions !== \"\" && !cns.find(x => x === data.Prescriptions[i].DESCA)) {\r\n                    row = row + `\r\n                    <tr>\r\n                        <td colspan='5' style='text-indent:10px'>${++rn}. ${data.Prescriptions[i].DESCA} : ${data.Prescriptions[i].cautions ? data.Prescriptions[i].cautions : \"\"}</td>\r\n                    <tr>\r\n                    `\r\n                    cns.push(data.Prescriptions[i].DESCA);\r\n                }\r\n            }\r\n        }\r\n        if (data.EveningPrescriptions) {\r\n            for (let i = 0; i < data.EveningPrescriptions.length; i++) {\r\n                if (data.EveningPrescriptions[i].cautions && data.EveningPrescriptions[i].cautions !== \"\" && !cns.find(x => x === data.EveningPrescriptions[i].DESCA)) {\r\n                    row = row + `\r\n                    <tr>\r\n                        <td colspan='5' style='text-indent:10px'>${++rn}. ${data.EveningPrescriptions[i].DESCA} : ${data.EveningPrescriptions[i].cautions ? data.EveningPrescriptions[i].cautions : \"\"}</td>\r\n                    <tr>\r\n                    `\r\n                    cns.push(data.EveningPrescriptions[i].DESCA);\r\n                }\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n    public footer() {\r\n        return `\r\n            <tr>\r\n                <td colspan='5' style='font-size:14px;padding-top:10px;'><b>Notes </b></td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan='5' style='text-indent:10px'>Follow up after 3 months</td>\r\n            <tr>\r\n            <tr>\r\n                <td colspan='5' style='text-indent:10px'>Consultation charge is valid till one month of your previous consultation date.</td>\r\n            <tr>\r\n            <tr>\r\n                <td colspan='5' style='text-indent:10px'>Contact 1 month prior for follow up appointment.</td>\r\n            <tr>`\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xlg-3 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\\\" style=\\\"width:100%;\\\">\\r\\n        <ba-card title=\\\"Patient Information\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"IntegrateTreatmentWithAppointment || mode != 'add'\\\">\\r\\n                    <table id=\\\"tblPatientInfo\\\">\\r\\n                        <tr>\\r\\n                            <td>Patient Name</td>\\r\\n                            <td>: {{model.Patient.NAME}}</td>\\r\\n                            <td>Mobile No</td>\\r\\n                            <td>: {{model.Patient.MOBILE}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Address</td>\\r\\n                            <td>: {{model.Patient.ADDRESS}}</td>\\r\\n                            <td>Patient Id</td>\\r\\n                            <td>: {{model.Patient.PATIENT_ID}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Age</td>\\r\\n                            <td>: {{model.Patient.Age}}</td>\\r\\n                            <td>Gender</td>\\r\\n                            <td>: {{model.Patient.GENDER}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Staff</td>\\r\\n                            <td>: {{model.Healer.NAME}}</td>\\r\\n                            <td>Weight</td>\\r\\n                            <td>: {{model.Patient.Patient_Weight}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>Membership</td>\\r\\n                            <td>: {{model.Patient.Membership}}</td>\\r\\n                            <td>Email</td>\\r\\n                            <td style=\\\"width: 35%;\\\">: {{model.Patient.EMAIL}}</td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!IntegrateTreatmentWithAppointment && mode == 'add'\\\">\\r\\n                    <customer-select (customerChanged)=\\\"customerChanged($event)\\\" (ncw)=\\\"customerWeight($event)\\\"\\r\\n                        (historyChange)=\\\"historyChange($event)\\\">\\r\\n                    </customer-select>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"employeeselect\\\" style=\\\"font-weight: 600;\\\">Staff</label>\\r\\n                        <div>\\r\\n                            <select class=\\\"form-control\\\" style=\\\"width: 200px;\\\" name=\\\"employeeselect\\\" id=\\\"employeeselect\\\"\\r\\n                                [(ngModel)]=\\\"model.Healer\\\">\\r\\n                                <option *ngFor=\\\"let em of employeeList\\\" [ngValue]=\\\"em\\\">{{em.NAME}}</option>\\r\\n                            </select>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ba-card>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xl-6\\\">\\r\\n                <ba-card title=\\\"Patient Complaint\\\">\\r\\n                    <ckeditor [config]=\\\"ckPatientComplaintConfig\\\" [(ngModel)]=\\\"PatientComplaint\\\">\\r\\n                        {{model.PatientComplaint}}\\r\\n                    </ckeditor>\\r\\n                </ba-card>\\r\\n            </div>\\r\\n            <div class=\\\"col-xl-6\\\">\\r\\n                <ba-card title=\\\"Treatment Notes\\\">\\r\\n                    <ckeditor [(ngModel)]=\\\"TreatmentNotes\\\" [config]=\\\"ckTreatmentNoteConfig\\\">{{model.TreatmentNotes}}\\r\\n                    </ckeditor>\\r\\n                </ba-card>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xl-6\\\">\\r\\n                <ba-card title=\\\"Disease & Medication\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"diseases\\\">Diseases: </label>\\r\\n\\r\\n                        <ol style=\\\"width: 300px\\\">\\r\\n\\r\\n                            <li style=\\\"display: flex;\\\" *ngFor=\\\"let e of model.Diseases;let i=index\\\">{{e}} <i\\r\\n                                    (click)=\\\"model.Diseases.splice($event.target.id,1)\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\" class=\\\"fa fa-times\\\"\\r\\n                                    aria-hidden=\\\"true\\\"></i> </li>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" list=\\\"diseasesCode\\\" [(ngModel)]=\\\"disease\\\"\\r\\n                                placeholder=\\\"Enter Disease\\\" (keyup.enter)=\\\"addDisease($event)\\\" />\\r\\n                            <small>Please press \\\"Enter\\\" to add Disease</small>\\r\\n\\r\\n                            <datalist id=\\\"diseasesCode\\\">\\r\\n                                <option *ngFor=\\\"let d of diseaseList\\\" [value]=\\\"d.DESCRIPTION\\\">{{d.DESCRIPTION}}\\r\\n                                </option>\\r\\n                            </datalist>\\r\\n\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"medication\\\">Medication: </label>\\r\\n\\r\\n                        <ol style=\\\"width: 300px\\\">\\r\\n\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" list=\\\"medicationsCode\\\" [(ngModel)]=\\\"medication\\\"\\r\\n                                placeholder=\\\"Enter Medication\\\" (keyup.enter)=\\\"addMedication($event)\\\" />\\r\\n                            <small>Please press \\\"Enter\\\" to add Medication</small>\\r\\n\\r\\n                            <datalist id=\\\"medicationsCode\\\">\\r\\n                                <option *ngFor=\\\"let d of medicationList\\\" [value]=\\\"d.DESCRIPTION\\\">{{d.DESCRIPTION}}\\r\\n                                </option>\\r\\n                            </datalist>\\r\\n                            <div *ngFor=\\\"let e of model.Medications;let i=index\\\">\\r\\n                                <h5 style=\\\"display: flex;\\\">\\r\\n                                    {{e.DESCRIPTION}} <i (click)=\\\"model.Medications.splice($event.target.id,1)\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n                                </h5>\\r\\n                                <p *ngIf=\\\"!e.RemarksEditable\\\" style=\\\"margin-left:20px; display: flex;\\\">{{e.REMARKS}}<i\\r\\n                                        (click)=\\\"e.RemarksEditable=true\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" *ngIf=\\\"e.RemarksEditable\\\" [(ngModel)]=\\\"e.REMARKS\\\" (keyup.enter)=\\\"e.RemarksEditable=false\\\" />\\r\\n                            </div>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n                </ba-card>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-xl-6\\\">\\r\\n                <ba-card title=\\\"Prescriptions\\\">\\r\\n                    <!-- Fix this code later : Amir May 30 2022 -->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"prescription\\\">Morning Prescriptions:</label>\\r\\n\\r\\n                        <ol style=\\\"width: 300px\\\">\\r\\n                            <input id=\\\"morningPrescription\\\" type=\\\"text\\\" class=\\\"form-control\\\" list=\\\"codes\\\" [(ngModel)]=\\\"prescription\\\"\\r\\n                                placeholder=\\\"Enter Prescriptions\\\" (keyup.enter)=\\\"addPrescription($event, model.Prescriptions)\\\" />\\r\\n                            <small>Please press \\\"Enter\\\" to add Prescription</small>\\r\\n                            <datalist id=\\\"codes\\\">\\r\\n                                <option *ngFor=\\\"let p of prescriptionList\\\" [value]=\\\"p.DESCA\\\">{{p.DESCA}}\\r\\n                                </option>\\r\\n                            </datalist>\\r\\n\\r\\n                            <div *ngFor=\\\"let e of model.Prescriptions;let i=index\\\">\\r\\n                                <h5 style=\\\"display: flex;\\\">\\r\\n                                    {{e.DESCA}} <i (click)=\\\"model.Prescriptions.splice($event.target.id, 1)\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n                                </h5>\\r\\n                                <p *ngIf=\\\"!e.DirectiveEditable\\\" style=\\\"margin-left:20px; display: flex;\\\">{{e.directives}}<i\\r\\n                                        (click)=\\\"e.DirectiveEditable=true\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" *ngIf=\\\"e.DirectiveEditable\\\" [(ngModel)]=\\\"e.directives\\\" (keyup.enter)=\\\"e.DirectiveEditable=false\\\" />\\r\\n                            </div>\\r\\n                        </ol>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"prescription\\\">Evening Prescriptions:</label>\\r\\n\\r\\n                        <ol style=\\\"width: 300px\\\">\\r\\n                            <input id=\\\"eveningPrescription\\\" type=\\\"text\\\" class=\\\"form-control\\\" list=\\\"codes\\\" [(ngModel)]=\\\"eveningPrescription\\\"\\r\\n                                placeholder=\\\"Enter Prescriptions\\\" (keyup.enter)=\\\"addPrescription($event, model.EveningPrescriptions)\\\" />\\r\\n                            <small>Please press \\\"Enter\\\" to add Prescription</small>\\r\\n                           \\r\\n\\r\\n                            <div *ngFor=\\\"let e of model.EveningPrescriptions;let i=index\\\">\\r\\n                                <h5 style=\\\"display: flex;\\\">\\r\\n                                    {{e.DESCA}} <i (click)=\\\"model.EveningPrescriptions.splice($event.target.id, 1)\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </h5>\\r\\n                                <p *ngIf=\\\"!e.DirectiveEditable\\\" style=\\\"margin-left:20px; display: flex;\\\">{{e.directives}}<i\\r\\n                                        (click)=\\\"e.DirectiveEditable=true\\\" id=\\\"{{i}}\\\" style=\\\"margin-left: auto;\\\"\\r\\n                                        class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i></p>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" *ngIf=\\\"e.DirectiveEditable\\\" [(ngModel)]=\\\"e.directives\\\" (keyup.enter)=\\\"e.DirectiveEditable=false\\\" />\\r\\n                            </div>\\r\\n                        </ol>\\r\\n                    </div>                    \\r\\n                    \\r\\n                </ba-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        <ba-card title=\\\"Followup & Session Documents\\\">\\r\\n            <div class=\\\"form-group\\\" style=\\\"display: inline-block; vertical-align: top;\\\">\\r\\n                <label for=\\\"followup\\\">Followup Period</label>\\r\\n                <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"model.FollowUpPeriod\\\" />\\r\\n            </div>\\r\\n            <div style=\\\"display: flex; margin-bottom: 10px; overflow: scroll; \\\">\\r\\n                <li *ngFor=\\\"let f of model.TreatmentDocuments\\\" style=\\\"margin-right: 5px;\\\">\\r\\n\\r\\n                    <button type=\\\"button \\\" class=\\\"btn btn-danger close-pdf\\\" (click)=\\\"deleteImage(f)\\\">x</button>\\r\\n\\r\\n                    <ng-container *ngIf=\\\"!f.endsWith('pdf')\\\">\\r\\n                        <img height=\\\"80px\\\" width=\\\"80px\\\" style=\\\"object-fit: contain;\\\" src=\\\"{{contentUrl + f}}\\\"\\r\\n                            (click)=\\\"previewImage($event)\\\" />\\r\\n                    </ng-container>\\r\\n\\r\\n                    <a *ngIf=\\\"f.endsWith('pdf')\\\" target=\\\"_blank\\\" href=\\\"{{contentUrl + f}}\\\">\\r\\n                        <img height=\\\"50px\\\"\\r\\n                            src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/833px-PDF_file_icon.svg.png\\\" />\\r\\n                    </a>\\r\\n\\r\\n                </li>\\r\\n            </div>\\r\\n            <!-- <img *ngFor=\\\"let e of uploadFilesUrl\\\" height=\\\"80px\\\" width=\\\"80px\\\" src=\\\"{{e}}\\\"\\r\\n            (click)=\\\"previewImage($event)\\\" /> -->\\r\\n            <input type=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\" multiple=\\\"multiple\\\" />\\r\\n            <!-- // <button type=\\\"button \\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeDocument(e)\\\">X</button>\\r\\n        </ba-card>\\r\\n        <ba-card title=\\\"NOTES & REMARKS\\\">\\r\\n            <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"model.remarks\\\">{{model.remarks}}</textarea>\\r\\n\\r\\n       // <button type=\\\"button \\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeDocument(e)\\\">X</button> -->\\r\\n        </ba-card>\\r\\n\\r\\n        <ba-card title=\\\"NOTES & REMARKS\\\">\\r\\n            <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"model.remarks\\\">{{model.remarks}}</textarea>\\r\\n        </ba-card>\\r\\n\\r\\n        <ba-card>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"SaveClickEvent()\\\">Submit</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"DeleteConformation()\\\" *ngIf=\\\"mode=='edit'\\\">Delete\\r\\n            </button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"mode!='add'\\\" (click)=\\\"printTreatmentEntry(model, true)\\\">Print</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Back</button>\\r\\n        </ba-card>\\r\\n\\r\\n        <!-- PATIENT HISTORY -->\\r\\n        <ba-card title=\\\"Patient Treatment History\\\">\\r\\n            <ng2-smart-table [settings]=\\\"settings\\\" [(source)]=\\\"historySource\\\" (view)=\\\"editList($event)\\\">\\r\\n            </ng2-smart-table>\\r\\n        </ba-card>\\r\\n    </div>\\r\\n\\r\\n    <!-- END FORM -->\\r\\n\\r\\n    <div bsModal #childPreviewModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childPreviewModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Treatment Documents</h4>\\r\\n                </div>\\r\\n                <button id=\\\"button\\\" class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"nextImage($event)\\\">Next</button>\\r\\n                <div id=\\\"container\\\" style=\\\"text-align: center;\\\">\\r\\n                    <img width=\\\"600px\\\" height=\\\"600px\\\" style=\\\"object-fit: contain;\\\" [src]=\\\"selectedImage\\\" id=\\\"image\\\"\\r\\n                        (click)=\\\"onImageClick($event)\\\" />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"modal-footer\\\" style=\\\"text-align: center;\\\">\\r\\n                    <img *ngFor=\\\"let e of uploadFilesUrl\\\" height=\\\"80px\\\" width=\\\"80px\\\" style=\\\"object-fit: contain;\\\"\\r\\n                        src=\\\"{{e}}\\\" (click)=\\\"changeImage($event)\\\" />\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    {{DialogMessage}}\\r\\n                </div>\\r\\n                <!--<div class=\\\"modal-footer\\\">\\r\\n                      <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"hideChildModal()\\\">Save changes</button>\\r\\n                      <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=onsubmit()>Save</button>\\r\\n                  </div>!-->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n        aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog modal-sm\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                    <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    Once you delete the schedule you can't recover it back. Are U sure you want to delete this\\r\\n                    Schedule?\\r\\n                </div>\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n                    <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\"","module.exports = \"<div class=\\\"widgets\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <!-- <button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onAddClick()\\\">New Treatment Entry</button> -->\\r\\n      <!-- <input type=\\\"date\\\" name=\\\"date\\\" id=\\\"date\\\" \\r\\n      (change)=\\\"OnDateChangeEvent($event.target.value)\\\" /> -->\\r\\n    </div>\\r\\n    <div>\\r\\n      <ba-card title=\\\"Treatment Details\\\" baCardClass=\\\"with-scroll\\\">\\r\\n        <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (delete)=\\\"onDeleteConfirm($event)\\\"\\r\\n          (view)=\\\"onViewClick($event)\\\"></ng2-smart-table>\\r\\n      </ba-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-md\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            \\r\\n          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"modal-title glyphicon glyphicon-warning-sign\\\" style=\\\"display:inline-block\\\"></div>\\r\\n          {{DialogMessage}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-sm\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                          </button>\\r\\n          <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          Once you delete the Treatment you can't recover it back. Are U sure you want to delete this Treatment?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n          <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n        </div>!\\r\\n  \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ngx-bootstrap'\r\nimport { ServerDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport 'style-loader!../../../masters/components/smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Treatment } from \"../../../../common/interfaces\"\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { CustomerSelect } from '../CustomerSelect/customerSelect.component';\r\nimport { BrowserXhr, CookieXSRFStrategy, Http, ResponseOptions, XHRBackend } from '@angular/http';\r\nimport { parseJSON } from 'jquery';\r\nimport { LabelPipe } from '../../../../theme/pipes/label.pipe';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'treatment-details',\r\n  templateUrl: './TreatmentDetails.component.html',\r\n  styleUrls: ['../../schedule.scss'],\r\n  providers: [],\r\n})\r\nexport class TreatmentDetails {\r\n  query: string = '';\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n  DialogMessage: string = \"You are not authorized\";\r\n\r\n  settings = {\r\n    mode: 'external',\r\n    columns: {\r\n      Patient: {\r\n        title: 'Patient',\r\n        type: 'string',\r\n      },\r\n      Healer: {\r\n        title: 'Staff',\r\n        type: 'string',\r\n      },\r\n\r\n      Mobile: {\r\n        title: 'Mobile',\r\n        type: 'string',\r\n      },\r\n      DATE: {\r\n        title: 'Date',\r\n        type: 'string'\r\n      },\r\n      Miti: {\r\n        title: 'Miti',\r\n        type: 'string'\r\n      },\r\n      hasDocument:{\r\n        title : 'Has Attachment',\r\n        type: 'text',\r\n        class: 'centeredColumn'\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n  private subcriptions: Array<Subscription> = [];\r\n  source: ServerDataSource;\r\n  constructor(private service: MasterRepo, private _authService: AuthService, private router: Router, private labelPipe:LabelPipe, private http: HttpClient) {\r\n    this.source = new ServerDataSource(http, {\r\n      endPoint: this.service.apiUrl + '/getTreatmentList', //full-url-for-endpoint without any query strings \r\n      dataKey: 'data.result', //your-list-path-from-response , \r\n      pagerPageKey: 'currentPage', // your backend endpoint param excpected for page number key, \r\n      pagerLimitKey: 'maxResultCount', //your backend endpoint param excpected for page size\r\n      totalKey: 'data.total', //  total records returned in response path       \r\n    });\r\n\r\n  }\r\n\r\n  setMode() {\r\n    // this.divService.create();\r\n    //this.settings.mode='inline';\r\n    //console.log(this.settings.mode);\r\n  }\r\n  onAddClick() {\r\n    if (this._authService.getUserProfile()) {\r\n      this.router.navigate(['/pages/schedule/treatment', { mode: \"add\", returnUrl: this.router.url }])\r\n\r\n    }\r\n    else {\r\n      this.DialogMessage = `You are not authorized to add ${this.labelPipe.transform('customer')}.`\r\n      this.childModal.show();\r\n    }\r\n  }\r\n  onDeleteConfirm(event): void {\r\n    this.selectedRow = event;\r\n    this.deleteModal.show();\r\n  }\r\n  selectedRow: any;\r\n  DeleteEvent() {\r\n    this.deleteModal.hide();\r\n    if (this._authService.getUserProfile() && this._authService.getUserProfile().Role == \"admin\") {\r\n      try {\r\n        this.DialogMessage = \"Deleting please wait...\"\r\n        this.childModal.show();\r\n        //console.log(\"delete\",this.selectedRow.data);\r\n        let sub = this.service.postmaster(\"delete\", {DocumentId : this.selectedRow.data.DocumentId}, \"/deleteTreatment\")\r\n\r\n          .subscribe(data => {\r\n            //console.log(\"sub\",sub);\r\n            // if (data.status == 'ok') {\r\n            //console.log(\"data\", data);\r\n\r\n\r\n            //Displaying dialog message for save with timer of 1 secs\r\n            if (data.status == \"ok\") {\r\n              this.DialogMessage = \"Data Deleted Successfully\";\r\n              if (this.service._customerList.length > 0) {\r\n                this.service._customerList.splice(this.service._customerList.indexOf(this.selectedRow.data), 1);\r\n                this.source.load(this.service._customerList);\r\n              }\r\n            } else {\r\n              var error = parseJSON(data.result._body);\r\n              this.DialogMessage = error.result;\r\n            }\r\n            setTimeout(() => {\r\n              this.childModal.hide();\r\n\r\n            }, 3000)\r\n            // }\r\n            // else {\r\n            //   //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n            //   if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n            //     this.router.navigate(['/login', this.router.url]);\r\n            //     return;\r\n            //   }\r\n            //   //Some other issues need to check\r\n            //   this.DialogMessage = \"Error in Deleting Data:\" + data.result._body;\r\n            //   console.log(data.result._body);\r\n            //   setTimeout(() => {\r\n            //     this.childModal.hide();\r\n            //   }, 3000)\r\n            // }\r\n          },\r\n            error => { alert(error) }\r\n          );\r\n        this.subcriptions.push(sub);\r\n      }\r\n      catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      this.DialogMessage = \"You are not authorize to delete the customer\";\r\n      this.childModal.show();\r\n    }\r\n  }\r\n\r\n  onViewClick(event): void {\r\n\r\n    this.router.navigate([\"/pages/schedule/treatment\", { id: event.data.DocumentId, mode: \"view\", returnUrl: this.router.url }]);\r\n  }\r\n\r\n  onEditClick(event): void {\r\n    this.router.navigate([\"/pages/schedule/treatment\", { id: event.data.DocumentId, mode: \"edit\", returnUrl: this.router.url }])\r\n  }\r\n\r\n  // OnDateChangeEvent(v) {\r\n  //   let Clist: Array<Treatment> = [];\r\n  //   var date = new DatePipe(\"en-US\").transform(v, \"MM/dd/yyyy\");\r\n  //   this.service.getTreatmentList(encodeURIComponent(date)).subscribe((data) => {\r\n  //     Clist.push(<Treatment>data);\r\n  //   },\r\n  //     Error => console.log(Error),\r\n  //     () => {\r\n  //       this.service._treatmentList = Clist;\r\n  //       this.source.load(Clist);\r\n  //     });\r\n  // }\r\n\r\n  // hideChildModal() {\r\n  //   this.childModal.hide();\r\n  // }\r\n\r\n}","module.exports = \"<div class=\\\"widgets\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" style=\\\"margin-bottom: 10px;margin-left:18px\\\" (click)=\\\"onAddClick()\\\">New Treatment Entry</button>\\r\\n    <input type=\\\"date\\\" name=\\\"date\\\" id=\\\"date\\\" \\r\\n    (change)=\\\"OnDateChangeEvent($event.target.value)\\\" />\\r\\n  </div>\\r\\n  <div>\\r\\n    <ba-card title=\\\"Treatments\\\" baCardClass=\\\"with-scroll\\\">\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (edit)=\\\"onEditClick($event)\\\" (delete)=\\\"onDeleteConfirm($event)\\\"\\r\\n        (view)=\\\"onViewClick($event)\\\"></ng2-smart-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-md\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>          \\r\\n        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Information</h4>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"modal-title glyphicon glyphicon-warning-sign\\\" style=\\\"display:inline-block\\\"></div>\\r\\n        {{DialogMessage}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" bsModal #deleteModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"deleteModal.hide()\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                        </button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Once you delete the Treatment you can't recover it back. Are U sure you want to delete this Treatment?\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" (click)=\\\"DeleteEvent()\\\">Yes</button>\\r\\n        <button class=\\\"btn btn-primary confirm-btn\\\" type=\\\"button\\\" (click)=\\\"deleteModal.hide()\\\">Cancel</button>\\r\\n      </div>!\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { AuthService } from \"./../../../../common/services/permission/authService.service\";\r\nimport { ModalDirective } from 'ngx-bootstrap'\r\nimport { LocalDataSource } from '../../../../ng2-smart-table/ng2-smart-table';\r\nimport 'style-loader!../../../masters/components/smartTables.scss';\r\nimport { MasterRepo } from \"../../../../common/repositories/masterRepo.service\";\r\nimport { Treatment } from \"../../../../common/interfaces\"\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from \"rxjs\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { LabelPipe } from '../../../../theme/pipes/label.pipe';\r\n\r\n\r\n@Component({\r\n  selector: 'treatment-list',\r\n  templateUrl: './TreatmentList.component.html',\r\n  providers: [],\r\n})\r\nexport class TreatmentList {\r\n  query: string = '';\r\n  @ViewChild('childModal') childModal: ModalDirective;\r\n  @ViewChild('deleteModal') deleteModal: ModalDirective;\r\n  DialogMessage: string = \"You are not authorized\";\r\n\r\n  settings = {\r\n    mode: 'external',\r\n    edit: {\r\n      editButtonContent: '<i class=\"fa  fa-pencil\"></i>'\r\n    },\r\n    view: {\r\n      viewButtonContent: '<i class=\"fa  fa-eye\"></i>'\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"ion-trash-a\"></i>',\r\n      confirmDelete: true\r\n    },\r\n    columns: {\r\n      Patient: {\r\n        title: 'Patient',\r\n        type: 'string',\r\n        valuePrepareFunction: (Patient) => {\r\n          return Patient.NAME;\r\n\r\n        },\r\n        filterFunction: (Patient, search: string) => {\r\n          if (search.length > 0) {\r\n            return Patient.NAME.toLowerCase().match(search.toLowerCase());\r\n          }\r\n          else {\r\n            return Patient.NAME;\r\n          }\r\n        }\r\n\r\n      },\r\n\r\n      Healer: {\r\n        title: 'Staff',\r\n        type: 'string',\r\n\r\n        valuePrepareFunction: (Patient) => {\r\n          return Patient.NAME;\r\n\r\n        },\r\n        filterFunction: (Patient, search: string) => {\r\n          if (search.length > 0) {\r\n            return Patient.NAME.toLowerCase().match(search.toLowerCase());\r\n          }\r\n          else {\r\n            return Patient.NAME;\r\n          }\r\n        }\r\n      },\r\n\r\n      Mobile: {\r\n        title: 'Mobile',\r\n        type: 'string',\r\n\r\n      },\r\n\r\n    }\r\n  };\r\n  private subcriptions: Array<Subscription> = [];\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: MasterRepo, private _authService: AuthService, private router: Router, private labelPipe:LabelPipe) {\r\n    let Clist: Array<Treatment> = [];\r\n\r\n    if (this.service.selected_Date != null) {\r\n      //console.log('VALIDATED');\r\n      // var date = new DatePipe(\"en-US\").transform(Date.now(), \"MM/dd/yyyy\");\r\n      //console.log(this.service.selected_Date, typeof this.service.selected_Date);\r\n      var date = this.service.getDate();\r\n      //console.log('saveDate',date,typeof date)\r\n\r\n      this.service.getTreatmentListDetails(encodeURIComponent(date)).subscribe((data) => {\r\n        Clist.push(<Treatment>data);\r\n      },\r\n        Error => console.log(Error),\r\n        () => {\r\n          //console.log(Clist, \"CLIST NG2\")\r\n          this.service._treatmentList = Clist;\r\n          this.source.load(Clist);\r\n        });\r\n\r\n    }\r\n\r\n    else {\r\n      var date = new DatePipe(\"en-US\").transform(Date.now(), \"MM/dd/yyyy\");\r\n\r\n      this.service.getTreatmentListDetails(encodeURIComponent(date)).subscribe((data) => {\r\n        Clist.push(<Treatment>data);\r\n      },\r\n        Error => console.log(Error),\r\n        () => {\r\n          this.service._treatmentList = Clist;\r\n          this.source.load(Clist);\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  onAddClick() {\r\n    if (this._authService.getUserProfile()) {\r\n      this.router.navigate(['/pages/schedule/treatment', { mode: \"add\", returnUrl: this.router.url }])\r\n\r\n    }\r\n    else {\r\n      this.DialogMessage = `You are not authorized to add ${this.labelPipe.transform('customer')}.`\r\n      this.childModal.show();\r\n    }\r\n  }\r\n  onDeleteConfirm(event): void {\r\n    this.selectedRow = event;\r\n    this.deleteModal.show();\r\n  }\r\n  selectedRow: any;\r\n  DeleteEvent() {\r\n    this.deleteModal.hide();\r\n    if (this._authService.getUserProfile() && this._authService.getUserProfile().Role == \"admin\") {\r\n      try {\r\n        this.DialogMessage = \"Deleting please wait...\"\r\n        this.childModal.show();\r\n        let sub = this.service.postmaster(\"delete\", this.selectedRow.data, \"/deleteTreatment\")\r\n          .subscribe(data => {\r\n            // if (data.status == 'ok') {\r\n            //console.log(\"data\", data);\r\n\r\n\r\n            //Displaying dialog message for save with timer of 1 secs\r\n            if (data.status == \"ok\") {\r\n              this.DialogMessage = \"Data Deleted Successfully\";\r\n              if (this.service._customerList.length > 0) {\r\n                this.service._customerList.splice(this.service._customerList.indexOf(this.selectedRow.data), 1);\r\n                this.source.load(this.service._customerList);\r\n              }\r\n            } else {\r\n              this.DialogMessage = \"An appointment has already been booked for this customer and cannot be deleted.\";\r\n            }\r\n            setTimeout(() => {\r\n              this.childModal.hide();\r\n\r\n            }, 3000)\r\n            // }\r\n            // else {\r\n            //   //the ConnectionString in the server is not initialized means the the token 's user is not int the list of database user so it could't make connectionstring. Re authorization is requierd\r\n            //   if (data.result._body == \"The ConnectionString property has not been initialized.\") {\r\n            //     this.router.navigate(['/login', this.router.url]);\r\n            //     return;\r\n            //   }\r\n            //   //Some other issues need to check\r\n            //   this.DialogMessage = \"Error in Deleting Data:\" + data.result._body;\r\n            //   console.log(data.result._body);\r\n            //   setTimeout(() => {\r\n            //     this.childModal.hide();\r\n            //   }, 3000)\r\n            // }\r\n          },\r\n            error => { alert(error) }\r\n          );\r\n        this.subcriptions.push(sub);\r\n      }\r\n      catch (e) {\r\n        alert(e);\r\n      }\r\n    } else {\r\n      this.DialogMessage = \"You are not authorize to delete the customer\";\r\n      this.childModal.show();\r\n    }\r\n  }\r\n\r\n  onViewClick(event): void {\r\n\r\n    this.router.navigate([\"/pages/schedule/treatment\", { id: event.data.DocumentId, mode: \"view\", returnUrl: this.router.url }]);\r\n  }\r\n\r\n  onEditClick(event): void {\r\n      this.router.navigate([\"/pages/schedule/treatment\", { id: event.data.DocumentId, mode: \"edit\", returnUrl: this.router.url }]);\r\n  }\r\n\r\n  OnDateChangeEvent(v) {\r\n    let Clist: Array<Treatment> = [];\r\n    //console.log('Before v:',v,typeof v);\r\n    // var date = new DatePipe(\"en-US\").transform(v, \"MM/dd/yyyy\"); \r\n    //console.log('After v:',v,typeof v);\r\n    // this.service.saveDate(date);\r\n    var date = v;\r\n    //console.log('before date:',date,typeof date)\r\n    this.service.saveDate(date);\r\n\r\n    this.service.getTreatmentListDetails(encodeURIComponent(date)).subscribe((data) => {\r\n      Clist.push(<Treatment>data);\r\n    },\r\n      Error => console.log(Error),\r\n      () => {\r\n        this.service._treatmentList = Clist;\r\n        this.source.load(Clist);\r\n      });\r\n  }\r\n\r\n  // hideChildModal() {\r\n  //   this.childModal.hide();\r\n  // }\r\n\r\n}","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector:'schedule',\r\n    template:'<router-outlet></router-outlet>'\r\n})\r\n\r\nexport class Schedule{\r\n    constructor(){};\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { ModalModule } from 'ngx-bootstrap';\r\nimport { Schedule } from './schedule.component';\r\nimport { routing } from './schedule.routing';\r\nimport { MasterSchedule } from './components/ScheduleInput/masterSchedule.component';\r\nimport { ScheduleInputService } from './scheduleInput.service';\r\nimport {CanActivateTeam} from '../../common/services/permission/guard.service';\r\nimport{ScheduleInput} from './components/ScheduleInput/scheduleInput.component';\r\nimport{TreatmentEntry} from './components/TreatmentEntry/Treatment.component';\r\nimport{FollowUp} from './components/FollowUp/followup.component';\r\nimport { CKEditorModule } from 'ng2-ckeditor';\r\nimport { Ng2SmartTableModule } from '../../ng2-smart-table/ng2-smart-table';\r\nimport { CustomerSelect } from './components/CustomerSelect/customerSelect.component';\r\nimport { TreatmentList } from './components/TreatmentEntry/TreatmentList.component';\r\nimport { TreatmentDetails } from './components/TreatmentEntry/TreatmentDetails.component';\r\nimport { CustomerPipe } from './components/CustomerSelect/customerSelect.pipe';\r\nimport { MobilePipe } from './components/CustomerSelect/mobileSelect.pipe';\r\nimport { NepaliDateModule } from '../../common/nepali-date-picker/nepali-date-picker.module';\r\nimport { CustomerAllSchedule } from './components/ScheduleSearch/customer-all-schedule.component';\r\nimport { CheckIn } from './components/CheckIn/checkIn.component';\r\nimport { CheckInList } from './components/CheckOut/CheckInList.component';\r\nimport { CheckOutEntry } from './components/CheckOut/CheckOut.component';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { AppointmentRequestList } from './components/AppointmentRequest/RequestList.component';\r\nimport { AppointmentRequest } from './components/AppointmentRequest/requestDetail.component';\r\nimport { KOTPrintComponent } from './components/CheckIn/kot-print.component';\r\nimport { TimelineContextMenuComponent } from './components/ScheduleInput/TimelineContextMenu/timelineContextMenu.component';\r\n//import {DayPilot} from \"daypilot-pro-angular\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgaModule,\r\n    routing,\r\n    CKEditorModule,\r\n    ModalModule.forRoot(),\r\n    Ng2SmartTableModule,\r\n    ReactiveFormsModule,\r\n    NepaliDateModule,\r\n    AngularMultiSelectModule\r\n    \r\n  ],\r\n  declarations: [\r\n   //   DayPilot.Angular.Scheduler,\r\n  //  DayPilot.Angular.Modal,\r\n  //  DayPilot.Angular.Navigator,\r\n    Schedule, MasterSchedule,ScheduleInput,\r\n    TreatmentEntry, FollowUp, CustomerSelect, TreatmentList, TreatmentDetails, \r\n    CustomerPipe, MobilePipe, CustomerAllSchedule,\r\n    CheckIn, CheckInList,CheckOutEntry, AppointmentRequestList, AppointmentRequest\r\n    ,KOTPrintComponent, TimelineContextMenuComponent \r\n    \r\n  ],\r\n  providers: [\r\n    ScheduleInputService,CanActivateTeam, KOTPrintComponent\r\n  ],\r\n})\r\nexport class ScheduleModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { CanActivateTeam } from '../../common/services/permission/guard.service';\r\nimport { Schedule } from './schedule.component';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { MasterSchedule } from './components/ScheduleInput/masterSchedule.component';\r\nimport { ScheduleInput } from './components/ScheduleInput/scheduleInput.component';\r\nimport { TreatmentEntry } from './components/TreatmentEntry/Treatment.component';\r\nimport { FollowUp } from './components/FollowUp/followup.component'\r\nimport { TreatmentList } from './components/TreatmentEntry/TreatmentList.component';\r\nimport { TreatmentDetails} from './components/TreatmentEntry/TreatmentDetails.component';\r\nimport { CheckIn } from './components/CheckIn/checkIn.component';\r\nimport { CheckInList } from './components/CheckOut/CheckInList.component';\r\nimport { CheckOutEntry } from './components/CheckOut/CheckOut.component';\r\nimport { AppointmentRequestList } from './components/AppointmentRequest/RequestList.component';\r\nimport { AppointmentRequest } from './components/AppointmentRequest/requestDetail.component';\r\n// noinspection TypeScriptValidateTypes\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Schedule,\r\n    children: [\r\n      { path: 'mastersche', component: MasterSchedule, canActivate: [CanActivateTeam] },\r\n      { path: 'scheInput', component: ScheduleInput, canActivate: [CanActivateTeam] },\r\n      { path: 'checkIn', component: CheckIn, canActivate: [CanActivateTeam] },\r\n      { path: 'check-in-list', component: CheckInList, canActivate: [CanActivateTeam] },\r\n      { path: 'checkOut', component: CheckOutEntry, canActivate: [CanActivateTeam] },\r\n      { path: 'treatment', component: TreatmentEntry, canActivate: [CanActivateTeam] },\r\n      { path: 'followup', component: FollowUp, canActivate: [CanActivateTeam] },\r\n      { path: 'treatment-list', component: TreatmentList, canActivate: [CanActivateTeam] },\r\n      { path: 'treatment-details', component: TreatmentDetails, canActivate: [CanActivateTeam] },\r\n      { path: 'appointment-requests', component: AppointmentRequestList, canActivate:[CanActivateTeam] },\r\n      { path: 'request-detail', component: AppointmentRequest, canActivate:[CanActivateTeam] }\r\n      // { path: 'schedule/scheInput', component: Schedule },\r\n    ]\r\n  },\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../common/services/permission/authService.service';\r\nimport { GlobalState } from '../../global.state';\r\nimport { Employee, ScheduleInterface, Service, Room, Customer } from '../../common/interfaces/index';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\n@Injectable()\r\nexport class ScheduleInputService {\r\n    private _scheduleList: any[] = [{}];\r\n    constructor(private http: HttpClient, private authService: AuthService, private state: GlobalState) { }\r\n    private get apiUrl(): string {\r\n        let url = this.state.getGlobalSetting(\"apiUrl\");\r\n        let apiUrl = \"\";\r\n\r\n        if (!!url && url.length > 0) { apiUrl = url[0] };\r\n        return apiUrl\r\n    }\r\n    private getRequestOption() {\r\n        let headers: HttpHeaders = new HttpHeaders({ 'Content-type': 'application/json', 'Authorization': this.authService.getAuth().token })\r\n        return { headers: headers };\r\n    }\r\n\r\n    public getUser() {\r\n        return this.authService.getUserProfile()\r\n    }\r\n\r\n    public getEmployeeSchedule(param: any) {\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.post(this.apiUrl + '/getEmpScheduleList', param, this.getRequestOption())\r\n        .subscribe((data) => {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            });\r\n        return returnSubject;\r\n    }\r\n\r\n    public getRoomSchedule(param: any) {\r\n        let returnSubject: Subject<any> = new Subject();\r\n        this.http.post(this.apiUrl + '/getRoomScheduleList', param, this.getRequestOption())\r\n        .subscribe((data) => {\r\n                returnSubject.next(data);\r\n                returnSubject.unsubscribe();\r\n            });\r\n        return returnSubject;\r\n    }\r\n\r\n    public getCustomerSchedule(param: any) {\r\n        return this.http.post(this.apiUrl + '/GetCustomerSchedule', param, this.getRequestOption())\r\n    }\r\n\r\n    public getGUID() {\r\n        return this.http.get(this.apiUrl + '/getGuid', this.getRequestOption());\r\n    }\r\n\r\n    public checkHoliday(param){\r\n        return this.http.post(this.apiUrl + '/checkHoliday', param, this.getRequestOption())       \r\n    }\r\n\r\n    public getTimeSlotForService(outletId: string, serviceId: number, appointmentDate: Date) {\r\n        let param = {\r\n            outletId: outletId,\r\n            serviceId: serviceId,\r\n            appointmentDate: appointmentDate\r\n        };\r\n        return this.http.post(this.apiUrl + '/getTimeSlotForService', param, this.getRequestOption())\r\n    }\r\n   \r\n}","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));"],"sourceRoot":""}